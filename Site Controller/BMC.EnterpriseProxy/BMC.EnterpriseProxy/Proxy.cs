//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 

using System;
using System.Data;
using System.Net;
using BMC.Common;
using BMC.Common.Security;
using BMC.Common.ConfigurationManagement;
using BMC.Common.ExceptionManagement;
using BMC.Common.LogManagement;
using BMC.DataAccess;


using Microsoft.Win32;
using BMC.Common.Utilities;
using System.Security.Cryptography.X509Certificates;


namespace BMC.Business.CashDeskOperator.WebServices
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

    [System.ComponentModel.DesignerCategory("code")]
    [System.Web.Services.WebServiceBinding(Name = "EnterpriseWebServiceSoap", Namespace = "http://tempuri.org/")]
    public class Proxy : System.Web.Services.Protocols.SoapHttpClientProtocol
    {
        private static string _connectionString = string.Empty;
        private AuthenticationInformation authenticationInformationValueField;

        private System.Threading.SendOrPostCallback ImportPasswordChangeOperationCompleted;

        private System.Threading.SendOrPostCallback ImportDataOperationCompleted;

        private System.Threading.SendOrPostCallback ValidateUserOperationCompleted;

        private System.Threading.SendOrPostCallback ImportCompressedDataOperationCompleted;

        private System.Threading.SendOrPostCallback LogSiteEventOperationCompleted;

        private System.Threading.SendOrPostCallback HelloWebServiceOperationCompleted;

        private System.Threading.SendOrPostCallback ImportHourlyStatisticsDataOperationCompleted;

        private System.Threading.SendOrPostCallback InsertTreasuryEntriesOperationCompleted;

        private System.Threading.SendOrPostCallback InsertReadOperationCompleted;

        private System.Threading.SendOrPostCallback CreateInstallationOperationCompleted;

        private System.Threading.SendOrPostCallback EnhancedEnrollmentForOfflineOperationCompleted;

        private System.Threading.SendOrPostCallback CloseInstallationOperationCompleted;

        private System.Threading.SendOrPostCallback ConvertInstallationOperationCompleted;

        private System.Threading.SendOrPostCallback SwapInstallationOperationCompleted;

        private System.Threading.SendOrPostCallback ImportInstallationUpdateOperationCompleted;

        private System.Threading.SendOrPostCallback ImportEmployeeCardSessionDataOperationCompleted;

        private System.Threading.SendOrPostCallback GetInstallationNumberOperationCompleted;

        private System.Threading.SendOrPostCallback ImportMeterHistoryOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateBarPositionCentralStatusBySiteIDOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateSiteStatsInEnterpriseOperationCompleted;

        private System.Threading.SendOrPostCallback GetPlannedConversionOperationCompleted;

        private System.Threading.SendOrPostCallback PlannedConversionOperationCompleted;

        private System.Threading.SendOrPostCallback GetCurrentServiceCallsOperationCompleted;

        private System.Threading.SendOrPostCallback GetOpenServiceCallsOperationCompleted;

        private System.Threading.SendOrPostCallback GetServiceNotesOperationCompleted;

        private System.Threading.SendOrPostCallback CloseServiceCallOperationCompleted;

        private System.Threading.SendOrPostCallback InsertServiceNotesOperationCompleted;

        private System.Threading.SendOrPostCallback EscalateServiceOperationCompleted;

        private System.Threading.SendOrPostCallback GetBarPositionStatusOperationCompleted;

        private System.Threading.SendOrPostCallback GetWeeklyCollectionDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetHqInstallationIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetCashDeskServiceFaultsOperationCompleted;

        private System.Threading.SendOrPostCallback GetRemediesOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateInstallationGameOperationCompleted;

        private System.Threading.SendOrPostCallback GetAssetDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportSiteSettingsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportVoucherDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportTicketExceptionDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportPromotionsDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportPromotionalTicketsDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportDeviceDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback InsertHandpayOperationCompleted;

        private System.Threading.SendOrPostCallback InitiateWebServiceOperationCompleted;

        private System.Threading.SendOrPostCallback CheckTransactionKeyOperationCompleted;

        private System.Threading.SendOrPostCallback CheckLicenseKeyOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateLicenseActivationOperationCompleted;

        private System.Threading.SendOrPostCallback GetSiteDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetInstallationDataOperationCompleted;

        private System.Threading.SendOrPostCallback GetAAMSDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetInstallationGameInfoOperationCompleted;

        private System.Threading.SendOrPostCallback GetZonesDataOperationCompleted;

        //private System.Threading.SendOrPostCallback GetSiteAllianceDataOperationCompleted;

        private System.Threading.SendOrPostCallback GetBarPositionsDataOperationCompleted;

        private System.Threading.SendOrPostCallback GetMachineDataOperationCompleted;

        private System.Threading.SendOrPostCallback GetLatestMeterHistoryOperationCompleted;

        private System.Threading.SendOrPostCallback GetLatestSiteBatchIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetSiteTicketsOperationCompleted;

        private System.Threading.SendOrPostCallback GetSiteTicketExceptionsOperationCompleted;

        //private System.Threading.SendOrPostCallback GetSitePromotionsOperationCompleted;

        private System.Threading.SendOrPostCallback GetSiteDeviceDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetSiteWorkstationDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetHandpaysOperationCompleted;

        private System.Threading.SendOrPostCallback GetCashDeskTransactionsOperationCompleted;

        private System.Threading.SendOrPostCallback GetCollectionsOperationCompleted;

        private System.Threading.SendOrPostCallback GetDailyReadsOperationCompleted;

        private System.Threading.SendOrPostCallback GetHourlyOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllEventsOperationCompleted;

        private System.Threading.SendOrPostCallback GetSystemSettingsOperationCompleted;

        private System.Threading.SendOrPostCallback GetLookupMasterSettingsOperationCompleted;

        private System.Threading.SendOrPostCallback SetSiteStatusEnterpriseOperationCompleted;

        private System.Threading.SendOrPostCallback GetOtherMachineDetailsForRecoveryOperationCompleted;

        private System.Threading.SendOrPostCallback ResetTransactionKeyOperationCompleted;

        private System.Threading.SendOrPostCallback GetMultiGameInstallIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetGameLibraryIDOperationCompleted;

        private System.Threading.SendOrPostCallback CheckNGAOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllUserDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllUserRolesOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllUserRolesLinksOperationCompleted;

        private System.Threading.SendOrPostCallback GetCalendarsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportPaytableDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback InsertInstallationGameInfoOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateDetailsFromXMLOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateDenomChangeOperationCompleted;

        private System.Threading.SendOrPostCallback ImportGameCappingOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllObjectsOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllRoleAccessObjectRightLnkOperationCompleted;

        private System.Threading.SendOrPostCallback GetComponentDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetOtherGameDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetGameLibraryOperationCompleted;

        private System.Threading.SendOrPostCallback GetPayTableOperationCompleted;

        private System.Threading.SendOrPostCallback GetInstallationGamePayTableInfoOperationCompleted;

        private System.Threading.SendOrPostCallback GetSeedValuesOperationCompleted;

        private System.Threading.SendOrPostCallback GetActiveSiteDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetInTransitAssetforSiteOperationCompleted;

        private System.Threading.SendOrPostCallback ImportInstallationGameDataOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateGMUNumberOperationCompleted;

        private System.Threading.SendOrPostCallback ImportSiteConfigOperationCompleted;

        private System.Threading.SendOrPostCallback GetSystemLocalDateTimeOperationCompleted;

        private System.Threading.SendOrPostCallback GetTreasuryDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetEventsDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetAFTTransactionsOperationCompleted;

        private System.Threading.SendOrPostCallback GetSiteAuditHistoryDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateSiteLiquidationIDOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateSiteLiquidationShareIDOperationCompleted;

        private System.Threading.SendOrPostCallback ImportAlertDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportEmailAlertStatusDetailsOperationCompleted;

        public Proxy(string siteCode)
        {
            LogManager.WriteLog("Proxy Constructor Started", LogManager.enumLogLevel.Info);
            //var regKey = BMCRegistryHelper.GetRegLocalMachine().OpenSubKey(ConfigManager.Read(Constants.CONSTANT_REGISTRYPATH));
            AuthenticationInformationValue = new AuthenticationInformation { SiteCode = siteCode };
            //Url = regKey.GetValue("BGSWebService").ToString();
            Url = BMCRegistryHelper.GetRegKeyValue(ConfigManager.Read(Constants.CONSTANT_REGISTRYPATH), "BGSWebService");
            _connectionString = GetConnectionString();

            AuthenticationInformationValue.EnterprisePassKey = GetEnterprisePasskey();
            AuthenticationInformationValue.ExchangePassKey = GetExchangePasskey();
            LogManager.WriteLog("Proxy END", LogManager.enumLogLevel.Info);
            SetClientCertificate();
        }

        public Proxy(string siteCode, string connectionString)
        {
            LogManager.WriteLog("Proxy Constructor Started", LogManager.enumLogLevel.Info);
           // var regKey = BMCRegistryHelper.GetRegLocalMachine().OpenSubKey(ConfigManager.Read(Constants.CONSTANT_REGISTRYPATH));
            AuthenticationInformationValue = new AuthenticationInformation { SiteCode = siteCode };
            _connectionString = connectionString;
           // Url = regKey.GetValue("BGSWebService").ToString();
            Url = BMCRegistryHelper.GetRegKeyValue(ConfigManager.Read(Constants.CONSTANT_REGISTRYPATH), "BGSWebService");
            AuthenticationInformationValue.EnterprisePassKey = GetEnterprisePasskey();
            AuthenticationInformationValue.ExchangePassKey = GetExchangePasskey();
            SetClientCertificate();
        }

        public Proxy(string siteCode, string ExchangeKey, string EnterpriseKey)
        {

            LogManager.WriteLog("Proxy Constructor Started", LogManager.enumLogLevel.Info);
            //var regKey = BMCRegistryHelper.GetRegLocalMachine().OpenSubKey(ConfigManager.Read(Constants.CONSTANT_REGISTRYPATH));
            AuthenticationInformationValue = new AuthenticationInformation { SiteCode = siteCode };

            //Url = regKey.GetValue("BGSWebService").ToString();
            Url = BMCRegistryHelper.GetRegKeyValue(ConfigManager.Read(Constants.CONSTANT_REGISTRYPATH), "BGSWebService");
            AuthenticationInformationValue.EnterprisePassKey = EnterpriseKey;
            AuthenticationInformationValue.ExchangePassKey = ExchangeKey;
            SetClientCertificate();
        }

        public Proxy(string sServerURL, bool sType)
        {
            this.Url = sServerURL;
            SetClientCertificate();
        }

        private void SetClientCertificate()
        {
            if (!IsCertificateRequired()) return;
            Certificate.IssuerName = IssuerName();
            ServicePointManager.CertificatePolicy = new Certificate.ByPassCertificatePolicy();
        }

        public string WebURL
        {
            set { this.Url = value; }
            get { return this.Url; }
        }

        public string GetEnterprisePasskey()
        {
            return DataBaseServiceHandler.ExecuteScalar<string>(GetConnectionString(), CommandType.StoredProcedure,
                                                                    "rsp_GetEnterprisePassKeys");
        }

        public string GetExchangePasskey()
        {

            return DataBaseServiceHandler.ExecuteScalar<string>(GetConnectionString(), CommandType.StoredProcedure,
                                                                    "rsp_GetExchangePassKeys");
        }

        public bool IsCertificateRequired()
        {
            //if (_connectionString != string.Empty)
            //    if (DataBaseServiceHandler.ExecuteScalar<string>(_connectionString, CommandType.Text,
            //                                                     "Select Setting_value from setting Where Setting_Name = 'IsCertificateRequired'")
            //        .ToLower().Contains("true"))
            //        return true;

            return DataBaseServiceHandler.ExecuteScalar<string>(GetConnectionString(), CommandType.Text,
                                                                "Select Setting_value from setting Where Setting_Name = 'IsCertificateRequired'")
                .ToLower().Contains("true");
        }

        public string IssuerName()
        {
            //if (_connectionString != string.Empty)
            //    return DataBaseServiceHandler.ExecuteScalar<string>(_connectionString, CommandType.Text,
            //                                                        "Select Setting_value from setting Where Setting_Name = 'CertificateIssuer'");


            return DataBaseServiceHandler.ExecuteScalar<string>(GetConnectionString(), CommandType.Text,
                                                                "Select Setting_value from setting Where Setting_Name = 'CertificateIssuer'");
        }

        private static string GetConnectionString()
        {
            if (!string.IsNullOrEmpty(_connectionString))
                return _connectionString;

            LogManager.WriteLog("GetConnectionString Started", LogManager.enumLogLevel.Info);
            try
            {
                _connectionString = BMC.Common.Utilities.DatabaseHelper.GetConnectionString();
            }
            catch (Exception ex)
            {
                _connectionString = "";
                LogManager.WriteLog("Error reading registry:" + ex.Message, LogManager.enumLogLevel.Error);
            }
            return _connectionString;
        }

        public AuthenticationInformation AuthenticationInformationValue
        {
            get
            {
                return this.authenticationInformationValueField;
            }
            set
            {
                this.authenticationInformationValueField = value;
            }
        }

        /// <remarks/>
        /// <remarks/>
        public event ImportPasswordChangeCompletedEventHandler ImportPasswordChangeCompleted;

        /// <remarks/>
        public event ImportDataCompletedEventHandler ImportDataCompleted;

        /// <remarks/>
        public event ValidateUserCompletedEventHandler ValidateUserCompleted;

        /// <remarks/>
        public event ImportCompressedDataCompletedEventHandler ImportCompressedDataCompleted;

        /// <remarks/>
        public event LogSiteEventCompletedEventHandler LogSiteEventCompleted;

        /// <remarks/>
        public event HelloWebServiceCompletedEventHandler HelloWebServiceCompleted;


        /// <remarks/>
        public event ImportHourlyStatisticsDataCompletedEventHandler ImportHourlyStatisticsDataCompleted;

        /// <remarks/>
        public event InsertTreasuryEntriesCompletedEventHandler InsertTreasuryEntriesCompleted;

        /// <remarks/>
        public event InsertReadCompletedEventHandler InsertReadCompleted;

        /// <remarks/>
        public event CreateInstallationCompletedEventHandler CreateInstallationCompleted;

        /// <remarks/>
        public event EnhancedEnrollmentForOfflineCompletedEventHandler EnhancedEnrollmentForOfflineCompleted;

        /// <remarks/>
        public event CloseInstallationCompletedEventHandler CloseInstallationCompleted;

        /// <remarks/>
        public event ConvertInstallationCompletedEventHandler ConvertInstallationCompleted;

        /// <remarks/>
        public event SwapInstallationCompletedEventHandler SwapInstallationCompleted;

        /// <remarks/>
        public event ImportInstallationUpdateCompletedEventHandler ImportInstallationUpdateCompleted;

        /// <remarks/>
        public event GetInstallationNumberCompletedEventHandler GetInstallationNumberCompleted;

        /// <remarks/>
        public event ImportMeterHistoryCompletedEventHandler ImportMeterHistoryCompleted;

        /// <remarks/>
        public event UpdateBarPositionCentralStatusBySiteIDCompletedEventHandler UpdateBarPositionCentralStatusBySiteIDCompleted;

        /// <remarks/>
        public event UpdateSiteStatsInEnterpriseCompletedEventHandler UpdateSiteStatsInEnterpriseCompleted;

        /// <remarks/>
        public event GetPlannedConversionCompletedEventHandler GetPlannedConversionCompleted;

        /// <remarks/>
        public event PlannedConversionCompletedEventHandler PlannedConversionCompleted;

        /// <remarks/>
        public event GetCurrentServiceCallsCompletedEventHandler GetCurrentServiceCallsCompleted;

        /// <remarks/>
        public event GetOpenServiceCallsCompletedEventHandler GetOpenServiceCallsCompleted;

        /// <remarks/>
        public event GetServiceNotesCompletedEventHandler GetServiceNotesCompleted;

        /// <remarks/>
        public event CloseServiceCallCompletedEventHandler CloseServiceCallCompleted;

        /// <remarks/>
        public event InsertServiceNotesCompletedEventHandler InsertServiceNotesCompleted;

        /// <remarks/>
        public event EscalateServiceCompletedEventHandler EscalateServiceCompleted;

        /// <remarks/>
        public event GetBarPositionStatusCompletedEventHandler GetBarPositionStatusCompleted;

        /// <remarks/>
        public event GetWeeklyCollectionDetailsCompletedEventHandler GetWeeklyCollectionDetailsCompleted;

        /// <remarks/>
        public event GetHqInstallationIDCompletedEventHandler GetHqInstallationIDCompleted;

        /// <remarks/>
        public event GetCashDeskServiceFaultsCompletedEventHandler GetCashDeskServiceFaultsCompleted;

        /// <remarks/>
        public event GetRemediesCompletedEventHandler GetRemediesCompleted;

        /// <remarks/>
        public event UpdateInstallationGameCompletedEventHandler UpdateInstallationGameCompleted;

        /// <remarks/>
        public event GetAssetDetailsCompletedEventHandler GetAssetDetailsCompleted;

        /// <remarks/>
        public event ImportSiteSettingsCompletedEventHandler ImportSiteSettingsCompleted;

        /// <remarks/>
        public event ImportVoucherDetailsCompletedEventHandler ImportVoucherDetailsCompleted;

        /// <remarks/>
        public event ImportTicketExceptionDetailsCompletedEventHandler ImportTicketExceptionDetailsCompleted;

        /// <remarks/>
        public event ImportPromotionsDetailsCompletedEventHandler ImportPromotionsDetailsCompleted;

        /// <remarks/>
        public event ImportPromotionalTicketsDetailsCompletedEventHandler ImportPromotionalTicketsDetailsCompleted;

        /// <remarks/>
        public event ImportDeviceDetailsCompletedEventHandler ImportDeviceDetailsCompleted;

        /// <remarks/>
        public event InsertHandpayCompletedEventHandler InsertHandpayCompleted;

        /// <remarks/>
        public event InitiateWebServiceCompletedEventHandler InitiateWebServiceCompleted;

        /// <remarks/>
        public event CheckTransactionKeyCompletedEventHandler CheckTransactionKeyCompleted;

        /// <remarks/>
        public event CheckLicenseKeyCompletedEventHandler CheckLicenseKeyCompleted;

        /// <remarks/>
        public event UpdateLicenseActivationCompletedEventHandler UpdateLicenseActivationCompleted;

        /// <remarks/>
        public event GetSiteDetailsCompletedEventHandler GetSiteDetailsCompleted;

        /// <remarks/>
        public event GetInstallationDataCompletedEventHandler GetInstallationDataCompleted;

        /// <remarks/>
        public event GetAAMSDetailsCompletedEventHandler GetAAMSDetailsCompleted;

        public event GetInstallationGameInfoCompletedEventHandler GetInstallationGameInfoCompleted;

        /// <remarks/>
        public event GetZonesDataCompletedEventHandler GetZonesDataCompleted;

        /// <remarks/>
        //public event GetSiteAllianceDataCompletedEventHandler GetSiteAllianceDataCompleted;

        /// <remarks/>
        public event GetBarPositionsDataCompletedEventHandler GetBarPositionsDataCompleted;

        /// <remarks/>
        public event GetMachineDataCompletedEventHandler GetMachineDataCompleted;

        /// <remarks/>
        public event GetLatestMeterHistoryCompletedEventHandler GetLatestMeterHistoryCompleted;

        /// <remarks/>
        public event GetLatestSiteBatchIDCompletedEventHandler GetLatestSiteBatchIDCompleted;

        /// <remarks/>
        public event GetSiteTicketsCompletedEventHandler GetSiteTicketsCompleted;

        /// <remarks/>
        public event GetSiteTicketExceptionsCompletedEventHandler GetSiteTicketExceptionsCompleted;

        /// <remarks/>
        //public event GetSitePromotionsCompletedEventHandler GetSitePromotionsCompleted;

        /// <remarks/>
        public event GetSiteDeviceDetailsCompletedEventHandler GetSiteDeviceDetailsCompleted;

        /// <remarks/>
        public event GetSiteWorkstationDetailsCompletedEventHandler GetSiteWorkstationDetailsCompleted;


        /// <remarks/>
        public event GetHandpaysCompletedEventHandler GetHandpaysCompleted;

        /// <remarks/>
        public event GetCashDeskTransactionsCompletedEventHandler GetCashDeskTransactionsCompleted;

        /// <remarks/>
        public event GetCollectionsCompletedEventHandler GetCollectionsCompleted;

        /// <remarks/>
        public event GetDailyReadsCompletedEventHandler GetDailyReadsCompleted;

        /// <remarks/>
        public event GetHourlyCompletedEventHandler GetHourlyCompleted;

        /// <remarks/>
        public event GetAllEventsCompletedEventHandler GetAllEventsCompleted;

        /// <remarks/>
        public event GetSystemSettingsCompletedEventHandler GetSystemSettingsCompleted;/// <remarks/>
        public event GetLookupMasterSettingsCompletedEventHandler GetLookupMasterSettingsCompleted;

        /// <remarks/>
        public event SetSiteStatusEnterpriseCompletedEventHandler SetSiteStatusEnterpriseCompleted;

        /// <remarks/>
        public event GetOtherMachineDetailsForRecoveryCompletedEventHandler GetOtherMachineDetailsForRecoveryCompleted;

        /// <remarks/>
        public event ResetTransactionKeyCompletedEventHandler ResetTransactionKeyCompleted;

        /// <remarks/>
        public event GetMultiGameInstallIDCompletedEventHandler GetMultiGameInstallIDCompleted;

        /// <remarks/>
        public event GetGameLibraryIDCompletedEventHandler GetGameLibraryIDCompleted;

        /// <remarks/>
        public event CheckNGACompletedEventHandler CheckNGACompleted;

        /// <remarks/>
        public event GetAllUserDetailsCompletedEventHandler GetAllUserDetailsCompleted;

        /// <remarks/>
        public event GetAllUserRolesCompletedEventHandler GetAllUserRolesCompleted;

        /// <remarks/>
        public event GetAllUserRolesLinksCompletedEventHandler GetAllUserRolesLinksCompleted;

        /// <remarks/>
        public event GetCalendarsCompletedEventHandler GetCalendarsCompleted;

        /// <remarks/>
        public event ImportPaytableDetailsCompletedEventHandler ImportPaytableDetailsCompleted;

        /// <remarks/>
        public event InsertInstallationGameInfoCompletedEventHandler InsertInstallationGameInfoCompleted;

        /// <remarks/>
        public event GetAllObjectsCompletedEventHandler GetAllObjectsCompleted;

        /// <remarks/>
        public event GetAllRoleAccessObjectRightLnkCompletedEventHandler GetAllRoleAccessObjectRightLnkCompleted;

        /// <remarks/>
        public event GetComponentDetailsCompletedEventHandler GetComponentDetailsCompleted;

        /// <remarks/>
        public event GetOtherGameDetailsCompletedEventHandler GetOtherGameDetailsCompleted;

        /// <remarks/>
        public event GetGameLibraryCompletedEventHandler GetGameLibraryCompleted;

        /// <remarks/>
        public event GetPayTableCompletedEventHandler GetPayTableCompleted;

        /// <remarks/>
        public event GetInstallationGamePayTableInfoCompletedEventHandler GetInstallationGamePayTableInfoCompleted;

        /// <remarks/>
        public event GetSeedValuesCompletedEventHandler GetSeedValuesCompleted;

        /// <remarks/>
        public event GetActiveSiteDetailsCompletedEventHandler GetActiveSiteDetailsCompleted;

        /// <remarks/>
        public event GetInTransitAssetforSiteCompletedEventHandler GetInTransitAssetforSiteCompleted;

        /// <remarks/>
        public event ImportInstallationGameDataCompletedEventHandler ImportInstallationGameDataCompleted;

        /// <remarks/>
        public event UpdateGMUNumberCompletedEventHandler UpdateGMUNumberCompleted;

        /// <remarks/>
        public event ImportEmployeeCardSessionDataCompletedEventHandler ImportEmployeeCardSessionDataCompleted;

        /// <remarks/>
        public event ImportSiteConfigCompletedEventHandler ImportSiteConfigCompleted;

        /// <remarks/>
        public event GetTreasuryDetailsCompletedEventHandler GetTreasuryDetailsCompleted;

        /// <remarks/>
        public event GetEventsDetailsCompletedEventHandler GetEventsDetailsCompleted;

        /// <remarks/>
        public event GetSystemLocalDateTimeCompletedEventHandler GetSystemLocalDateTimeCompleted;

        /// <remarks/>
        public event GetAFTTransactionsCompletedEventHandler GetAFTTransactionsCompleted;

        /// <remarks/>
        public event GetSiteAuditHistoryDetailsCompletedEventHandler GetSiteAuditHistoryDetailsCompleted;

        /// <remarks/>
        public event UpdateSiteLiquidationIDCompletedEventHandler UpdateSiteLiquidationIDCompleted;

        /// <remarks/>
        public event UpdateSiteLiquidationShareIDCompletedEventHandler UpdateSiteLiquidationShareIDCompleted;

        /// <remarks/>
        public event ImportAlertDetailsCompletedEventHandler ImportAlertDetailsCompleted;

        /// <remarks/>
        public event ImportEmailAlertStatusDetailsCompletedEventHandler ImportEmailAlertStatusDetailsCompleted;

        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportPasswordChange", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportPasswordChange(string sXMLString, int nUserID, string sSiteCode, string sType)
        {
            object[] results = this.Invoke("ImportPasswordChange", new object[] {
                    sXMLString,
                    nUserID,
                    sSiteCode,
                    sType});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportPasswordChange(string sXMLString, int nUserID, string sSiteCode, string sType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportPasswordChange", new object[] {
                    sXMLString,
                    nUserID,
                    sSiteCode,
                    sType}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportPasswordChange(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportPasswordChangeAsync(string sXMLString, int nUserID, string sSiteCode, string sType)
        {
            this.ImportPasswordChangeAsync(sXMLString, nUserID, sSiteCode, sType, null);
        }

        /// <remarks/>
        public void ImportPasswordChangeAsync(string sXMLString, int nUserID, string sSiteCode, string sType, object userState)
        {
            if ((this.ImportPasswordChangeOperationCompleted == null))
            {
                this.ImportPasswordChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportPasswordChangeOperationCompleted);
            }
            this.InvokeAsync("ImportPasswordChange", new object[] {
                    sXMLString,
                    nUserID,
                    sSiteCode,
                    sType}, this.ImportPasswordChangeOperationCompleted, userState);
        }

        private void OnImportPasswordChangeOperationCompleted(object arg)
        {
            if ((this.ImportPasswordChangeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportPasswordChangeCompleted(this, new ImportPasswordChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportData(string xmlString)
        {
            object[] results = this.Invoke("ImportData", new object[] {
                                                                          xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportData(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportData", new object[] {
                                                                   xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportDataAsync(string xmlString)
        {
            this.ImportDataAsync(xmlString, null);
        }

        /// <remarks/>
        public void ImportDataAsync(string xmlString, object userState)
        {
            if ((this.ImportDataOperationCompleted == null))
            {
                this.ImportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDataOperationCompleted);
            }
            this.InvokeAsync("ImportData", new object[] {
                                                            xmlString}, this.ImportDataOperationCompleted, userState);
        }

        private void OnImportDataOperationCompleted(object arg)
        {
            if ((this.ImportDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDataCompleted(this, new ImportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>        
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ValidateUser", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ValidateUser(string userName, string password)
        {
            object[] results = this.Invoke("ValidateUser", new object[] {
                                                                          userName, password});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginValidateUser(string userName, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ValidateUser", new object[] {
                                                                   userName, password}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndValidateUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ValidateUserAsync(string userName, string password)
        {
            this.ValidateUserAsync(userName, password, null);
        }

        /// <remarks/>
        public void ValidateUserAsync(string userName, string password, object userState)
        {
            if ((this.ValidateUserOperationCompleted == null))
            {
                this.ValidateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserOperationCompleted);
            }
            this.InvokeAsync("ValidateUser", new object[] {
                                                            userName, password}, this.ValidateUserOperationCompleted, userState);
        }

        private void OnValidateUserOperationCompleted(object arg)
        {
            if ((this.ValidateUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportCompressedData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportCompressedData(string compressedData)
        {
            object[] results = this.Invoke("ImportCompressedData", new object[] {
                                                                                    compressedData});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportCompressedData(string compressedData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportCompressedData", new object[] {
                                                                             compressedData}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportCompressedData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportCompressedDataAsync(string compressedData)
        {
            this.ImportCompressedDataAsync(compressedData, null);
        }

        /// <remarks/>
        public void ImportCompressedDataAsync(string compressedData, object userState)
        {
            if ((this.ImportCompressedDataOperationCompleted == null))
            {
                this.ImportCompressedDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportCompressedDataOperationCompleted);
            }
            this.InvokeAsync("ImportCompressedData", new object[] {
                                                                      compressedData}, this.ImportCompressedDataOperationCompleted, userState);
        }

        private void OnImportCompressedDataOperationCompleted(object arg)
        {
            if ((this.ImportCompressedDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportCompressedDataCompleted(this, new ImportCompressedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/LogSiteEvent", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string LogSiteEvent(string sEventXml)
        {
            object[] results = this.Invoke("LogSiteEvent", new object[] {
                                                                            sEventXml});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginLogSiteEvent(string sEventXml, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("LogSiteEvent", new object[] {
                                                                     sEventXml}, callback, asyncState);
        }

        /// <remarks/>
        public string EndLogSiteEvent(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void LogSiteEventAsync(string sEventXml)
        {
            this.LogSiteEventAsync(sEventXml, null);
        }

        /// <remarks/>
        public void LogSiteEventAsync(string sEventXml, object userState)
        {
            if ((this.LogSiteEventOperationCompleted == null))
            {
                this.LogSiteEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogSiteEventOperationCompleted);
            }
            this.InvokeAsync("LogSiteEvent", new object[] {
                                                              sEventXml}, this.LogSiteEventOperationCompleted, userState);
        }

        private void OnLogSiteEventOperationCompleted(object arg)
        {
            if ((this.LogSiteEventCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogSiteEventCompleted(this, new LogSiteEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/HelloWebService", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int HelloWebService(int recieve)
        {
            object[] results = this.Invoke("HelloWebService", new object[] {
                                                                               recieve});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginHelloWebService(int recieve, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("HelloWebService", new object[] {
                                                                        recieve}, callback, asyncState);
        }

        /// <remarks/>
        public int EndHelloWebService(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void HelloWebServiceAsync(int recieve)
        {
            this.HelloWebServiceAsync(recieve, null);
        }

        /// <remarks/>
        public void HelloWebServiceAsync(int recieve, object userState)
        {
            if ((this.HelloWebServiceOperationCompleted == null))
            {
                this.HelloWebServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWebServiceOperationCompleted);
            }
            this.InvokeAsync("HelloWebService", new object[] {
                                                                 recieve}, this.HelloWebServiceOperationCompleted, userState);
        }

        private void OnHelloWebServiceOperationCompleted(object arg)
        {
            if ((this.HelloWebServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWebServiceCompleted(this, new HelloWebServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportHourlyStatisticsData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string ImportHourlyStatisticsData(string xmlString)
        {
            object[] results = this.Invoke("ImportHourlyStatisticsData", new object[] {
                                                                                          xmlString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportHourlyStatisticsData(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportHourlyStatisticsData", new object[] {
                                                                                   xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndImportHourlyStatisticsData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ImportHourlyStatisticsDataAsync(string xmlString)
        {
            this.ImportHourlyStatisticsDataAsync(xmlString, null);
        }

        /// <remarks/>
        public void ImportHourlyStatisticsDataAsync(string xmlString, object userState)
        {
            if ((this.ImportHourlyStatisticsDataOperationCompleted == null))
            {
                this.ImportHourlyStatisticsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportHourlyStatisticsDataOperationCompleted);
            }
            this.InvokeAsync("ImportHourlyStatisticsData", new object[] {
                                                                            xmlString}, this.ImportHourlyStatisticsDataOperationCompleted, userState);
        }

        private void OnImportHourlyStatisticsDataOperationCompleted(object arg)
        {
            if ((this.ImportHourlyStatisticsDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportHourlyStatisticsDataCompleted(this, new ImportHourlyStatisticsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/InsertTreasuryEntries", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int InsertTreasuryEntries(string strXml)
        {
            object[] results = this.Invoke("InsertTreasuryEntries", new object[] {
                                                                                     strXml});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInsertTreasuryEntries(string strXml, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InsertTreasuryEntries", new object[] {
                                                                              strXml}, callback, asyncState);
        }

        /// <remarks/>
        public int EndInsertTreasuryEntries(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void InsertTreasuryEntriesAsync(string strXml)
        {
            this.InsertTreasuryEntriesAsync(strXml, null);
        }

        /// <remarks/>
        public void InsertTreasuryEntriesAsync(string strXml, object userState)
        {
            if ((this.InsertTreasuryEntriesOperationCompleted == null))
            {
                this.InsertTreasuryEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTreasuryEntriesOperationCompleted);
            }
            this.InvokeAsync("InsertTreasuryEntries", new object[] {
                                                                       strXml}, this.InsertTreasuryEntriesOperationCompleted, userState);
        }

        private void OnInsertTreasuryEntriesOperationCompleted(object arg)
        {
            if ((this.InsertTreasuryEntriesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTreasuryEntriesCompleted(this, new InsertTreasuryEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/InsertRead", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool InsertRead(string xmlString)
        {
            object[] results = this.Invoke("InsertRead", new object[] {
                                                                          xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInsertRead(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InsertRead", new object[] {
                                                                   xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndInsertRead(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void InsertReadAsync(string xmlString)
        {
            this.InsertReadAsync(xmlString, null);
        }

        /// <remarks/>
        public void InsertReadAsync(string xmlString, object userState)
        {
            if ((this.InsertReadOperationCompleted == null))
            {
                this.InsertReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReadOperationCompleted);
            }
            this.InvokeAsync("InsertRead", new object[] {
                                                            xmlString}, this.InsertReadOperationCompleted, userState);
        }

        private void OnInsertReadOperationCompleted(object arg)
        {
            if ((this.InsertReadCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReadCompleted(this, new InsertReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/CreateInstallation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int CreateInstallation(string installationData)
        {
            object[] results = this.Invoke("CreateInstallation", new object[] {
                                                                                  installationData});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCreateInstallation(string installationData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CreateInstallation", new object[] {
                                                                           installationData}, callback, asyncState);
        }

        /// <remarks/>
        public int EndCreateInstallation(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void CreateInstallationAsync(string installationData)
        {
            this.CreateInstallationAsync(installationData, null);
        }

        /// <remarks/>
        public void CreateInstallationAsync(string installationData, object userState)
        {
            if ((this.CreateInstallationOperationCompleted == null))
            {
                this.CreateInstallationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateInstallationOperationCompleted);
            }
            this.InvokeAsync("CreateInstallation", new object[] {
                                                                    installationData}, this.CreateInstallationOperationCompleted, userState);
        }

        private void OnCreateInstallationOperationCompleted(object arg)
        {
            if ((this.CreateInstallationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateInstallationCompleted(this, new CreateInstallationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/EnhancedEnrollmentForOffline", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int EnhancedEnrollmentForOffline(string strXML, InstallationType installType)
        {
            object[] results = this.Invoke("EnhancedEnrollmentForOffline", new object[] {
                                                                                            strXML,
                                                                                            installType});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginEnhancedEnrollmentForOffline(string strXML, InstallationType installType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("EnhancedEnrollmentForOffline", new object[] {
                                                                                     strXML,
                                                                                     installType}, callback, asyncState);
        }

        /// <remarks/>
        public int EndEnhancedEnrollmentForOffline(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void EnhancedEnrollmentForOfflineAsync(string strXML, InstallationType installType)
        {
            this.EnhancedEnrollmentForOfflineAsync(strXML, installType, null);
        }

        /// <remarks/>
        public void EnhancedEnrollmentForOfflineAsync(string strXML, InstallationType installType, object userState)
        {
            if ((this.EnhancedEnrollmentForOfflineOperationCompleted == null))
            {
                this.EnhancedEnrollmentForOfflineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnhancedEnrollmentForOfflineOperationCompleted);
            }
            this.InvokeAsync("EnhancedEnrollmentForOffline", new object[] {
                                                                              strXML,
                                                                              installType}, this.EnhancedEnrollmentForOfflineOperationCompleted, userState);
        }

        private void OnEnhancedEnrollmentForOfflineOperationCompleted(object arg)
        {
            if ((this.EnhancedEnrollmentForOfflineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnhancedEnrollmentForOfflineCompleted(this, new EnhancedEnrollmentForOfflineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/CloseInstallation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int CloseInstallation(string InstallationXML)
        {
            object[] results = this.Invoke("CloseInstallation", new object[] {
                                                                                 InstallationXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCloseInstallation(string InstallationXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CloseInstallation", new object[] {
                                                                          InstallationXML}, callback, asyncState);
        }

        /// <remarks/>
        public int EndCloseInstallation(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void CloseInstallationAsync(string InstallationXML)
        {
            this.CloseInstallationAsync(InstallationXML, null);
        }

        /// <remarks/>
        public void CloseInstallationAsync(string InstallationXML, object userState)
        {
            if ((this.CloseInstallationOperationCompleted == null))
            {
                this.CloseInstallationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseInstallationOperationCompleted);
            }
            this.InvokeAsync("CloseInstallation", new object[] {
                                                                   InstallationXML}, this.CloseInstallationOperationCompleted, userState);
        }

        private void OnCloseInstallationOperationCompleted(object arg)
        {
            if ((this.CloseInstallationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseInstallationCompleted(this, new CloseInstallationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ConvertInstallation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int ConvertInstallation(string OldInstallationXML, string NewInstallationXML)
        {
            object[] results = this.Invoke("ConvertInstallation", new object[] {
                                                                                   OldInstallationXML,
                                                                                   NewInstallationXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginConvertInstallation(string OldInstallationXML, string NewInstallationXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ConvertInstallation", new object[] {
                                                                            OldInstallationXML,
                                                                            NewInstallationXML}, callback, asyncState);
        }

        /// <remarks/>
        public int EndConvertInstallation(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void ConvertInstallationAsync(string OldInstallationXML, string NewInstallationXML)
        {
            this.ConvertInstallationAsync(OldInstallationXML, NewInstallationXML, null);
        }

        /// <remarks/>
        public void ConvertInstallationAsync(string OldInstallationXML, string NewInstallationXML, object userState)
        {
            if ((this.ConvertInstallationOperationCompleted == null))
            {
                this.ConvertInstallationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertInstallationOperationCompleted);
            }
            this.InvokeAsync("ConvertInstallation", new object[] {
                                                                     OldInstallationXML,
                                                                     NewInstallationXML}, this.ConvertInstallationOperationCompleted, userState);
        }

        private void OnConvertInstallationOperationCompleted(object arg)
        {
            if ((this.ConvertInstallationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertInstallationCompleted(this, new ConvertInstallationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/SwapInstallation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int SwapInstallation(string InstallationXML)
        {
            object[] results = this.Invoke("SwapInstallation", new object[] {
                                                                                InstallationXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSwapInstallation(string InstallationXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SwapInstallation", new object[] {
                                                                         InstallationXML}, callback, asyncState);
        }

        /// <remarks/>
        public int EndSwapInstallation(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void SwapInstallationAsync(string InstallationXML)
        {
            this.SwapInstallationAsync(InstallationXML, null);
        }

        /// <remarks/>
        public void SwapInstallationAsync(string InstallationXML, object userState)
        {
            if ((this.SwapInstallationOperationCompleted == null))
            {
                this.SwapInstallationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapInstallationOperationCompleted);
            }
            this.InvokeAsync("SwapInstallation", new object[] {
                                                                  InstallationXML}, this.SwapInstallationOperationCompleted, userState);
        }

        private void OnSwapInstallationOperationCompleted(object arg)
        {
            if ((this.SwapInstallationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapInstallationCompleted(this, new SwapInstallationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportInstallationUpdate", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportInstallationUpdate(string installationXML)
        {
            object[] results = this.Invoke("ImportInstallationUpdate", new object[] {
                                                                                        installationXML});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportInstallationUpdate(string installationXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportInstallationUpdate", new object[] {
                                                                                 installationXML}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportInstallationUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportInstallationUpdateAsync(string installationXML)
        {
            this.ImportInstallationUpdateAsync(installationXML, null);
        }

        /// <remarks/>
        public void ImportInstallationUpdateAsync(string installationXML, object userState)
        {
            if ((this.ImportInstallationUpdateOperationCompleted == null))
            {
                this.ImportInstallationUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportInstallationUpdateOperationCompleted);
            }
            this.InvokeAsync("ImportInstallationUpdate", new object[] {
                                                                          installationXML}, this.ImportInstallationUpdateOperationCompleted, userState);
        }

        private void OnImportInstallationUpdateOperationCompleted(object arg)
        {
            if ((this.ImportInstallationUpdateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportInstallationUpdateCompleted(this, new ImportInstallationUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetInstallationNumber", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetInstallationNumber(string xmlString)
        {
            object[] results = this.Invoke("GetInstallationNumber", new object[] {
                                                                                     xmlString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetInstallationNumber(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetInstallationNumber", new object[] {
                                                                              xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetInstallationNumber(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetInstallationNumberAsync(string xmlString)
        {
            this.GetInstallationNumberAsync(xmlString, null);
        }

        /// <remarks/>
        public void GetInstallationNumberAsync(string xmlString, object userState)
        {
            if ((this.GetInstallationNumberOperationCompleted == null))
            {
                this.GetInstallationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstallationNumberOperationCompleted);
            }
            this.InvokeAsync("GetInstallationNumber", new object[] {
                                                                       xmlString}, this.GetInstallationNumberOperationCompleted, userState);
        }

        private void OnGetInstallationNumberOperationCompleted(object arg)
        {
            if ((this.GetInstallationNumberCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstallationNumberCompleted(this, new GetInstallationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportEmployeeCardSessionData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportEmployeeCardSessionData(string xmlString)
        {
            object[] results = this.Invoke("ImportEmployeeCardSessionData", new object[] {
                    xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportEmployeeCardSessionData(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportEmployeeCardSessionData", new object[] {
                    xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportEmployeeCardSessionData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportEmployeeCardSessionDataAsync(string xmlString)
        {
            this.ImportEmployeeCardSessionDataAsync(xmlString, null);
        }

        /// <remarks/>
        public void ImportEmployeeCardSessionDataAsync(string xmlString, object userState)
        {
            if ((this.ImportEmployeeCardSessionDataOperationCompleted == null))
            {
                this.ImportEmployeeCardSessionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportEmployeeCardSessionDataOperationCompleted);
            }
            this.InvokeAsync("ImportEmployeeCardSessionData", new object[] {
                    xmlString}, this.ImportEmployeeCardSessionDataOperationCompleted, userState);
        }

        private void OnImportEmployeeCardSessionDataOperationCompleted(object arg)
        {
            if ((this.ImportEmployeeCardSessionDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportEmployeeCardSessionDataCompleted(this, new ImportEmployeeCardSessionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportMeterHistory", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportMeterHistory(string xmlString)
        {
            object[] results = this.Invoke("ImportMeterHistory", new object[] {
                                                                                  xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportMeterHistory(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportMeterHistory", new object[] {
                                                                           xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportMeterHistory(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportMeterHistoryAsync(string xmlString)
        {
            this.ImportMeterHistoryAsync(xmlString, null);
        }

        /// <remarks/>
        public void ImportMeterHistoryAsync(string xmlString, object userState)
        {
            if ((this.ImportMeterHistoryOperationCompleted == null))
            {
                this.ImportMeterHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportMeterHistoryOperationCompleted);
            }
            this.InvokeAsync("ImportMeterHistory", new object[] {
                                                                    xmlString}, this.ImportMeterHistoryOperationCompleted, userState);
        }

        private void OnImportMeterHistoryOperationCompleted(object arg)
        {
            if ((this.ImportMeterHistoryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportMeterHistoryCompleted(this, new ImportMeterHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/UpdateBarPositionCentralStatusBySiteID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool UpdateBarPositionCentralStatusBySiteID(int exportHistoryID)
        {
            object[] results = this.Invoke("UpdateBarPositionCentralStatusBySiteID", new object[] {
                                                                                                      exportHistoryID});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateBarPositionCentralStatusBySiteID(int exportHistoryID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateBarPositionCentralStatusBySiteID", new object[] {
                                                                                               exportHistoryID}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateBarPositionCentralStatusBySiteID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateBarPositionCentralStatusBySiteIDAsync(int exportHistoryID)
        {
            this.UpdateBarPositionCentralStatusBySiteIDAsync(exportHistoryID, null);
        }

        /// <remarks/>
        public void UpdateBarPositionCentralStatusBySiteIDAsync(int exportHistoryID, object userState)
        {
            if ((this.UpdateBarPositionCentralStatusBySiteIDOperationCompleted == null))
            {
                this.UpdateBarPositionCentralStatusBySiteIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBarPositionCentralStatusBySiteIDOperationCompleted);
            }
            this.InvokeAsync("UpdateBarPositionCentralStatusBySiteID", new object[] {
                                                                                        exportHistoryID}, this.UpdateBarPositionCentralStatusBySiteIDOperationCompleted, userState);
        }

        private void OnUpdateBarPositionCentralStatusBySiteIDOperationCompleted(object arg)
        {
            if ((this.UpdateBarPositionCentralStatusBySiteIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBarPositionCentralStatusBySiteIDCompleted(this, new UpdateBarPositionCentralStatusBySiteIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/UpdateSiteStatsInEnterprise", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool UpdateSiteStatsInEnterprise(string strSiteName, string strStatusXML)
        {
            object[] results = this.Invoke("UpdateSiteStatsInEnterprise", new object[] {
                                                                                           strSiteName,
                                                                                           strStatusXML});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateSiteStatsInEnterprise(string strSiteName, string strStatusXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateSiteStatsInEnterprise", new object[] {
                                                                                    strSiteName,
                                                                                    strStatusXML}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateSiteStatsInEnterprise(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateSiteStatsInEnterpriseAsync(string strSiteName, string strStatusXML)
        {
            this.UpdateSiteStatsInEnterpriseAsync(strSiteName, strStatusXML, null);
        }

        /// <remarks/>
        public void UpdateSiteStatsInEnterpriseAsync(string strSiteName, string strStatusXML, object userState)
        {
            if ((this.UpdateSiteStatsInEnterpriseOperationCompleted == null))
            {
                this.UpdateSiteStatsInEnterpriseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSiteStatsInEnterpriseOperationCompleted);
            }
            this.InvokeAsync("UpdateSiteStatsInEnterprise", new object[] {
                                                                             strSiteName,
                                                                             strStatusXML}, this.UpdateSiteStatsInEnterpriseOperationCompleted, userState);
        }

        private void OnUpdateSiteStatsInEnterpriseOperationCompleted(object arg)
        {
            if ((this.UpdateSiteStatsInEnterpriseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSiteStatsInEnterpriseCompleted(this, new UpdateSiteStatsInEnterpriseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetPlannedConversion", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetPlannedConversion(string assetNumber)
        {
            object[] results = this.Invoke("GetPlannedConversion", new object[] {
                                                                                    assetNumber});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetPlannedConversion(string assetNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetPlannedConversion", new object[] {
                                                                             assetNumber}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetPlannedConversion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetPlannedConversionAsync(string assetNumber)
        {
            this.GetPlannedConversionAsync(assetNumber, null);
        }

        /// <remarks/>
        public void GetPlannedConversionAsync(string assetNumber, object userState)
        {
            if ((this.GetPlannedConversionOperationCompleted == null))
            {
                this.GetPlannedConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlannedConversionOperationCompleted);
            }
            this.InvokeAsync("GetPlannedConversion", new object[] {
                                                                      assetNumber}, this.GetPlannedConversionOperationCompleted, userState);
        }

        private void OnGetPlannedConversionOperationCompleted(object arg)
        {
            if ((this.GetPlannedConversionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlannedConversionCompleted(this, new GetPlannedConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/PlannedConversion", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int PlannedConversion(string installationXML)
        {
            object[] results = this.Invoke("PlannedConversion", new object[] {
                                                                                 installationXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginPlannedConversion(string installationXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("PlannedConversion", new object[] {
                                                                          installationXML}, callback, asyncState);
        }

        /// <remarks/>
        public int EndPlannedConversion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void PlannedConversionAsync(string installationXML)
        {
            this.PlannedConversionAsync(installationXML, null);
        }

        /// <remarks/>
        public void PlannedConversionAsync(string installationXML, object userState)
        {
            if ((this.PlannedConversionOperationCompleted == null))
            {
                this.PlannedConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlannedConversionOperationCompleted);
            }
            this.InvokeAsync("PlannedConversion", new object[] {
                                                                   installationXML}, this.PlannedConversionOperationCompleted, userState);
        }

        private void OnPlannedConversionOperationCompleted(object arg)
        {
            if ((this.PlannedConversionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlannedConversionCompleted(this, new PlannedConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetCurrentServiceCalls", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetCurrentServiceCalls(string strSiteCode, string strStartBarPosNo, string strLastBarPosNo)
        {
            object[] results = this.Invoke("GetCurrentServiceCalls", new object[] {
                                                                                      strSiteCode,
                                                                                      strStartBarPosNo,
                                                                                      strLastBarPosNo});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCurrentServiceCalls(string strSiteCode, string strStartBarPosNo, string strLastBarPosNo, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCurrentServiceCalls", new object[] {
                                                                               strSiteCode,
                                                                               strStartBarPosNo,
                                                                               strLastBarPosNo}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCurrentServiceCalls(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCurrentServiceCallsAsync(string strSiteCode, string strStartBarPosNo, string strLastBarPosNo)
        {
            this.GetCurrentServiceCallsAsync(strSiteCode, strStartBarPosNo, strLastBarPosNo, null);
        }

        /// <remarks/>
        public void GetCurrentServiceCallsAsync(string strSiteCode, string strStartBarPosNo, string strLastBarPosNo, object userState)
        {
            if ((this.GetCurrentServiceCallsOperationCompleted == null))
            {
                this.GetCurrentServiceCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentServiceCallsOperationCompleted);
            }
            this.InvokeAsync("GetCurrentServiceCalls", new object[] {
                                                                        strSiteCode,
                                                                        strStartBarPosNo,
                                                                        strLastBarPosNo}, this.GetCurrentServiceCallsOperationCompleted, userState);
        }

        private void OnGetCurrentServiceCallsOperationCompleted(object arg)
        {
            if ((this.GetCurrentServiceCallsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentServiceCallsCompleted(this, new GetCurrentServiceCallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetOpenServiceCalls", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetOpenServiceCalls(string siteCode, string barPos)
        {
            object[] results = this.Invoke("GetOpenServiceCalls", new object[] {
                                                                                   siteCode,
                                                                                   barPos});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOpenServiceCalls(string siteCode, string barPos, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOpenServiceCalls", new object[] {
                                                                            siteCode,
                                                                            barPos}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetOpenServiceCalls(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetOpenServiceCallsAsync(string siteCode, string barPos)
        {
            this.GetOpenServiceCallsAsync(siteCode, barPos, null);
        }

        /// <remarks/>
        public void GetOpenServiceCallsAsync(string siteCode, string barPos, object userState)
        {
            if ((this.GetOpenServiceCallsOperationCompleted == null))
            {
                this.GetOpenServiceCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenServiceCallsOperationCompleted);
            }
            this.InvokeAsync("GetOpenServiceCalls", new object[] {
                                                                     siteCode,
                                                                     barPos}, this.GetOpenServiceCallsOperationCompleted, userState);
        }

        private void OnGetOpenServiceCallsOperationCompleted(object arg)
        {
            if ((this.GetOpenServiceCallsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenServiceCallsCompleted(this, new GetOpenServiceCallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetServiceNotes", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetServiceNotes(string jobID)
        {
            object[] results = this.Invoke("GetServiceNotes", new object[] {
                                                                               jobID});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetServiceNotes(string jobID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetServiceNotes", new object[] {
                                                                        jobID}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetServiceNotes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetServiceNotesAsync(string jobID)
        {
            this.GetServiceNotesAsync(jobID, null);
        }

        /// <remarks/>
        public void GetServiceNotesAsync(string jobID, object userState)
        {
            if ((this.GetServiceNotesOperationCompleted == null))
            {
                this.GetServiceNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceNotesOperationCompleted);
            }
            this.InvokeAsync("GetServiceNotes", new object[] {
                                                                 jobID}, this.GetServiceNotesOperationCompleted, userState);
        }

        private void OnGetServiceNotesOperationCompleted(object arg)
        {
            if ((this.GetServiceNotesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceNotesCompleted(this, new GetServiceNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/CloseServiceCall", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int CloseServiceCall(int serviceID, string jobID, int remedy, int userId, string notes)
        {
            object[] results = this.Invoke("CloseServiceCall", new object[] {
                                                                                serviceID,
                                                                                jobID,
                                                                                remedy,
                                                                                userId,
                                                                                notes});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCloseServiceCall(int serviceID, string jobID, int remedy, int userId, string notes, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CloseServiceCall", new object[] {
                                                                         serviceID,
                                                                         jobID,
                                                                         remedy,
                                                                         userId,
                                                                         notes}, callback, asyncState);
        }

        /// <remarks/>
        public int EndCloseServiceCall(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void CloseServiceCallAsync(int serviceID, string jobID, int remedy, int userId, string notes)
        {
            this.CloseServiceCallAsync(serviceID, jobID, remedy, userId, notes, null);
        }

        /// <remarks/>
        public void CloseServiceCallAsync(int serviceID, string jobID, int remedy, int userId, string notes, object userState)
        {
            if ((this.CloseServiceCallOperationCompleted == null))
            {
                this.CloseServiceCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseServiceCallOperationCompleted);
            }
            this.InvokeAsync("CloseServiceCall", new object[] {
                                                                  serviceID,
                                                                  jobID,
                                                                  remedy,
                                                                  userId,
                                                                  notes}, this.CloseServiceCallOperationCompleted, userState);
        }

        private void OnCloseServiceCallOperationCompleted(object arg)
        {
            if ((this.CloseServiceCallCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseServiceCallCompleted(this, new CloseServiceCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/InsertServiceNotes", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int InsertServiceNotes(string jobID, string notes, string userName)
        {
            object[] results = this.Invoke("InsertServiceNotes", new object[] {
                                                                                  jobID,
                                                                                  notes,
                                                                                  userName});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInsertServiceNotes(string jobID, string notes, string userName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InsertServiceNotes", new object[] {
                                                                           jobID,
                                                                           notes,
                                                                           userName}, callback, asyncState);
        }

        /// <remarks/>
        public int EndInsertServiceNotes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void InsertServiceNotesAsync(string jobID, string notes, string userName)
        {
            this.InsertServiceNotesAsync(jobID, notes, userName, null);
        }

        /// <remarks/>
        public void InsertServiceNotesAsync(string jobID, string notes, string userName, object userState)
        {
            if ((this.InsertServiceNotesOperationCompleted == null))
            {
                this.InsertServiceNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertServiceNotesOperationCompleted);
            }
            this.InvokeAsync("InsertServiceNotes", new object[] {
                                                                    jobID,
                                                                    notes,
                                                                    userName}, this.InsertServiceNotesOperationCompleted, userState);
        }

        private void OnInsertServiceNotesOperationCompleted(object arg)
        {
            if ((this.InsertServiceNotesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertServiceNotesCompleted(this, new InsertServiceNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/EscalateService", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int EscalateService(string jobID, int UserID)
        {
            object[] results = this.Invoke("EscalateService", new object[] {
                                                                               jobID, UserID});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginEscalateService(string jobID, int UserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("EscalateService", new object[] {
                                                                        jobID, UserID}, callback, asyncState);
        }

        /// <remarks/>
        public int EndEscalateService(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void EscalateServiceAsync(string jobID, int UserID)
        {
            this.EscalateServiceAsync(jobID, UserID, null);
        }

        /// <remarks/>
        public void EscalateServiceAsync(string jobID, int UserID, object userState)
        {
            if ((this.EscalateServiceOperationCompleted == null))
            {
                this.EscalateServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEscalateServiceOperationCompleted);
            }
            this.InvokeAsync("EscalateService", new object[] {
                                                                 jobID, UserID}, this.EscalateServiceOperationCompleted, userState);
        }

        private void OnEscalateServiceOperationCompleted(object arg)
        {
            if ((this.EscalateServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EscalateServiceCompleted(this, new EscalateServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetBarPositionStatus", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetBarPositionStatus(string siteCode)
        {
            object[] results = this.Invoke("GetBarPositionStatus", new object[] {
                                                                                    siteCode});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetBarPositionStatus(string siteCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetBarPositionStatus", new object[] {
                                                                             siteCode}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetBarPositionStatus(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetBarPositionStatusAsync(string siteCode)
        {
            this.GetBarPositionStatusAsync(siteCode, null);
        }

        /// <remarks/>
        public void GetBarPositionStatusAsync(string siteCode, object userState)
        {
            if ((this.GetBarPositionStatusOperationCompleted == null))
            {
                this.GetBarPositionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBarPositionStatusOperationCompleted);
            }
            this.InvokeAsync("GetBarPositionStatus", new object[] {
                                                                      siteCode}, this.GetBarPositionStatusOperationCompleted, userState);
        }

        private void OnGetBarPositionStatusOperationCompleted(object arg)
        {
            if ((this.GetBarPositionStatusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBarPositionStatusCompleted(this, new GetBarPositionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetWeeklyCollectionDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetWeeklyCollectionDetails(string strSiteCode, int iWeekID, int iNoOfRecords)
        {
            object[] results = this.Invoke("GetWeeklyCollectionDetails", new object[] {
                                                                                          strSiteCode,
                                                                                          iWeekID,
                                                                                          iNoOfRecords});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetWeeklyCollectionDetails(string strSiteCode, int iWeekID, int iNoOfRecords, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetWeeklyCollectionDetails", new object[] {
                                                                                   strSiteCode,
                                                                                   iWeekID,
                                                                                   iNoOfRecords}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetWeeklyCollectionDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetWeeklyCollectionDetailsAsync(string strSiteCode, int iWeekID, int iNoOfRecords)
        {
            this.GetWeeklyCollectionDetailsAsync(strSiteCode, iWeekID, iNoOfRecords, null);
        }

        /// <remarks/>
        public void GetWeeklyCollectionDetailsAsync(string strSiteCode, int iWeekID, int iNoOfRecords, object userState)
        {
            if ((this.GetWeeklyCollectionDetailsOperationCompleted == null))
            {
                this.GetWeeklyCollectionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWeeklyCollectionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetWeeklyCollectionDetails", new object[] {
                                                                            strSiteCode,
                                                                            iWeekID,
                                                                            iNoOfRecords}, this.GetWeeklyCollectionDetailsOperationCompleted, userState);
        }

        private void OnGetWeeklyCollectionDetailsOperationCompleted(object arg)
        {
            if ((this.GetWeeklyCollectionDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWeeklyCollectionDetailsCompleted(this, new GetWeeklyCollectionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetHqInstallationID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetHqInstallationID()
        {
            object[] results = this.Invoke("GetHqInstallationID", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetHqInstallationID(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetHqInstallationID", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetHqInstallationID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetHqInstallationIDAsync()
        {
            this.GetHqInstallationIDAsync(null);
        }

        /// <remarks/>
        public void GetHqInstallationIDAsync(object userState)
        {
            if ((this.GetHqInstallationIDOperationCompleted == null))
            {
                this.GetHqInstallationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHqInstallationIDOperationCompleted);
            }
            this.InvokeAsync("GetHqInstallationID", new object[0], this.GetHqInstallationIDOperationCompleted, userState);
        }

        private void OnGetHqInstallationIDOperationCompleted(object arg)
        {
            if ((this.GetHqInstallationIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHqInstallationIDCompleted(this, new GetHqInstallationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetCashDeskServiceFaults", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetCashDeskServiceFaults()
        {
            object[] results = this.Invoke("GetCashDeskServiceFaults", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCashDeskServiceFaults(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCashDeskServiceFaults", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetCashDeskServiceFaults(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetCashDeskServiceFaultsAsync()
        {
            this.GetCashDeskServiceFaultsAsync(null);
        }

        /// <remarks/>
        public void GetCashDeskServiceFaultsAsync(object userState)
        {
            if ((this.GetCashDeskServiceFaultsOperationCompleted == null))
            {
                this.GetCashDeskServiceFaultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashDeskServiceFaultsOperationCompleted);
            }
            this.InvokeAsync("GetCashDeskServiceFaults", new object[0], this.GetCashDeskServiceFaultsOperationCompleted, userState);
        }

        private void OnGetCashDeskServiceFaultsOperationCompleted(object arg)
        {
            if ((this.GetCashDeskServiceFaultsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashDeskServiceFaultsCompleted(this, new GetCashDeskServiceFaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetRemedies", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetRemedies()
        {
            object[] results = this.Invoke("GetRemedies", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetRemedies(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRemedies", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetRemedies(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetRemediesAsync()
        {
            this.GetRemediesAsync(null);
        }

        /// <remarks/>
        public void GetRemediesAsync(object userState)
        {
            if ((this.GetRemediesOperationCompleted == null))
            {
                this.GetRemediesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRemediesOperationCompleted);
            }
            this.InvokeAsync("GetRemedies", new object[0], this.GetRemediesOperationCompleted, userState);
        }

        private void OnGetRemediesOperationCompleted(object arg)
        {
            if ((this.GetRemediesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRemediesCompleted(this, new GetRemediesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/UpdateInstallationGame", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string UpdateInstallationGame(string strInstallationXML)
        {
            object[] results = this.Invoke("UpdateInstallationGame", new object[] {
                                                                                      strInstallationXML});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateInstallationGame(string strInstallationXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateInstallationGame", new object[] {
                                                                               strInstallationXML}, callback, asyncState);
        }

        /// <remarks/>
        public string EndUpdateInstallationGame(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void UpdateInstallationGameAsync(string strInstallationXML)
        {
            this.UpdateInstallationGameAsync(strInstallationXML, null);
        }

        /// <remarks/>
        public void UpdateInstallationGameAsync(string strInstallationXML, object userState)
        {
            if ((this.UpdateInstallationGameOperationCompleted == null))
            {
                this.UpdateInstallationGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInstallationGameOperationCompleted);
            }
            this.InvokeAsync("UpdateInstallationGame", new object[] {
                                                                        strInstallationXML}, this.UpdateInstallationGameOperationCompleted, userState);
        }

        private void OnUpdateInstallationGameOperationCompleted(object arg)
        {
            if ((this.UpdateInstallationGameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInstallationGameCompleted(this, new UpdateInstallationGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetAssetDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetAssetDetails(string assetNo, string transitSiteCode)
        {
            object[] results = this.Invoke("GetAssetDetails", new object[] {
                                                                               assetNo, transitSiteCode});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAssetDetails(string assetNo, string transitSiteCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAssetDetails", new object[] {
                                                                        assetNo, transitSiteCode}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetAssetDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetAssetDetailsAsync(string assetNo, string transitSiteCode)
        {
            this.GetAssetDetailsAsync(assetNo, transitSiteCode, null);
        }

        /// <remarks/>
        public void GetAssetDetailsAsync(string assetNo, string transitSiteCode, object userState)
        {
            if ((this.GetAssetDetailsOperationCompleted == null))
            {
                this.GetAssetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAssetDetails", new object[] {
                                                                 assetNo, transitSiteCode}, this.GetAssetDetailsOperationCompleted, userState);
        }

        private void OnGetAssetDetailsOperationCompleted(object arg)
        {
            if ((this.GetAssetDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssetDetailsCompleted(this, new GetAssetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportSiteSettings", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportSiteSettings(string strXML)
        {
            object[] results = this.Invoke("ImportSiteSettings", new object[] {
                    strXML});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportSiteSettings(string strXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportSiteSettings", new object[] {
                    strXML}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportSiteSettings(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportSiteSettingsAsync(string strXML)
        {
            this.ImportSiteSettingsAsync(strXML, null);
        }

        /// <remarks/>
        public void ImportSiteSettingsAsync(string strXML, object userState)
        {
            if ((this.ImportSiteSettingsOperationCompleted == null))
            {
                this.ImportSiteSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportSiteSettingsOperationCompleted);
            }
            this.InvokeAsync("ImportSiteSettings", new object[] {
                    strXML}, this.ImportSiteSettingsOperationCompleted, userState);
        }

        private void OnImportSiteSettingsOperationCompleted(object arg)
        {
            if ((this.ImportSiteSettingsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportSiteSettingsCompleted(this, new ImportSiteSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportVoucherDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportVoucherDetails(string strXMLData)
        {
            object[] results = this.Invoke("ImportVoucherDetails", new object[] {
                    strXMLData});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportVoucherDetails(string strXMLData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportVoucherDetails", new object[] {
                    strXMLData}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportVoucherDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportVoucherDetailsAsync(string strXMLData)
        {
            this.ImportVoucherDetailsAsync(strXMLData, null);
        }

        /// <remarks/>
        public void ImportVoucherDetailsAsync(string strXMLData, object userState)
        {
            if ((this.ImportVoucherDetailsOperationCompleted == null))
            {
                this.ImportVoucherDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportVoucherDetailsOperationCompleted);
            }
            this.InvokeAsync("ImportVoucherDetails", new object[] {
                    strXMLData}, this.ImportVoucherDetailsOperationCompleted, userState);
        }

        private void OnImportVoucherDetailsOperationCompleted(object arg)
        {
            if ((this.ImportVoucherDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportVoucherDetailsCompleted(this, new ImportVoucherDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportTicketExceptionDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportTicketExceptionDetails(string strXMLData, int iSiteCode)
        {
            object[] results = this.Invoke("ImportTicketExceptionDetails", new object[] {
                    strXMLData, iSiteCode});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportTicketExceptionDetails(string strXMLData, int iSiteCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportTicketExceptionDetails", new object[] {
                    strXMLData, iSiteCode}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportTicketExceptionDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportTicketExceptionDetailsAsync(string strXMLData, int iSiteCode)
        {
            this.ImportTicketExceptionDetailsAsync(strXMLData, iSiteCode, null);
        }

        /// <remarks/>
        public void ImportTicketExceptionDetailsAsync(string strXMLData, int iSiteCode, object userState)
        {
            if ((this.ImportTicketExceptionDetailsOperationCompleted == null))
            {
                this.ImportTicketExceptionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportTicketExceptionDetailsOperationCompleted);
            }
            this.InvokeAsync("ImportTicketExceptionDetails", new object[] {
                    strXMLData, iSiteCode}, this.ImportTicketExceptionDetailsOperationCompleted, userState);
        }

        private void OnImportTicketExceptionDetailsOperationCompleted(object arg)
        {
            if ((this.ImportTicketExceptionDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportTicketExceptionDetailsCompleted(this, new ImportTicketExceptionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportPromotionsDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportPromotionsDetails(string strXMLData, int iSiteCode)
        {
            object[] results = this.Invoke("ImportPromotionsDetails", new object[] {
                    strXMLData,iSiteCode});
            return ((bool)(results[0]));
        }




        /// <remarks/>
        public System.IAsyncResult BeginIImportPromotionsDetails(string strXMLData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportPromotionsDetails", new object[] {
                    strXMLData}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportPromotionsDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportPromotionsDetailsAsync(string strXMLData, int iSiteCode)
        {
            this.ImportPromotionsDetailsAsync(strXMLData, iSiteCode, null);
        }

        /// <remarks/>
        public void ImportPromotionsDetailsAsync(string strXMLData, int iSiteCode, object userState)
        {
            if ((this.ImportPromotionsDetailsOperationCompleted == null))
            {
                this.ImportPromotionsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportPromotionsDetailsOperationCompleted);
            }
            this.InvokeAsync("ImportPromotionsDetails", new object[] {
                    strXMLData,iSiteCode}, this.ImportPromotionsDetailsOperationCompleted, userState);
        }

        private void OnImportPromotionsDetailsOperationCompleted(object arg)
        {
            if ((this.ImportPromotionsDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportPromotionsDetailsCompleted(this, new ImportPromotionsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }



        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportExternalVoucherDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportExternalVoucherDetails(string strXMLData, int iSiteCode)
        {
            object[] results = this.Invoke("ImportExternalVoucherDetails", new object[] {
                    strXMLData,iSiteCode});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportPromotionalTicketsDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportPromotionalTicketsDetails(string strXMLData, int iSiteID)
        {
            object[] results = this.Invoke("ImportPromotionalTicketsDetails", new object[] {
                    strXMLData,iSiteID});
            return ((bool)(results[0]));
        }
        /// <remarks/>
        public System.IAsyncResult BeginIImportPromotionalTicketsDetails(string strXMLData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportPromotionalTicketsDetails", new object[] {
                    strXMLData}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportPromotionalTicketsDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportPromotionalTicketsDetailsAsync(string strXMLData, int iSiteCode)
        {
            this.ImportPromotionalTicketsDetailsAsync(strXMLData, iSiteCode, null);
        }

        /// <remarks/>
        public void ImportPromotionalTicketsDetailsAsync(string strXMLData, int iSiteCode, object userState)
        {
            if ((this.ImportPromotionalTicketsDetailsOperationCompleted == null))
            {
                this.ImportPromotionalTicketsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportPromotionalTicketsDetailsOperationCompleted);
            }
            this.InvokeAsync("ImportPromotionsDetails", new object[] {
                    strXMLData,iSiteCode}, this.ImportPromotionalTicketsDetailsOperationCompleted, userState);
        }

        private void OnImportPromotionalTicketsDetailsOperationCompleted(object arg)
        {
            if ((this.ImportPromotionalTicketsDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportPromotionalTicketsDetailsCompleted(this, new ImportPromotionalTicketsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }



        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportDeviceDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportDeviceDetails(string strXMLData)
        {
            object[] results = this.Invoke("ImportDeviceDetails", new object[] {
                    strXMLData});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportDeviceDetails(string strXMLData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportDeviceDetails", new object[] {
                    strXMLData}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportDeviceDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportDeviceDetailsAsync(string strXMLData)
        {
            this.ImportDeviceDetailsAsync(strXMLData, null);
        }

        /// <remarks/>
        public void ImportDeviceDetailsAsync(string strXMLData, object userState)
        {
            if ((this.ImportDeviceDetailsOperationCompleted == null))
            {
                this.ImportDeviceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDeviceDetailsOperationCompleted);
            }
            this.InvokeAsync("ImportDeviceDetails", new object[] {
                    strXMLData}, this.ImportDeviceDetailsOperationCompleted, userState);
        }

        private void OnImportDeviceDetailsOperationCompleted(object arg)
        {
            if ((this.ImportDeviceDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDeviceDetailsCompleted(this, new ImportDeviceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertHandpay", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool InsertHandpay(string xmlString)
        {
            object[] results = this.Invoke("InsertHandpay", new object[] {
                    xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInsertHandpay(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InsertHandpay", new object[] {
                    xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndInsertHandpay(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void InsertHandpayAsync(string xmlString)
        {
            this.InsertHandpayAsync(xmlString, null);
        }

        /// <remarks/>
        public void InsertHandpayAsync(string xmlString, object userState)
        {
            if ((this.InsertHandpayOperationCompleted == null))
            {
                this.InsertHandpayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHandpayOperationCompleted);
            }
            this.InvokeAsync("InsertHandpay", new object[] {
                    xmlString}, this.InsertHandpayOperationCompleted, userState);
        }

        private void OnInsertHandpayOperationCompleted(object arg)
        {
            if ((this.InsertHandpayCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHandpayCompleted(this, new InsertHandpayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        //[System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        //[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitiateWebService", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        ////[SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitiateWebService", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InitiateWebService()
        {
            object[] results = this.Invoke("InitiateWebService", new object[] { });
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInitiateWebService(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InitiateWebService", new object[] { }, callback, asyncState);
        }

        /// <remarks/>
        public int EndInitiateWebService(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void InitiateWebServiceAsync()
        {
            this.InitiateWebServiceAsync();
        }

        /// <remarks/>
        public void InitiateWebServiceAsync(object userState)
        {
            if ((this.InitiateWebServiceOperationCompleted == null))
            {
                this.InitiateWebServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateWebServiceOperationCompleted);
            }
            this.InvokeAsync("InitiateWebService", new object[] { }, this.InitiateWebServiceOperationCompleted, userState);
        }

        private void OnInitiateWebServiceOperationCompleted(object arg)
        {
            if ((this.InitiateWebServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateWebServiceCompleted(this, new InitiateWebServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        //[System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        //[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTransactionKey", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        //[SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTransactionKey", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckTransactionKey(string Site_Code, string TransactionKey, string TransactionType)
        {
            object[] results = this.Invoke("CheckTransactionKey", new object[] {
                    Site_Code,
                    TransactionKey, TransactionType});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckTransactionKey(string Site_Code, string TransactionKey, string TransactionType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckTransactionKey", new object[] {
                    Site_Code,
                    TransactionKey, TransactionType}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCheckTransactionKey(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void CheckTransactionKeyAsync(string Site_Code, string TransactionKey, string TransactionType)
        {
            this.CheckTransactionKeyAsync(Site_Code, TransactionKey, TransactionType, null);
        }

        /// <remarks/>
        public void CheckTransactionKeyAsync(string Site_Code, string TransactionKey, string TransactionType, object userState)
        {
            if ((this.CheckTransactionKeyOperationCompleted == null))
            {
                this.CheckTransactionKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTransactionKeyOperationCompleted);
            }
            this.InvokeAsync("CheckTransactionKey", new object[] {
                    Site_Code,
                    TransactionKey, TransactionType}, this.CheckTransactionKeyOperationCompleted, userState);
        }

        private void OnCheckTransactionKeyOperationCompleted(object arg)
        {
            if ((this.CheckTransactionKeyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTransactionKeyCompleted(this, new CheckTransactionKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        /// <remarks/>
        //[System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        //[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLicenseKey", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        //[SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLicenseKey", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckLicenseKey(string sLicenseKey, string sSitecode, string sUserName)
        {
            object[] results = this.Invoke("CheckLicenseKey", new object[] {
                    sLicenseKey,
                    sSitecode,
                    sUserName});
            return (Convert.ToInt32(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckLicenseKey(string sLicenseKey, string sSitecode, string sUserName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckLicenseKey", new object[] {
                    sLicenseKey,
                    sSitecode,
                    sUserName}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCheckLicenseKey(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void CheckLicenseKeyAsync(string sLicenseKey, string sSitecode, string sUserName)
        {
            this.CheckLicenseKeyAsync(sLicenseKey, sSitecode, sUserName, null);
        }

        /// <remarks/>
        public void CheckLicenseKeyAsync(string sLicenseKey, string sSitecode, string sUserName, object userState)
        {
            if ((this.CheckLicenseKeyOperationCompleted == null))
            {
                this.CheckLicenseKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLicenseKeyOperationCompleted);
            }
            this.InvokeAsync("CheckLicenseKey", new object[] {
                    sLicenseKey,
                    sSitecode,
                    sUserName}, this.CheckLicenseKeyOperationCompleted, userState);
        }

        private void OnCheckLicenseKeyOperationCompleted(object arg)
        {
            if ((this.CheckLicenseKeyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLicenseKeyCompleted(this, new CheckLicenseKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        //[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLicenseActivation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLicenseActivation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int UpdateLicenseActivation(string sLicenseKey, string sSitecode, string sUserName, DateTime dtActivatedDateTime)
        {
            object[] results = this.Invoke("UpdateLicenseActivation", new object[] {
                    sLicenseKey,
                    sSitecode,
                    sUserName,
                    dtActivatedDateTime});
            return (Convert.ToInt32(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateLicenseActivation(string sLicenseKey, string sSitecode, string sUserName, DateTime dtActivatedDateTime, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateLicenseActivation", new object[] {
                    sLicenseKey,
                    sSitecode,
                    sUserName,
                    dtActivatedDateTime}, callback, asyncState);
        }

        /// <remarks/>
        public string EndUpdateLicenseActivation(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void UpdateLicenseActivationAsync(string sLicenseKey, string sSitecode, string sUserName, DateTime dtActivatedDateTime)
        {
            this.UpdateLicenseActivationAsync(sLicenseKey, sSitecode, sUserName, dtActivatedDateTime, null);
        }

        /// <remarks/>
        public void UpdateLicenseActivationAsync(string sLicenseKey, string sSitecode, string sUserName, DateTime dtActivatedDateTime, object userState)
        {
            if ((this.UpdateLicenseActivationOperationCompleted == null))
            {
                this.UpdateLicenseActivationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLicenseActivationOperationCompleted);
            }
            this.InvokeAsync("UpdateLicenseActivation", new object[] {
                    sLicenseKey,
                    sSitecode,
                    sUserName,
                    dtActivatedDateTime}, this.UpdateLicenseActivationOperationCompleted, userState);
        }

        private void OnUpdateLicenseActivationOperationCompleted(object arg)
        {
            if ((this.UpdateLicenseActivationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLicenseActivationCompleted(this, new UpdateLicenseActivationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommonData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommonData(string SiteCode, string DataType, string XMLData)
        {
            object[] results = this.Invoke("GetCommonData", new object[] {
                    SiteCode,
                    DataType,
                    XMLData
                    });
            return ((string)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetSiteDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetSiteDetails(string Site_Code)
        {
            object[] results = this.Invoke("GetSiteDetails", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSiteDetails(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSiteDetails", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetSiteDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetSiteDetailsAsync(string Site_Code)
        {
            this.GetSiteDetailsAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetSiteDetailsAsync(string Site_Code, object userState)
        {
            if ((this.GetSiteDetailsOperationCompleted == null))
            {
                this.GetSiteDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSiteDetails", new object[] {
                    Site_Code}, this.GetSiteDetailsOperationCompleted, userState);
        }

        private void OnGetSiteDetailsOperationCompleted(object arg)
        {
            if ((this.GetSiteDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteDetailsCompleted(this, new GetSiteDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        ///<remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteAllianceData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetSiteAllianceData(int siteId)
        {
            object[] results = this.Invoke("GetSiteAllianceData", new object[] {
                    siteId});
            return ((string)(results[0]));
        }
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstallationData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetInstallationData(int siteId)
        {
            object[] results = this.Invoke("GetInstallationData", new object[] {
                    siteId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetInstallationData(int siteId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetInstallationData", new object[] {
                    siteId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetInstallationData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetInstallationDataAsync(int siteId)
        {
            this.GetInstallationDataAsync(siteId, null);
        }

        /// <remarks/>
        public void GetInstallationDataAsync(int siteId, object userState)
        {
            if ((this.GetInstallationDataOperationCompleted == null))
            {
                this.GetInstallationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstallationDataOperationCompleted);
            }
            this.InvokeAsync("GetInstallationData", new object[] {
                    siteId}, this.GetInstallationDataOperationCompleted, userState);
        }

        private void OnGetInstallationDataOperationCompleted(object arg)
        {
            if ((this.GetInstallationDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstallationDataCompleted(this, new GetInstallationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetZonesData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetZonesData(int siteId)
        {
            object[] results = this.Invoke("GetZonesData", new object[] {
                    siteId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetZonesData(int siteId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetZonesData", new object[] {
                    siteId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetZonesData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetZonesDataAsync(int siteId)
        {
            this.GetZonesDataAsync(siteId, null);
        }

        /// <remarks/>
        public void GetZonesDataAsync(int siteId, object userState)
        {
            if ((this.GetZonesDataOperationCompleted == null))
            {
                this.GetZonesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZonesDataOperationCompleted);
            }
            this.InvokeAsync("GetZonesData", new object[] {
                    siteId}, this.GetZonesDataOperationCompleted, userState);
        }

        private void OnGetZonesDataOperationCompleted(object arg)
        {
            if ((this.GetZonesDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZonesDataCompleted(this, new GetZonesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBarPositionsData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetBarPositionsData(int siteId)
        {
            object[] results = this.Invoke("GetBarPositionsData", new object[] {
                    siteId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetBarPositionsData(int siteId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetBarPositionsData", new object[] {
                    siteId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetBarPositionsData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetBarPositionsDataAsync(int siteId)
        {
            this.GetBarPositionsDataAsync(siteId, null);
        }

        /// <remarks/>
        public void GetBarPositionsDataAsync(int siteId, object userState)
        {
            if ((this.GetBarPositionsDataOperationCompleted == null))
            {
                this.GetBarPositionsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBarPositionsDataOperationCompleted);
            }
            this.InvokeAsync("GetBarPositionsData", new object[] {
                    siteId}, this.GetBarPositionsDataOperationCompleted, userState);
        }

        private void OnGetBarPositionsDataOperationCompleted(object arg)
        {
            if ((this.GetBarPositionsDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBarPositionsDataCompleted(this, new GetBarPositionsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMachineData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetMachineData(int siteId)
        {
            object[] results = this.Invoke("GetMachineData", new object[] {
                    siteId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetMachineData(int siteId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetMachineData", new object[] {
                    siteId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetMachineData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetMachineDataAsync(int siteId)
        {
            this.GetMachineDataAsync(siteId, null);
        }

        /// <remarks/>
        public void GetMachineDataAsync(int siteId, object userState)
        {
            if ((this.GetMachineDataOperationCompleted == null))
            {
                this.GetMachineDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineDataOperationCompleted);
            }
            this.InvokeAsync("GetMachineData", new object[] {
                    siteId}, this.GetMachineDataOperationCompleted, userState);
        }

        private void OnGetMachineDataOperationCompleted(object arg)
        {
            if ((this.GetMachineDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineDataCompleted(this, new GetMachineDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestMeterHistory", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetLatestMeterHistory(string strInstallationXML)
        {
            object[] results = this.Invoke("GetLatestMeterHistory", new object[] {
                    strInstallationXML});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetLatestMeterHistory(string strInstallationXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetLatestMeterHistory", new object[] {
                    strInstallationXML}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetLatestMeterHistory(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetLatestMeterHistoryAsync(string strInstallationXML)
        {
            this.GetLatestMeterHistoryAsync(strInstallationXML, null);
        }

        /// <remarks/>
        public void GetLatestMeterHistoryAsync(string strInstallationXML, object userState)
        {
            if ((this.GetLatestMeterHistoryOperationCompleted == null))
            {
                this.GetLatestMeterHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestMeterHistoryOperationCompleted);
            }
            this.InvokeAsync("GetLatestMeterHistory", new object[] {
                    strInstallationXML}, this.GetLatestMeterHistoryOperationCompleted, userState);
        }

        private void OnGetLatestMeterHistoryOperationCompleted(object arg)
        {
            if ((this.GetLatestMeterHistoryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestMeterHistoryCompleted(this, new GetLatestMeterHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestSiteBatchID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetLatestSiteBatchID(int siteCode, int XDays)
        {
            object[] results = this.Invoke("GetLatestSiteBatchID", new object[] {
                    siteCode,XDays});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetLatestSiteBatchID(int siteCode, int XDays, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetLatestSiteBatchID", new object[] {
                    siteCode,XDays}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetLatestSiteBatchID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetLatestSiteBatchIDAsync(int siteCode, int XDays)
        {
            this.GetLatestSiteBatchIDAsync(siteCode, XDays, null);
        }

        /// <remarks/>
        public void GetLatestSiteBatchIDAsync(int siteCode, int XDays, object userState)
        {
            if ((this.GetLatestSiteBatchIDOperationCompleted == null))
            {
                this.GetLatestSiteBatchIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestSiteBatchIDOperationCompleted);
            }
            this.InvokeAsync("GetLatestSiteBatchID", new object[] {
                    siteCode,XDays}, this.GetLatestSiteBatchIDOperationCompleted, userState);
        }

        private void OnGetLatestSiteBatchIDOperationCompleted(object arg)
        {
            if ((this.GetLatestSiteBatchIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestSiteBatchIDCompleted(this, new GetLatestSiteBatchIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteTickets", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetSiteTickets(int iSiteCode, int iRecords)
        {
            object[] results = this.Invoke("GetSiteTickets", new object[] {
                    iSiteCode,
                    iRecords});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSiteTickets(int iSiteCode, int iRecords, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSiteTickets", new object[] {
                    iSiteCode,
                    iRecords}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetSiteTickets(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetSiteTicketsAsync(int iSiteCode, int iRecords)
        {
            this.GetSiteTicketsAsync(iSiteCode, iRecords, null);
        }

        /// <remarks/>
        public void GetSiteTicketsAsync(int iSiteCode, int iRecords, object userState)
        {
            if ((this.GetSiteTicketsOperationCompleted == null))
            {
                this.GetSiteTicketsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteTicketsOperationCompleted);
            }
            this.InvokeAsync("GetSiteTickets", new object[] {
                    iSiteCode,
                    iRecords}, this.GetSiteTicketsOperationCompleted, userState);
        }

        private void OnGetSiteTicketsOperationCompleted(object arg)
        {
            if ((this.GetSiteTicketsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteTicketsCompleted(this, new GetSiteTicketsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteTicketExceptions", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetSiteTicketExceptions(int iSiteCode, int iRecords)
        {
            object[] results = this.Invoke("GetSiteTicketExceptions", new object[] {
                    iSiteCode,
                    iRecords});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSiteTicketExceptions(int iSiteCode, int iRecords, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSiteTicketExceptions", new object[] {
                    iSiteCode,
                    iRecords}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetSiteTicketExceptions(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetSiteTicketExceptionsAsync(int iSiteCode, int iRecords)
        {
            this.GetSiteTicketExceptionsAsync(iSiteCode, iRecords, null);
        }

        /// <remarks/>
        public void GetSiteTicketExceptionsAsync(int iSiteCode, int iRecords, object userState)
        {
            if ((this.GetSiteTicketExceptionsOperationCompleted == null))
            {
                this.GetSiteTicketExceptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteTicketExceptionsOperationCompleted);
            }
            this.InvokeAsync("GetSiteTicketExceptions", new object[] {
                    iSiteCode,
                    iRecords}, this.GetSiteTicketExceptionsOperationCompleted, userState);
        }

        private void OnGetSiteTicketExceptionsOperationCompleted(object arg)
        {
            if ((this.GetSiteTicketExceptionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteTicketExceptionsCompleted(this, new GetSiteTicketExceptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }



        ///// <remarks/>
        //[System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        //[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSitePromotions", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        //[SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        //public System.Data.DataTable GetSitePromotions(int iSiteCode, int iRecords)
        //{
        //    object[] results = this.Invoke("GetSitePromotions", new object[] {
        //            iSiteCode,
        //            iRecords});
        //    return ((System.Data.DataTable)(results[0]));
        //}

        ///// <remarks/>
        //public System.IAsyncResult BeginGetSitePromotions(int iSiteCode, int iRecords, System.AsyncCallback callback, object asyncState)
        //{
        //    return this.BeginInvoke("GetSitePromotions", new object[] {
        //            iSiteCode,
        //            iRecords}, callback, asyncState);
        //}

        ///// <remarks/>
        //public System.Data.DataTable EndGetSitePromotions(System.IAsyncResult asyncResult)
        //{
        //    object[] results = this.EndInvoke(asyncResult);
        //    return ((System.Data.DataTable)(results[0]));
        //}

        ///// <remarks/>
        //public void GetSitePromotionsAsync(int iSiteCode, int iRecords)
        //{
        //    this.GetSitePromotionsAsync(iSiteCode, iRecords, null);
        //}

        ///// <remarks/>
        //public void GetSitePromotionsAsync(int iSiteCode, int iRecords, object userState)
        //{
        //    if ((this.GetSitePromotionsOperationCompleted == null))
        //    {
        //        this.GetSitePromotionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSitePromotionsOperationCompleted);
        //    }
        //    this.InvokeAsync("GetSitePromotions", new object[] {
        //            iSiteCode,
        //            iRecords}, this.GetSitePromotionsOperationCompleted, userState);
        //}

        //private void OnGetSitePromotionsOperationCompleted(object arg)
        //{
        //    if ((this.GetSitePromotionsCompleted != null))
        //    {
        //        System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
        //        this.GetSitePromotionsCompleted(this, new GetSitePromotionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        //    }
        //}


        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteDeviceDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetSiteDeviceDetails(int iSiteCode)
        {
            object[] results = this.Invoke("GetSiteDeviceDetails", new object[] {
                    iSiteCode});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSiteDeviceDetails(int iSiteCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSiteDeviceDetails", new object[] {
                    iSiteCode}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetSiteDeviceDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetSiteDeviceDetailsAsync(int iSiteCode)
        {
            this.GetSiteDeviceDetailsAsync(iSiteCode, null);
        }

        /// <remarks/>
        public void GetSiteDeviceDetailsAsync(int iSiteCode, object userState)
        {
            if ((this.GetSiteDeviceDetailsOperationCompleted == null))
            {
                this.GetSiteDeviceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteDeviceDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSiteDeviceDetails", new object[] {
                    iSiteCode}, this.GetSiteDeviceDetailsOperationCompleted, userState);
        }

        private void OnGetSiteDeviceDetailsOperationCompleted(object arg)
        {
            if ((this.GetSiteDeviceDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteDeviceDetailsCompleted(this, new GetSiteDeviceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteWorkstationDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetSiteWorkstationDetails(int iSiteCode)
        {
            object[] results = this.Invoke("GetSiteWorkstationDetails", new object[] {
                    iSiteCode});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSiteWorkstationDetails(int iSiteCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSiteWorkstationDetails", new object[] {
                    iSiteCode}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetSiteWorkstationDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetSiteWorkstationDetailsAsync(int iSiteCode)
        {
            this.GetSiteWorkstationDetailsAsync(iSiteCode, null);
        }

        /// <remarks/>
        public void GetSiteWorkstationDetailsAsync(int iSiteCode, object userState)
        {
            if ((this.GetSiteWorkstationDetailsOperationCompleted == null))
            {
                this.GetSiteWorkstationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteWorkstationDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSiteWorkstationDetails", new object[] {
                    iSiteCode}, this.GetSiteWorkstationDetailsOperationCompleted, userState);
        }

        private void OnGetSiteWorkstationDetailsOperationCompleted(object arg)
        {
            if ((this.GetSiteWorkstationDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteWorkstationDetailsCompleted(this, new GetSiteWorkstationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }





        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHandpays", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetHandpays(int iSiteCode, int iRecords)
        {
            object[] results = this.Invoke("GetHandpays", new object[] {
                    iSiteCode,
                    iRecords});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetHandpays(int iSiteCode, int iRecords, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetHandpays", new object[] {
                    iSiteCode,
                    iRecords}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetHandpays(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetHandpaysAsync(int iSiteCode, int iRecords)
        {
            this.GetHandpaysAsync(iSiteCode, iRecords, null);
        }

        /// <remarks/>
        public void GetHandpaysAsync(int iSiteCode, int iRecords, object userState)
        {
            if ((this.GetHandpaysOperationCompleted == null))
            {
                this.GetHandpaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHandpaysOperationCompleted);
            }
            this.InvokeAsync("GetHandpays", new object[] {
                    iSiteCode,
                    iRecords}, this.GetHandpaysOperationCompleted, userState);
        }

        private void OnGetHandpaysOperationCompleted(object arg)
        {
            if ((this.GetHandpaysCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHandpaysCompleted(this, new GetHandpaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCashDeskTransactions", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public String GetCashDeskTransactions(string strInstallationXML)
        {
            object[] results = this.Invoke("GetCashDeskTransactions", new object[] {
                    strInstallationXML});
            return ((String)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCashDeskTransactions(string strInstallationXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCashDeskTransactions", new object[] {
                    strInstallationXML}, callback, asyncState);
        }

        /// <remarks/>
        public String EndGetCashDeskTransactions(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((String)(results[0]));
        }

        /// <remarks/>
        public void GetCashDeskTransactionsAsync(string strInstallationXML)
        {
            this.GetCashDeskTransactionsAsync(strInstallationXML, null);
        }

        /// <remarks/>
        public void GetCashDeskTransactionsAsync(string strInstallationXML, object userState)
        {
            if ((this.GetCashDeskTransactionsOperationCompleted == null))
            {
                this.GetCashDeskTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashDeskTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetCashDeskTransactions", new object[] {
                    strInstallationXML}, this.GetCashDeskTransactionsOperationCompleted, userState);
        }

        private void OnGetCashDeskTransactionsOperationCompleted(object arg)
        {
            if ((this.GetCashDeskTransactionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashDeskTransactionsCompleted(this, new GetCashDeskTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTreasuryDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetTreasuryDetails(int BatchId)
        {
            object[] results = this.Invoke("GetTreasuryDetails", new object[] {
                    BatchId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetTreasuryDetails(int BatchId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetTreasuryDetails", new object[] {
                    BatchId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetTreasuryDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetTreasuryDetailsAsync(int BatchId)
        {
            this.GetTreasuryDetailsAsync(BatchId, null);
        }

        /// <remarks/>
        public void GetTreasuryDetailsAsync(int BatchId, object userState)
        {
            if ((this.GetTreasuryDetailsOperationCompleted == null))
            {
                this.GetTreasuryDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreasuryDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTreasuryDetails", new object[] {
                    BatchId}, this.GetTreasuryDetailsOperationCompleted, userState);
        }

        private void OnGetTreasuryDetailsOperationCompleted(object arg)
        {
            if ((this.GetTreasuryDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreasuryDetailsCompleted(this, new GetTreasuryDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEventsDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetEventsDetails(int BatchId)
        {
            object[] results = this.Invoke("GetEventsDetails", new object[] {
                    BatchId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetEventsDetails(int BatchId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetEventsDetails", new object[] {
                    BatchId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetEventsDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetEventsDetailsAsync(int BatchId)
        {
            this.GetEventsDetailsAsync(BatchId, null);
        }

        /// <remarks/>
        public void GetEventsDetailsAsync(int BatchId, object userState)
        {
            if ((this.GetEventsDetailsOperationCompleted == null))
            {
                this.GetEventsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventsDetailsOperationCompleted);
            }
            this.InvokeAsync("GetEventsDetails", new object[] {
                    BatchId}, this.GetEventsDetailsOperationCompleted, userState);
        }

        private void OnGetEventsDetailsOperationCompleted(object arg)
        {
            if ((this.GetEventsDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventsDetailsCompleted(this, new GetEventsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCollections", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetCollections(int BatchId)
        {
            object[] results = this.Invoke("GetCollections", new object[] {
                    BatchId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCollections(int BatchId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCollections", new object[] {
                    BatchId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCollections(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCollectionsAsync(int BatchId)
        {
            this.GetCollectionsAsync(BatchId, null);
        }

        /// <remarks/>
        public void GetCollectionsAsync(int BatchId, object userState)
        {
            if ((this.GetCollectionsOperationCompleted == null))
            {
                this.GetCollectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCollectionsOperationCompleted);
            }
            this.InvokeAsync("GetCollections", new object[] {
                    BatchId}, this.GetCollectionsOperationCompleted, userState);
        }

        private void OnGetCollectionsOperationCompleted(object arg)
        {
            if ((this.GetCollectionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCollectionsCompleted(this, new GetCollectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDailyReads", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetDailyReads(string Site_Code, int xWeeks)
        {
            object[] results = this.Invoke("GetDailyReads", new object[] {
                    Site_Code,
                    xWeeks});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDailyReads(string Site_Code, int xWeeks, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDailyReads", new object[] {
                    Site_Code,
                    xWeeks}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetDailyReads(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetDailyReadsAsync(string Site_Code, int xWeeks)
        {
            this.GetDailyReadsAsync(Site_Code, xWeeks, null);
        }

        /// <remarks/>
        public void GetDailyReadsAsync(string Site_Code, int xWeeks, object userState)
        {
            if ((this.GetDailyReadsOperationCompleted == null))
            {
                this.GetDailyReadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyReadsOperationCompleted);
            }
            this.InvokeAsync("GetDailyReads", new object[] {
                    Site_Code,
                    xWeeks}, this.GetDailyReadsOperationCompleted, userState);
        }

        private void OnGetDailyReadsOperationCompleted(object arg)
        {
            if ((this.GetDailyReadsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyReadsCompleted(this, new GetDailyReadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHourly", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetHourly(string Site_Code, int xWeeks)
        {
            object[] results = this.Invoke("GetHourly", new object[] {
                    Site_Code,
                    xWeeks});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetHourly(string Site_Code, int xWeeks, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetHourly", new object[] {
                    Site_Code,
                    xWeeks}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetHourly(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetHourlyAsync(string Site_Code, int xWeeks)
        {
            this.GetHourlyAsync(Site_Code, xWeeks, null);
        }

        /// <remarks/>
        public void GetHourlyAsync(string Site_Code, int xWeeks, object userState)
        {
            if ((this.GetHourlyOperationCompleted == null))
            {
                this.GetHourlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHourlyOperationCompleted);
            }
            this.InvokeAsync("GetHourly", new object[] {
                    Site_Code,
                    xWeeks}, this.GetHourlyOperationCompleted, userState);
        }

        private void OnGetHourlyOperationCompleted(object arg)
        {
            if ((this.GetHourlyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHourlyCompleted(this, new GetHourlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEvents", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetAllEvents(string Site_Code, int xWeeks)
        {
            object[] results = this.Invoke("GetAllEvents", new object[] {
                    Site_Code,
                    xWeeks});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllEvents(string Site_Code, int xWeeks, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllEvents", new object[] {
                    Site_Code,
                    xWeeks}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAllEvents(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAllEventsAsync(string Site_Code, int xWeeks)
        {
            this.GetAllEventsAsync(Site_Code, xWeeks, null);
        }

        /// <remarks/>
        public void GetAllEventsAsync(string Site_Code, int xWeeks, object userState)
        {
            if ((this.GetAllEventsOperationCompleted == null))
            {
                this.GetAllEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEventsOperationCompleted);
            }
            this.InvokeAsync("GetAllEvents", new object[] {
                    Site_Code,
                    xWeeks}, this.GetAllEventsOperationCompleted, userState);
        }

        private void OnGetAllEventsOperationCompleted(object arg)
        {
            if ((this.GetAllEventsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEventsCompleted(this, new GetAllEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUserDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetAllUserDetails(string Site_Code)
        {
            object[] results = this.Invoke("GetAllUserDetails", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllUserDetails(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllUserDetails", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAllUserDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAllUserDetailsAsync(string Site_Code)
        {
            this.GetAllUserDetailsAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetAllUserDetailsAsync(string Site_Code, object userState)
        {
            if ((this.GetAllUserDetailsOperationCompleted == null))
            {
                this.GetAllUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAllUserDetails", new object[] {
                    Site_Code}, this.GetAllUserDetailsOperationCompleted, userState);
        }

        private void OnGetAllUserDetailsOperationCompleted(object arg)
        {
            if ((this.GetAllUserDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserDetailsCompleted(this, new GetAllUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUserRoles", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetAllUserRoles(string Site_Code)
        {
            object[] results = this.Invoke("GetAllUserRoles", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllUserRoles(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllUserRoles", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAllUserRoles(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAllUserRolesAsync(string Site_Code)
        {
            this.GetAllUserRolesAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetAllUserRolesAsync(string Site_Code, object userState)
        {
            if ((this.GetAllUserRolesOperationCompleted == null))
            {
                this.GetAllUserRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserRolesOperationCompleted);
            }
            this.InvokeAsync("GetAllUserRoles", new object[] {
                    Site_Code}, this.GetAllUserRolesOperationCompleted, userState);
        }

        private void OnGetAllUserRolesOperationCompleted(object arg)
        {
            if ((this.GetAllUserRolesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserRolesCompleted(this, new GetAllUserRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUserRolesLinks", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetAllUserRolesLinks(string Site_Code)
        {
            object[] results = this.Invoke("GetAllUserRolesLinks", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllUserRolesLinks(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllUserRolesLinks", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAllUserRolesLinks(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAllUserRolesLinksAsync(string Site_Code)
        {
            this.GetAllUserRolesLinksAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetAllUserRolesLinksAsync(string Site_Code, object userState)
        {
            if ((this.GetAllUserRolesLinksOperationCompleted == null))
            {
                this.GetAllUserRolesLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserRolesLinksOperationCompleted);
            }
            this.InvokeAsync("GetAllUserRolesLinks", new object[] {
                    Site_Code}, this.GetAllUserRolesLinksOperationCompleted, userState);
        }

        private void OnGetAllUserRolesLinksOperationCompleted(object arg)
        {
            if ((this.GetAllUserRolesLinksCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserRolesLinksCompleted(this, new GetAllUserRolesLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllObjects", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetAllObjects()
        {
            object[] results = this.Invoke("GetAllObjects", new object[] { });
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllObjects(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllObjects", new object[] { }, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAllObjects(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAllObjectsAsync()
        {
            this.GetAllObjectsAsync();
        }

        /// <remarks/>
        public void GetAllObjectsAsync(object userState)
        {
            if ((this.GetAllObjectsOperationCompleted == null))
            {
                this.GetAllObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllObjectsOperationCompleted);
            }
            this.InvokeAsync("GetAllObjects", new object[] {
                    }, this.GetAllObjectsOperationCompleted, userState);
        }

        private void OnGetAllObjectsOperationCompleted(object arg)
        {
            if ((this.GetAllObjectsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllObjectsCompleted(this, new GetAllObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }



        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRoleAccessObjectRightLnk", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetAllRoleAccessObjectRightLnk()
        {
            object[] results = this.Invoke("GetAllRoleAccessObjectRightLnk", new object[] { });
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllRoleAccessObjectRightLnk(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllRoleAccessObjectRightLnk", new object[] { }, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAllRoleAccessObjectRightLnk(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAllRoleAccessObjectRightLnkAsync()
        {
            this.GetAllRoleAccessObjectRightLnkAsync();
        }

        /// <remarks/>
        public void GetAllRoleAccessObjectRightLnkAsync(object userState)
        {
            if ((this.GetAllRoleAccessObjectRightLnkOperationCompleted == null))
            {
                this.GetAllRoleAccessObjectRightLnkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRoleAccessObjectRightLnkOperationCompleted);
            }
            this.InvokeAsync("GetAllRoleAccessObjectRightLnk", new object[] {
                    }, this.GetAllRoleAccessObjectRightLnkOperationCompleted, userState);
        }

        private void OnGetAllRoleAccessObjectRightLnkOperationCompleted(object arg)
        {
            if ((this.GetAllRoleAccessObjectRightLnkCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRoleAccessObjectRightLnkCompleted(this, new GetAllRoleAccessObjectRightLnkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCalendars", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetCalendars(string Site_Code)
        {
            object[] results = this.Invoke("GetCalendars", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCalendars(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCalendars", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCalendars(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCalendarsAsync(string Site_Code)
        {
            this.GetCalendarsAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetCalendarsAsync(string Site_Code, object userState)
        {
            if ((this.GetCalendarsOperationCompleted == null))
            {
                this.GetCalendarsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCalendarsOperationCompleted);
            }
            this.InvokeAsync("GetCalendars", new object[] {
                    Site_Code}, this.GetCalendarsOperationCompleted, userState);
        }

        private void OnGetCalendarsOperationCompleted(object arg)
        {
            if ((this.GetCalendarsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCalendarsCompleted(this, new GetCalendarsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAAMSDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetAAMSDetails(int siteId)
        {
            object[] results = this.Invoke("GetAAMSDetails", new object[] {
                    siteId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAAMSDetails(int siteId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAAMSDetails", new object[] {
                    siteId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAAMSDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAAMSDetailsAsync(int siteId)
        {
            this.GetAAMSDetailsAsync(siteId, null);
        }

        /// <remarks/>
        public void GetAAMSDetailsAsync(int siteId, object userState)
        {
            if ((this.GetAAMSDetailsOperationCompleted == null))
            {
                this.GetAAMSDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAAMSDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAAMSDetails", new object[] {
                    siteId}, this.GetAAMSDetailsOperationCompleted, userState);
        }

        private void OnGetAAMSDetailsOperationCompleted(object arg)
        {
            if ((this.GetAAMSDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAAMSDetailsCompleted(this, new GetAAMSDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstallationGameInfo", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetInstallationGameInfo(int siteId)
        {
            object[] results = this.Invoke("GetInstallationGameInfo", new object[] {
                    siteId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetInstallationGameInfo(int siteId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetInstallationGameInfo", new object[] {
                    siteId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetInstallationGameInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetInstallationGameInfoAsync(int siteId)
        {
            this.GetInstallationGameInfoAsync(siteId, null);
        }

        /// <remarks/>
        public void GetInstallationGameInfoAsync(int siteId, object userState)
        {
            if ((this.GetInstallationGameInfoOperationCompleted == null))
            {
                this.GetInstallationGameInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstallationGameInfoOperationCompleted);
            }
            this.InvokeAsync("GetInstallationGameInfo", new object[] {
                    siteId}, this.GetInstallationGameInfoOperationCompleted, userState);
        }

        private void OnGetInstallationGameInfoOperationCompleted(object arg)
        {
            if ((this.GetInstallationGameInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstallationGameInfoCompleted(this, new GetInstallationGameInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystemSettings", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetSystemSettings(string Site_Code)
        {
            object[] results = this.Invoke("GetSystemSettings", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLookupMasterSettings", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetLookupMasterSettings()
        {
            object[] results = this.Invoke("GetLookupMasterSettings", new object[] {
                    });
            return ((string)(results[0]));
        }
        /// <remarks/>
        public System.IAsyncResult BeginGetSystemSettings(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSystemSettings", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetLookupMasterSettings(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetLookupMasterSettings", new object[] {
                    }, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetSystemSettings(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        /// <remarks/>
        public string EndGetLookupMasterSettings(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetSystemSettingsAsync(string Site_Code)
        {
            this.GetSystemSettingsAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetLookupMasterSettingsAsync()
        {
            this.GetLookupMasterSettingsAsync(null);
        }

        /// <remarks/>
        public void GetSystemSettingsAsync(string Site_Code, object userState)
        {
            if ((this.GetSystemSettingsOperationCompleted == null))
            {
                this.GetSystemSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemSettingsOperationCompleted);
            }
            this.InvokeAsync("GetSystemSettings", new object[] {
                    Site_Code}, this.GetSystemSettingsOperationCompleted, userState);
        }/// <remarks/>
        public void GetLookupMasterSettingsAsync(object userState)
        {
            if ((this.GetLookupMasterSettingsOperationCompleted == null))
            {
                this.GetLookupMasterSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLookupMasterSettingsOperationCompleted);
            }
            this.InvokeAsync("GetLookupMasterSettings", new object[] {
                    }, this.GetLookupMasterSettingsOperationCompleted, userState);
        }

        private void OnGetSystemSettingsOperationCompleted(object arg)
        {
            if ((this.GetSystemSettingsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemSettingsCompleted(this, new GetSystemSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        private void OnGetLookupMasterSettingsOperationCompleted(object arg)
        {
            if ((this.GetLookupMasterSettingsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLookupMasterSettingsCompleted(this, new GetLookupMasterSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetOtherMachineDetailsForRecovery", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetOtherMachineDetailsForRecovery(string Site_Code)
        {
            object[] results = this.Invoke("GetOtherMachineDetailsForRecovery", new object[] { Site_Code });
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOtherMachineDetailsForRecovery(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOtherMachineDetailsForRecovery", new object[] {
                                                                                   Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetOtherMachineDetailsForRecovery(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetOtherMachineDetailsForRecoveryAsync(string Site_Code)
        {
            this.GetOtherMachineDetailsForRecoveryAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetOtherMachineDetailsForRecoveryAsync(string Site_Code, object userState)
        {
            if ((this.GetOtherMachineDetailsForRecoveryOperationCompleted == null))
            {
                this.GetOtherMachineDetailsForRecoveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOtherMachineDetailsForRecoveryOperationCompleted);
            }
            this.InvokeAsync("GetOtherMachineDetailsForRecovery", new object[] {
                                                                             Site_Code}, this.GetOtherMachineDetailsForRecoveryOperationCompleted, userState);
        }

        private void OnGetOtherMachineDetailsForRecoveryOperationCompleted(object arg)
        {
            if ((this.GetOtherMachineDetailsForRecoveryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOtherMachineDetailsForRecoveryCompleted(this, new GetOtherMachineDetailsForRecoveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/SetSiteStatusEnterprise", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool SetSiteStatusEnterprise(string Site_Code, string sMessage)
        {
            object[] results = this.Invoke("SetSiteStatusEnterprise", new object[] {
                                                                                           Site_Code,
                                                                                           sMessage});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetSiteStatusEnterprise(string Site_Code, string sMessage, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetSiteStatusEnterprise", new object[] {
                                                                                   Site_Code,
                                                                                   sMessage}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndSetSiteStatusEnterprise(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void SetSiteStatusEnterpriseAsync(string Site_Code, string sMessage)
        {
            this.SetSiteStatusEnterpriseAsync(Site_Code, sMessage, null);
        }

        /// <remarks/>
        public void SetSiteStatusEnterpriseAsync(string Site_Code, string sMessage, object userState)
        {
            if ((this.SetSiteStatusEnterpriseOperationCompleted == null))
            {
                this.SetSiteStatusEnterpriseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSiteStatusEnterpriseOperationCompleted);
            }
            this.InvokeAsync("SetSiteStatusEnterprise", new object[] {
                                                                             Site_Code,
                                                                             sMessage}, this.SetSiteStatusEnterpriseOperationCompleted, userState);
        }

        private void OnSetSiteStatusEnterpriseOperationCompleted(object arg)
        {
            if ((this.SetSiteStatusEnterpriseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSiteStatusEnterpriseCompleted(this, new SetSiteStatusEnterpriseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetTransactionKey", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ResetTransactionKey(string Site_Code, string TransactionKey)
        {
            object[] results = this.Invoke("ResetTransactionKey", new object[] {
                    Site_Code,
                    TransactionKey});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginResetTransactionKey(string Site_Code, string TransactionKey, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ResetTransactionKey", new object[] {
                    Site_Code,
                    TransactionKey}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndResetTransactionKey(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ResetTransactionKeyAsync(string Site_Code, string TransactionKey)
        {
            this.ResetTransactionKeyAsync(Site_Code, TransactionKey, null);
        }

        /// <remarks/>
        public void ResetTransactionKeyAsync(string Site_Code, string TransactionKey, object userState)
        {
            if ((this.ResetTransactionKeyOperationCompleted == null))
            {
                this.ResetTransactionKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetTransactionKeyOperationCompleted);
            }
            this.InvokeAsync("ResetTransactionKey", new object[] {
                    Site_Code,
                    TransactionKey}, this.ResetTransactionKeyOperationCompleted, userState);
        }

        private void OnResetTransactionKeyOperationCompleted(object arg)
        {
            if ((this.ResetTransactionKeyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetTransactionKeyCompleted(this, new ResetTransactionKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetMultiGameInstallID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int GetMultiGameInstallID(string NewXML)
        {
            object[] results = this.Invoke("GetMultiGameInstallID", new object[] {
                    NewXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetMultiGameInstallID(string NewXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetMultiGameInstallID", new object[] {
                    NewXML}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetMultiGameInstallID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetMultiGameInstallIDAsync(string NewXML)
        {
            this.GetMultiGameInstallIDAsync(NewXML, null);
        }

        /// <remarks/>
        public void GetMultiGameInstallIDAsync(string NewXML, object userState)
        {
            if ((this.GetMultiGameInstallIDOperationCompleted == null))
            {
                this.GetMultiGameInstallIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMultiGameInstallIDOperationCompleted);
            }
            this.InvokeAsync("GetMultiGameInstallID", new object[] {
                    NewXML}, this.GetMultiGameInstallIDOperationCompleted, userState);
        }

        private void OnGetMultiGameInstallIDOperationCompleted(object arg)
        {
            if ((this.GetMultiGameInstallIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMultiGameInstallIDCompleted(this, new GetMultiGameInstallIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetGameLibraryID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int GetGameLibraryID(string NewXML)
        {
            object[] results = this.Invoke("GetGameLibraryID", new object[] {
                    NewXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetGameLibraryID(string NewXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetGameLibraryID", new object[] {
                    NewXML}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetGameLibraryID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetGameLibraryIDAsync(string NewXML)
        {
            this.GetGameLibraryIDAsync(NewXML, null);
        }

        /// <remarks/>
        public void GetGameLibraryIDAsync(string NewXML, object userState)
        {
            if ((this.GetGameLibraryIDOperationCompleted == null))
            {
                this.GetGameLibraryIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGameLibraryIDOperationCompleted);
            }
            this.InvokeAsync("GetGameLibraryID", new object[] {
                    NewXML}, this.GetGameLibraryIDOperationCompleted, userState);
        }

        private void OnGetGameLibraryIDOperationCompleted(object arg)
        {
            if ((this.GetGameLibraryIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGameLibraryIDCompleted(this, new GetGameLibraryIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckNGA", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string CheckNGA(string Site_Code, string strMACList)
        {
            object[] results = this.Invoke("CheckNGA", new object[] {
                    Site_Code,
                    strMACList});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckNGA(string Site_Code, string strMACList, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckNGA", new object[] {
                    Site_Code,
                    strMACList}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCheckNGA(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ResetCheckNGAAsync(string Site_Code, string strMACList)
        {
            this.CheckNGAAsync(Site_Code, strMACList, null);
        }

        /// <remarks/>
        public void CheckNGAAsync(string Site_Code, string strMACList, object userState)
        {
            if ((this.CheckNGAOperationCompleted == null))
            {
                this.CheckNGAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckNGAOperationCompleted);
            }
            this.InvokeAsync("CheckNGA", new object[] {
                    Site_Code,
                    strMACList}, this.CheckNGAOperationCompleted, userState);
        }

        private void OnCheckNGAOperationCompleted(object arg)
        {
            if ((this.CheckNGACompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckNGACompleted(this, new CheckNGACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportPaytableDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportPaytableDetails(string PT_Xml)
        {
            object[] results = this.Invoke("ImportPaytableDetails", new object[] {
                    PT_Xml});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportPaytableDetails(string PT_Xml, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportPaytableDetails", new object[] {
                    PT_Xml}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportPaytableDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportPaytableDetailsAsync(string PT_Xml)
        {
            this.ImportPaytableDetailsAsync(PT_Xml, null);
        }

        /// <remarks/>
        public void ImportPaytableDetailsAsync(string PT_Xml, object userState)
        {
            if ((this.ImportPaytableDetailsOperationCompleted == null))
            {
                this.ImportPaytableDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportPaytableDetailsOperationCompleted);
            }
            this.InvokeAsync("ImportPaytableDetails", new object[] {
                    PT_Xml}, this.ImportPaytableDetailsOperationCompleted, userState);
        }

        private void OnImportPaytableDetailsOperationCompleted(object arg)
        {
            if ((this.ImportPaytableDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportPaytableDetailsCompleted(this, new ImportPaytableDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/InsertInstallationGameInfo", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool InsertInstallationGameInfo(string xmlString)
        {
            object[] results = this.Invoke("InsertInstallationGameInfo", new object[] {
                    xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInsertInstallationGameInfo(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InsertInstallationGameInfo", new object[] {
                    xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndInsertInstallationGameInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void InsertInstallationGameInfoAsync(string xmlString)
        {
            this.InsertInstallationGameInfoAsync(xmlString, null);
        }

        /// <remarks/>
        public void InsertInstallationGameInfoAsync(string xmlString, object userState)
        {
            if ((this.InsertInstallationGameInfoOperationCompleted == null))
            {
                this.InsertInstallationGameInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInstallationGameInfoOperationCompleted);
            }
            this.InvokeAsync("InsertInstallationGameInfo", new object[] {
                    xmlString}, this.InsertInstallationGameInfoOperationCompleted, userState);
        }

        private void OnInsertInstallationGameInfoOperationCompleted(object arg)
        {
            if ((this.InsertInstallationGameInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInstallationGameInfoCompleted(this, new InsertInstallationGameInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public event UpdateDetailsFromXMLCompletedEventHandler UpdateDetailsFromXMLCompleted;

        /// <remarks/>
        public event UpdateDenomChangeCompletedEventHandler UpdateDenomChangeCompleted;

        /// <remarks/>
        public event ImportGameCappingCompletedEventHandler ImportGameCappingCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/UpdateDetailsFromXML", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool UpdateDetailsFromXML(string UpdationType, string XMLString)
        {
            object[] results = this.Invoke("UpdateDetailsFromXML", new object[] {
                    UpdationType,
                    XMLString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateDetailsFromXML(string UpdationType, string XMLString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateDetailsFromXML", new object[] {
                    UpdationType,
                    XMLString}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateDetailsFromXML(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateDetailsFromXMLAsync(string UpdationType, string XMLString)
        {
            this.UpdateDetailsFromXMLAsync(UpdationType, XMLString, null);
        }

        /// <remarks/>
        public void UpdateDetailsFromXMLAsync(string UpdationType, string XMLString, object userState)
        {
            if ((this.UpdateDetailsFromXMLOperationCompleted == null))
            {
                this.UpdateDetailsFromXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDetailsFromXMLOperationCompleted);
            }
            this.InvokeAsync("UpdateDetailsFromXML", new object[] {
                    UpdationType,
                    XMLString}, this.UpdateDetailsFromXMLOperationCompleted, userState);
        }

        private void OnUpdateDetailsFromXMLOperationCompleted(object arg)
        {
            if ((this.UpdateDetailsFromXMLCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDetailsFromXMLCompleted(this, new UpdateDetailsFromXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/UpdateDenomChange", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int UpdateDenomChange(string XMLString)
        {
            object[] results = this.Invoke("UpdateDenomChange", new object[] {
                    XMLString});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateDenomChange(string XMLString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateDenomChange", new object[] {
                    XMLString}, callback, asyncState);
        }

        /// <remarks/>
        public int EndUpdateDenomChange(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void UpdateDenomChangeAsync(string XMLString)
        {
            this.UpdateDenomChangeAsync(XMLString, null);
        }

        /// <remarks/>
        public void UpdateDenomChangeAsync(string XMLString, object userState)
        {
            if ((this.UpdateDenomChangeOperationCompleted == null))
            {
                this.UpdateDenomChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDenomChangeOperationCompleted);
            }
            this.InvokeAsync("UpdateDenomChange", new object[] {
                    XMLString}, this.UpdateDenomChangeOperationCompleted, userState);
        }

        private void OnUpdateDenomChangeOperationCompleted(object arg)
        {
            if ((this.UpdateDenomChangeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDenomChangeCompleted(this, new UpdateDenomChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportGameCapping", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public int ImportGameCapping(string xmlString)
        {
            object[] results = this.Invoke("ImportGameCapping", new object[] {
                    xmlString});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportGameCapping(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportGameCapping", new object[] {
                    xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public int EndImportGameCapping(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void ImportGameCappingAsync(string xmlString)
        {
            this.ImportGameCappingAsync(xmlString, null);
        }

        /// <remarks/>
        public void ImportGameCappingAsync(string xmlString, object userState)
        {
            if ((this.ImportGameCappingOperationCompleted == null))
            {
                this.ImportGameCappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportGameCappingOperationCompleted);
            }
            this.InvokeAsync("ImportGameCapping", new object[] {
                    xmlString}, this.ImportGameCappingOperationCompleted, userState);
        }

        private void OnImportGameCappingOperationCompleted(object arg)
        {
            if ((this.ImportGameCappingCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportGameCappingCompleted(this, new ImportGameCappingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetComponentDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetComponentDetails(string XMLString)
        {
            object[] results = this.Invoke("GetComponentDetails", new object[] {
                    XMLString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetComponentDetails(string XMLString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetComponentDetails", new object[] {
                    XMLString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetComponentDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetComponentDetailsAsync(string XMLString)
        {
            this.GetComponentDetailsAsync(XMLString, null);
        }

        /// <remarks/>
        public void GetComponentDetailsAsync(string XMLString, object userState)
        {
            if ((this.GetComponentDetailsOperationCompleted == null))
            {
                this.GetComponentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComponentDetailsOperationCompleted);
            }
            this.InvokeAsync("GetComponentDetails", new object[] {
                    XMLString}, this.GetComponentDetailsOperationCompleted, userState);
        }

        private void OnGetComponentDetailsOperationCompleted(object arg)
        {
            if ((this.GetComponentDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComponentDetailsCompleted(this, new GetComponentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetOtherGameDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetOtherGameDetails(string Site_Code)
        {
            object[] results = this.Invoke("GetOtherGameDetails", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOtherGameDetails(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOtherGameDetails", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetOtherGameDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetOtherGameDetailsAsync(string Site_Code)
        {
            this.GetOtherGameDetailsAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetOtherGameDetailsAsync(string Site_Code, object userState)
        {
            if ((this.GetOtherGameDetailsOperationCompleted == null))
            {
                this.GetOtherGameDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOtherGameDetailsOperationCompleted);
            }
            this.InvokeAsync("GetOtherGameDetails", new object[] {
                    Site_Code}, this.GetOtherGameDetailsOperationCompleted, userState);
        }

        private void OnGetOtherGameDetailsOperationCompleted(object arg)
        {
            if ((this.GetOtherGameDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOtherGameDetailsCompleted(this, new GetOtherGameDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetGameLibrary", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetGameLibrary(string Site_Code)
        {
            object[] results = this.Invoke("GetGameLibrary", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetGameLibrary(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetGameLibrary", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetGameLibrary(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetGameLibraryAsync(string Site_Code)
        {
            this.GetGameLibraryAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetGameLibraryAsync(string Site_Code, object userState)
        {
            if ((this.GetGameLibraryOperationCompleted == null))
            {
                this.GetGameLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGameLibraryOperationCompleted);
            }
            this.InvokeAsync("GetGameLibrary", new object[] {
                    Site_Code}, this.GetGameLibraryOperationCompleted, userState);
        }

        private void OnGetGameLibraryOperationCompleted(object arg)
        {
            if ((this.GetGameLibraryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGameLibraryCompleted(this, new GetGameLibraryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetPayTable", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetPayTable(string Site_Code)
        {
            object[] results = this.Invoke("GetPayTable", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetPayTable(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetPayTable", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetPayTable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetPayTableAsync(string Site_Code)
        {
            this.GetPayTableAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetPayTableAsync(string Site_Code, object userState)
        {
            if ((this.GetPayTableOperationCompleted == null))
            {
                this.GetPayTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayTableOperationCompleted);
            }
            this.InvokeAsync("GetPayTable", new object[] {
                    Site_Code}, this.GetPayTableOperationCompleted, userState);
        }

        private void OnGetPayTableOperationCompleted(object arg)
        {
            if ((this.GetPayTableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayTableCompleted(this, new GetPayTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetInstallationGamePayTableInfo", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetInstallationGamePayTableInfo(string Site_Code)
        {
            object[] results = this.Invoke("GetInstallationGamePayTableInfo", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetInstallationGamePayTableInfo(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetInstallationGamePayTableInfo", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetInstallationGamePayTableInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetInstallationGamePayTableInfoAsync(string Site_Code)
        {
            this.GetInstallationGamePayTableInfoAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetInstallationGamePayTableInfoAsync(string Site_Code, object userState)
        {
            if ((this.GetInstallationGamePayTableInfoOperationCompleted == null))
            {
                this.GetInstallationGamePayTableInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstallationGamePayTableInfoOperationCompleted);
            }
            this.InvokeAsync("GetInstallationGamePayTableInfo", new object[] {
                    Site_Code}, this.GetInstallationGamePayTableInfoOperationCompleted, userState);
        }

        private void OnGetInstallationGamePayTableInfoOperationCompleted(object arg)
        {
            if ((this.GetInstallationGamePayTableInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstallationGamePayTableInfoCompleted(this, new GetInstallationGamePayTableInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetSeedValues", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetSeedValues(string Site_Code, string Tables)
        {
            object[] results = this.Invoke("GetSeedValues", new object[] {
                    Site_Code,
                    Tables});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSeedValues(string Site_Code, string Tables, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSeedValues", new object[] {
                    Site_Code,
                    Tables}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetSeedValues(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetSeedValuesAsync(string Site_Code, string Tables)
        {
            this.GetSeedValuesAsync(Site_Code, Tables, null);
        }

        /// <remarks/>
        public void GetSeedValuesAsync(string Site_Code, string Tables, object userState)
        {
            if ((this.GetSeedValuesOperationCompleted == null))
            {
                this.GetSeedValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeedValuesOperationCompleted);
            }
            this.InvokeAsync("GetSeedValues", new object[] {
                    Site_Code,
                    Tables}, this.GetSeedValuesOperationCompleted, userState);
        }

        private void OnGetSeedValuesOperationCompleted(object arg)
        {
            if ((this.GetSeedValuesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeedValuesCompleted(this, new GetSeedValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetActiveSiteDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetActiveSiteDetails()
        {
            object[] results = this.Invoke("GetActiveSiteDetails", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetActiveSiteDetails(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetActiveSiteDetails", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetActiveSiteDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetActiveSiteDetailsAsync()
        {
            this.GetActiveSiteDetailsAsync(null);
        }

        /// <remarks/>
        public void GetActiveSiteDetailsAsync(object userState)
        {
            if ((this.GetActiveSiteDetailsOperationCompleted == null))
            {
                this.GetActiveSiteDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveSiteDetailsOperationCompleted);
            }
            this.InvokeAsync("GetActiveSiteDetails", new object[0], this.GetActiveSiteDetailsOperationCompleted, userState);
        }

        private void OnGetActiveSiteDetailsOperationCompleted(object arg)
        {
            if ((this.GetActiveSiteDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveSiteDetailsCompleted(this, new GetActiveSiteDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetActiveSiteDetailsForUser", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetActiveSiteDetailsForUser(int iSecurityUserID)
        {
            object[] results = this.Invoke("GetActiveSiteDetailsForUser", new object[] { iSecurityUserID });
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/GetInTransitAssetforSite", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.Data.DataTable GetInTransitAssetforSite(string siteCode)
        {
            object[] results = this.Invoke("GetInTransitAssetforSite", new object[] {
                                                                               siteCode});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetInTransitAssetforSite(string siteCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetInTransitAssetforSite", new object[] {
                                                                        siteCode}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetInTransitAssetforSite(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetInTransitAssetforSiteAsync(string siteCode)
        {
            this.GetInTransitAssetforSiteAsync(siteCode, null);
        }

        /// <remarks/>
        public void GetInTransitAssetforSiteAsync(string siteCode, object userState)
        {
            if ((this.GetInTransitAssetforSiteOperationCompleted == null))
            {
                this.GetInTransitAssetforSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInTransitAssetforSiteOperationCompleted);
            }
            this.InvokeAsync("GetInTransitAssetforSite", new object[] {
                                                                 siteCode}, this.GetInTransitAssetforSiteOperationCompleted, userState);
        }

        private void OnGetInTransitAssetforSiteOperationCompleted(object arg)
        {
            if ((this.GetInTransitAssetforSiteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInTransitAssetforSiteCompleted(this, new GetInTransitAssetforSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportInstallationGameData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportInstallationGameData(string xmlString)
        {
            object[] results = this.Invoke("ImportInstallationGameData", new object[] {
                    xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportInstallationGameData(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportInstallationGameData", new object[] {
                    xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportInstallationGameData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportInstallationGameDataAsync(string xmlString)
        {
            this.ImportInstallationGameDataAsync(xmlString, null);
        }

        /// <remarks/>
        public void ImportInstallationGameDataAsync(string xmlString, object userState)
        {
            if ((this.ImportInstallationGameDataOperationCompleted == null))
            {
                this.ImportInstallationGameDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportInstallationGameDataOperationCompleted);
            }
            this.InvokeAsync("ImportInstallationGameData", new object[] {
                    xmlString}, this.ImportInstallationGameDataOperationCompleted, userState);
        }

        private void OnImportInstallationGameDataOperationCompleted(object arg)
        {
            if ((this.ImportInstallationGameDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportInstallationGameDataCompleted(this, new ImportInstallationGameDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGMUNumber", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool UpdateGMUNumber(string xmlString)
        {
            object[] results = this.Invoke("UpdateGMUNumber", new object[] {
                    xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateGMUNumber(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateGMUNumber", new object[] {
                    xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateGMUNumber(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateGMUNumberAsync(string xmlString)
        {
            this.UpdateGMUNumberAsync(xmlString, null);
        }

        /// <remarks/>
        public void UpdateGMUNumberAsync(string xmlString, object userState)
        {
            if ((this.UpdateGMUNumberOperationCompleted == null))
            {
                this.UpdateGMUNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGMUNumberOperationCompleted);
            }
            this.InvokeAsync("UpdateGMUNumber", new object[] {
                    xmlString}, this.UpdateGMUNumberOperationCompleted, userState);
        }

        private void OnUpdateGMUNumberOperationCompleted(object arg)
        {
            if ((this.UpdateGMUNumberCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGMUNumberCompleted(this, new UpdateGMUNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/ImportSiteConfig", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportSiteConfig(string xmlString)
        {
            object[] results = this.Invoke("ImportSiteConfig", new object[] {
                    xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportSiteConfig(string xmlString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportSiteConfig", new object[] {
                    xmlString}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportSiteConfig(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportSiteConfigAsync(string xmlString)
        {
            this.ImportSiteConfigAsync(xmlString, null);
        }

        /// <remarks/>
        public void ImportSiteConfigAsync(string xmlString, object userState)
        {
            if ((this.ImportSiteConfigOperationCompleted == null))
            {
                this.ImportSiteConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportSiteConfigOperationCompleted);
            }
            this.InvokeAsync("ImportSiteConfig", new object[] {
                    xmlString}, this.ImportSiteConfigOperationCompleted, userState);
        }

        private void OnImportSiteConfigOperationCompleted(object arg)
        {
            if ((this.ImportSiteConfigCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportSiteConfigCompleted(this, new ImportSiteConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystemLocalDateTime", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public System.DateTime GetSystemLocalDateTime()
        {
            object[] results = this.Invoke("GetSystemLocalDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSystemLocalDateTime(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSystemLocalDateTime", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public System.DateTime EndGetSystemLocalDateTime(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }

        /// <remarks/>
        public void GetSystemLocalDateTimeAsync()
        {
            this.GetSystemLocalDateTimeAsync(null);
        }

        /// <remarks/>
        public void GetSystemLocalDateTimeAsync(object userState)
        {
            if ((this.GetSystemLocalDateTimeOperationCompleted == null))
            {
                this.GetSystemLocalDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemLocalDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetSystemLocalDateTime", new object[0], this.GetSystemLocalDateTimeOperationCompleted, userState);
        }

        private void OnGetSystemLocalDateTimeOperationCompleted(object arg)
        {
            if ((this.GetSystemLocalDateTimeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemLocalDateTimeCompleted(this, new GetSystemLocalDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/UpdateSiteLiquidationID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool UpdateSiteLiquidationID(int iHQLiquidationID, int iSiteLiquidationID)
        {
            object[] results = this.Invoke("UpdateSiteLiquidationID", new object[] {
                    iHQLiquidationID, iSiteLiquidationID});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateSiteLiquidationID(int iHQLiquidationID, int iSiteLiquidationID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateSiteLiquidationID", new object[] {
                    iHQLiquidationID, iSiteLiquidationID}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateSiteLiquidationID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateSiteLiquidationIDAsync(int iHQLiquidationID, int iSiteLiquidationID)
        {
            this.UpdateSiteLiquidationIDAsync(iHQLiquidationID, iSiteLiquidationID, null);
        }

        /// <remarks/>
        public void UpdateSiteLiquidationIDAsync(int iHQLiquidationID, int iSiteLiquidationID, object userState)
        {
            if ((this.UpdateSiteLiquidationIDOperationCompleted == null))
            {
                this.UpdateSiteLiquidationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSiteLiquidationIDOperationCompleted);
            }
            this.InvokeAsync("UpdateSiteLiquidationID", new object[] {
                    iHQLiquidationID, iSiteLiquidationID}, this.UpdateSiteLiquidationIDOperationCompleted, userState);
        }

        private void OnUpdateSiteLiquidationIDOperationCompleted(object arg)
        {
            if ((this.UpdateSiteLiquidationIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSiteLiquidationIDCompleted(this, new UpdateSiteLiquidationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeader("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethod("http://tempuri.org/UpdateSiteLiquidationShareID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool UpdateSiteLiquidationShareID(int iHQLiquidationShareID, int iSiteLiquidationShareID)
        {
            object[] results = this.Invoke("UpdateSiteLiquidationShareID", new object[] {
                    iHQLiquidationShareID, iSiteLiquidationShareID});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateSiteLiquidationShareID(int iHQLiquidationShareID, int iSiteLiquidationShareID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateSiteLiquidationShareID", new object[] {
                    iHQLiquidationShareID, iSiteLiquidationShareID}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateSiteLiquidationShareID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateSiteLiquidationShareIDAsync(int iHQLiquidationShareID, int iSiteLiquidationShareID)
        {
            this.UpdateSiteLiquidationShareIDAsync(iHQLiquidationShareID, iSiteLiquidationShareID, null);
        }

        /// <remarks/>
        public void UpdateSiteLiquidationShareIDAsync(int iHQLiquidationShareID, int iSiteLiquidationShareID, object userState)
        {
            if ((this.UpdateSiteLiquidationShareIDOperationCompleted == null))
            {
                this.UpdateSiteLiquidationShareIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSiteLiquidationShareIDOperationCompleted);
            }
            this.InvokeAsync("UpdateSiteLiquidationShareID", new object[] {
                    iHQLiquidationShareID, iSiteLiquidationShareID}, this.UpdateSiteLiquidationShareIDOperationCompleted, userState);
        }

        private void OnUpdateSiteLiquidationShareIDOperationCompleted(object arg)
        {
            if ((this.UpdateSiteLiquidationShareIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSiteLiquidationShareIDCompleted(this, new UpdateSiteLiquidationShareIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportAlertDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public bool ImportAlertDetails(string SiteCode, string XMLData)
        {
            object[] results = this.Invoke("ImportAlertDetails", new object[] {
                    SiteCode,
                    XMLData});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportAlertDetails(string SiteCode, string XMLData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportAlertDetails", new object[] {
                    SiteCode,
                    XMLData}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportAlertDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportAlertDetailsAsync(string SiteCode, string XMLData)
        {
            this.ImportAlertDetailsAsync(SiteCode, XMLData, null);
        }

        /// <remarks/>
        public void ImportAlertDetailsAsync(string SiteCode, string XMLData, object userState)
        {
            if ((this.ImportAlertDetailsOperationCompleted == null))
            {
                this.ImportAlertDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportAlertDetailsOperationCompleted);
            }
            this.InvokeAsync("ImportAlertDetails", new object[] {
                    SiteCode,
                    XMLData}, this.ImportAlertDetailsOperationCompleted, userState);
        }

        private void OnImportAlertDetailsOperationCompleted(object arg)
        {
            if ((this.ImportAlertDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportAlertDetailsCompleted(this, new ImportAlertDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportEmailAlertStatusDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportEmailAlertStatusDetails(string XMLData)
        {
            object[] results = this.Invoke("ImportEmailAlertStatusDetails", new object[] {
                    XMLData});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginImportEmailAlertStatusDetails(string XMLData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ImportEmailAlertStatusDetails", new object[] {
                    XMLData}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndImportEmailAlertStatusDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportEmailAlertStatusDetailsAsync(string XMLData)
        {
            this.ImportEmailAlertStatusDetailsAsync(XMLData, null);
        }

        /// <remarks/>
        public void ImportEmailAlertStatusDetailsAsync(string XMLData, object userState)
        {
            if ((this.ImportEmailAlertStatusDetailsOperationCompleted == null))
            {
                this.ImportEmailAlertStatusDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportEmailAlertStatusDetailsOperationCompleted);
            }
            this.InvokeAsync("ImportEmailAlertStatusDetails", new object[] {
                    XMLData}, this.ImportEmailAlertStatusDetailsOperationCompleted, userState);
        }

        private void OnImportEmailAlertStatusDetailsOperationCompleted(object arg)
        {
            if ((this.ImportEmailAlertStatusDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportEmailAlertStatusDetailsCompleted(this, new ImportEmailAlertStatusDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        [System.Serializable()]

        [System.ComponentModel.DesignerCategory("code")]
        [System.Xml.Serialization.XmlType(Namespace = "http://tempuri.org/")]
        [System.Xml.Serialization.XmlRoot(Namespace = "http://tempuri.org/", IsNullable = false)]
        public partial class AuthenticationInformation : System.Web.Services.Protocols.SoapHeader
        {

            private string enterprisePassKeyField;

            private string exchangePassKeyField;

            private string siteCodeField;

            private System.Xml.XmlAttribute[] anyAttrField;

            /// <remarks/>
            public string EnterprisePassKey
            {
                get
                {
                    return DataBaseServiceHandler.ExecuteScalar<string>(GetConnectionString(), CommandType.StoredProcedure,
                                                                        "rsp_GetEnterprisePassKeys");
                }
                set
                {
                    this.enterprisePassKeyField = value;
                }
            }

            /// <remarks/>
            public string ExchangePassKey
            {
                get
                {
                    return DataBaseServiceHandler.ExecuteScalar<string>(GetConnectionString(), CommandType.StoredProcedure,
                                                                        "rsp_GetExchangePassKeys");
                }
                set
                {
                    this.exchangePassKeyField = value;
                }
            }

            /// <remarks/>
            public string SiteCode
            {
                get
                {
                    return this.siteCodeField;
                }
                set
                {
                    this.siteCodeField = value;
                }
            }

            /// <remarks/>
            [System.Xml.Serialization.XmlAnyAttribute()]
            public System.Xml.XmlAttribute[] AnyAttr
            {
                get
                {
                    return this.anyAttrField;
                }
                set
                {
                    this.anyAttrField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlType(Namespace = "http://tempuri.org/")]
        public enum InstallationType
        {

            /// <remarks/>
            NewInstallation,

            /// <remarks/>
            GmuChange,

            /// <remarks/>
            ConvertInstallation,

            /// <remarks/>
            RemoveInstallation,

            /// <remarks/>
            PlannedConversion,
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void ImportDataCompletedEventHandler(object sender, ImportDataCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void ImportPasswordChangeCompletedEventHandler(object sender, ImportPasswordChangeCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class ImportPasswordChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportPasswordChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void ValidateUserCompletedEventHandler(object sender, ValidateUserCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {
            private object[] results;

            internal ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ImportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }



        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void ImportCompressedDataCompletedEventHandler(object sender, ImportCompressedDataCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ImportCompressedDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportCompressedDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void LogSiteEventCompletedEventHandler(object sender, LogSiteEventCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class LogSiteEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal LogSiteEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void HelloWebServiceCompletedEventHandler(object sender, HelloWebServiceCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class HelloWebServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal HelloWebServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void ImportHourlyStatisticsDataCompletedEventHandler(object sender, ImportHourlyStatisticsDataCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ImportHourlyStatisticsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportHourlyStatisticsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void InsertTreasuryEntriesCompletedEventHandler(object sender, InsertTreasuryEntriesCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class InsertTreasuryEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal InsertTreasuryEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }
        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void InsertReadCompletedEventHandler(object sender, InsertReadCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class InsertReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal InsertReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void CreateInstallationCompletedEventHandler(object sender, CreateInstallationCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class CreateInstallationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal CreateInstallationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void EnhancedEnrollmentForOfflineCompletedEventHandler(object sender, EnhancedEnrollmentForOfflineCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class EnhancedEnrollmentForOfflineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal EnhancedEnrollmentForOfflineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void CloseInstallationCompletedEventHandler(object sender, CloseInstallationCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class CloseInstallationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal CloseInstallationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void ConvertInstallationCompletedEventHandler(object sender, ConvertInstallationCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ConvertInstallationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ConvertInstallationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void SwapInstallationCompletedEventHandler(object sender, SwapInstallationCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class SwapInstallationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal SwapInstallationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void ImportInstallationUpdateCompletedEventHandler(object sender, ImportInstallationUpdateCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ImportInstallationUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportInstallationUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void ImportEmployeeCardSessionDataCompletedEventHandler(object sender, ImportEmployeeCardSessionDataCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class ImportEmployeeCardSessionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportEmployeeCardSessionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetInstallationNumberCompletedEventHandler(object sender, GetInstallationNumberCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetInstallationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetInstallationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void ImportMeterHistoryCompletedEventHandler(object sender, ImportMeterHistoryCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ImportMeterHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportMeterHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void UpdateBarPositionCentralStatusBySiteIDCompletedEventHandler(object sender, UpdateBarPositionCentralStatusBySiteIDCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class UpdateBarPositionCentralStatusBySiteIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal UpdateBarPositionCentralStatusBySiteIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void UpdateSiteStatsInEnterpriseCompletedEventHandler(object sender, UpdateSiteStatsInEnterpriseCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class UpdateSiteStatsInEnterpriseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal UpdateSiteStatsInEnterpriseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetPlannedConversionCompletedEventHandler(object sender, GetPlannedConversionCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetPlannedConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetPlannedConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void PlannedConversionCompletedEventHandler(object sender, PlannedConversionCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class PlannedConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal PlannedConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetCurrentServiceCallsCompletedEventHandler(object sender, GetCurrentServiceCallsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetCurrentServiceCallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetCurrentServiceCallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetOpenServiceCallsCompletedEventHandler(object sender, GetOpenServiceCallsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetOpenServiceCallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetOpenServiceCallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetServiceNotesCompletedEventHandler(object sender, GetServiceNotesCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetServiceNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetServiceNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void CloseServiceCallCompletedEventHandler(object sender, CloseServiceCallCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class CloseServiceCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal CloseServiceCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void InsertServiceNotesCompletedEventHandler(object sender, InsertServiceNotesCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class InsertServiceNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal InsertServiceNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void EscalateServiceCompletedEventHandler(object sender, EscalateServiceCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class EscalateServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal EscalateServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetBarPositionStatusCompletedEventHandler(object sender, GetBarPositionStatusCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetBarPositionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetBarPositionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetWeeklyCollectionDetailsCompletedEventHandler(object sender, GetWeeklyCollectionDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetWeeklyCollectionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetWeeklyCollectionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetHqInstallationIDCompletedEventHandler(object sender, GetHqInstallationIDCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetHqInstallationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetHqInstallationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetCashDeskServiceFaultsCompletedEventHandler(object sender, GetCashDeskServiceFaultsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetCashDeskServiceFaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetCashDeskServiceFaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetRemediesCompletedEventHandler(object sender, GetRemediesCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetRemediesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetRemediesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void UpdateInstallationGameCompletedEventHandler(object sender, UpdateInstallationGameCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class UpdateInstallationGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal UpdateInstallationGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetAssetDetailsCompletedEventHandler(object sender, GetAssetDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetAssetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetAssetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]
        public delegate void ImportSiteSettingsCompletedEventHandler(object sender, ImportSiteSettingsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ImportSiteSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportSiteSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }
        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]
        public delegate void ImportVoucherDetailsCompletedEventHandler(object sender, ImportVoucherDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ImportVoucherDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportVoucherDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]
        public delegate void ImportTicketExceptionDetailsCompletedEventHandler(object sender, ImportTicketExceptionDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ImportTicketExceptionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportTicketExceptionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]
        public delegate void ImportPromotionsDetailsCompletedEventHandler(object sender, ImportPromotionsDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ImportPromotionsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportPromotionsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }


        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]
        public delegate void ImportPromotionalTicketsDetailsCompletedEventHandler(object sender, ImportPromotionalTicketsDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ImportPromotionalTicketsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportPromotionalTicketsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]
        public delegate void ImportDeviceDetailsCompletedEventHandler(object sender, ImportDeviceDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class ImportDeviceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportDeviceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void InsertHandpayCompletedEventHandler(object sender, InsertHandpayCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class InsertHandpayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal InsertHandpayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void InitiateWebServiceCompletedEventHandler(object sender, InitiateWebServiceCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class InitiateWebServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal InitiateWebServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void CheckTransactionKeyCompletedEventHandler(object sender, CheckTransactionKeyCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class CheckTransactionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal CheckTransactionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void CheckLicenseKeyCompletedEventHandler(object sender, CheckLicenseKeyCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class CheckLicenseKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal CheckLicenseKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void UpdateLicenseActivationCompletedEventHandler(object sender, UpdateLicenseActivationCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class UpdateLicenseActivationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal UpdateLicenseActivationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]
        public delegate void GetSiteDetailsCompletedEventHandler(object sender, GetSiteDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.42")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetSiteDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSiteDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }
        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetInstallationDataCompletedEventHandler(object sender, GetInstallationDataCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetInstallationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetInstallationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetZonesDataCompletedEventHandler(object sender, GetZonesDataCompletedEventArgs e);
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetSiteAllianceDataCompletedEventHandler(object sender, GetSiteAllianceDataCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetZonesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetZonesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        public partial class GetSiteAllianceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSiteAllianceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetBarPositionsDataCompletedEventHandler(object sender, GetBarPositionsDataCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetBarPositionsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetBarPositionsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetMachineDataCompletedEventHandler(object sender, GetMachineDataCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetMachineDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetMachineDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetLatestMeterHistoryCompletedEventHandler(object sender, GetLatestMeterHistoryCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetLatestMeterHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetLatestMeterHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetLatestSiteBatchIDCompletedEventHandler(object sender, GetLatestSiteBatchIDCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetLatestSiteBatchIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetLatestSiteBatchIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetSiteTicketsCompletedEventHandler(object sender, GetSiteTicketsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSiteTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSiteTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetSiteTicketExceptionsCompletedEventHandler(object sender, GetSiteTicketExceptionsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSiteTicketExceptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSiteTicketExceptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }


        // /// <remarks/>
        //[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        //public delegate void GetSitePromotionsCompletedEventHandler(object sender, GetSitePromotionsCompletedEventArgs e);

        ///// <remarks/>
        //[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        //[System.Diagnostics.DebuggerStepThroughAttribute()]
        //[System.ComponentModel.DesignerCategoryAttribute("code")]
        //public partial class GetSitePromotionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        //{

        //    private object[] results;

        //    internal GetSitePromotionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        //        base(exception, cancelled, userState)
        //    {
        //        this.results = results;
        //    }

        //    /// <remarks/>
        //    public System.Data.DataTable Result
        //    {
        //        get
        //        {
        //            this.RaiseExceptionIfNecessary();
        //            return ((System.Data.DataTable)(this.results[0]));
        //        }
        //    }
        //}

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetSiteDeviceDetailsCompletedEventHandler(object sender, GetSiteDeviceDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSiteDeviceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSiteDeviceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }


        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetSiteWorkstationDetailsCompletedEventHandler(object sender, GetSiteWorkstationDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSiteWorkstationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSiteWorkstationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetHandpaysCompletedEventHandler(object sender, GetHandpaysCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetHandpaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetHandpaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetCashDeskTransactionsCompletedEventHandler(object sender, GetCashDeskTransactionsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetCashDeskTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetCashDeskTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetCollectionsCompletedEventHandler(object sender, GetCollectionsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetCollectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetCollectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetTreasuryDetailsCompletedEventHandler(object sender, GetTreasuryDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetTreasuryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetTreasuryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetEventsDetailsCompletedEventHandler(object sender, GetEventsDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetEventsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetEventsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetDailyReadsCompletedEventHandler(object sender, GetDailyReadsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetDailyReadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetDailyReadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetHourlyCompletedEventHandler(object sender, GetHourlyCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetHourlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetHourlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetAllEventsCompletedEventHandler(object sender, GetAllEventsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetAllEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetAllEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }
        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetAllUserDetailsCompletedEventHandler(object sender, GetAllUserDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetAllUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetAllUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }
        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetAllUserRolesCompletedEventHandler(object sender, GetAllUserRolesCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetAllUserRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetAllUserRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }
        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetAllObjectsCompletedEventHandler(object sender, GetAllObjectsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetAllObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetAllObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetAllRoleAccessObjectRightLnkCompletedEventHandler(object sender, GetAllRoleAccessObjectRightLnkCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetAllRoleAccessObjectRightLnkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetAllRoleAccessObjectRightLnkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }


        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetAllUserRolesLinksCompletedEventHandler(object sender, GetAllUserRolesLinksCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetAllUserRolesLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetAllUserRolesLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetCalendarsCompletedEventHandler(object sender, GetCalendarsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetCalendarsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetCalendarsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetSystemSettingsCompletedEventHandler(object sender, GetSystemSettingsCompletedEventArgs e);
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetLookupMasterSettingsCompletedEventHandler(object sender, GetLookupMasterSettingsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSystemSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSystemSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }/// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetLookupMasterSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetLookupMasterSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void SetSiteStatusEnterpriseCompletedEventHandler(object sender, SetSiteStatusEnterpriseCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class SetSiteStatusEnterpriseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal SetSiteStatusEnterpriseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetOtherMachineDetailsForRecoveryCompletedEventHandler(object sender, GetOtherMachineDetailsForRecoveryCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetOtherMachineDetailsForRecoveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetOtherMachineDetailsForRecoveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void ResetTransactionKeyCompletedEventHandler(object sender, ResetTransactionKeyCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class ResetTransactionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ResetTransactionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetMultiGameInstallIDCompletedEventHandler(object sender, GetMultiGameInstallIDCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetMultiGameInstallIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetMultiGameInstallIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetGameLibraryIDCompletedEventHandler(object sender, GetGameLibraryIDCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetGameLibraryIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetGameLibraryIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetPayTableCompletedEventHandler(object sender, GetPayTableCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetPayTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetPayTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetInstallationGamePayTableInfoCompletedEventHandler(object sender, GetInstallationGamePayTableInfoCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetInstallationGamePayTableInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetInstallationGamePayTableInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void CheckNGACompletedEventHandler(object sender, CheckNGACompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class CheckNGACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal CheckNGACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void ImportPaytableDetailsCompletedEventHandler(object sender, ImportPaytableDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class ImportPaytableDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportPaytableDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void InsertInstallationGameInfoCompletedEventHandler(object sender, InsertInstallationGameInfoCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class InsertInstallationGameInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal InsertInstallationGameInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void UpdateDetailsFromXMLCompletedEventHandler(object sender, UpdateDetailsFromXMLCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class UpdateDetailsFromXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal UpdateDetailsFromXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void UpdateDenomChangeCompletedEventHandler(object sender, UpdateDenomChangeCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class UpdateDenomChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal UpdateDenomChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
        public delegate void ImportGameCappingCompletedEventHandler(object sender, ImportGameCappingCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class ImportGameCappingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportGameCappingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public int Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((int)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetAAMSDetailsCompletedEventHandler(object sender, GetAAMSDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetAAMSDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetAAMSDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetInstallationGameInfoCompletedEventHandler(object sender, GetInstallationGameInfoCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetInstallationGameInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetInstallationGameInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetComponentDetailsCompletedEventHandler(object sender, GetComponentDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetComponentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetComponentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetOtherGameDetailsCompletedEventHandler(object sender, GetOtherGameDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void GetSeedValuesCompletedEventHandler(object sender, GetSeedValuesCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSeedValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSeedValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }


        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetOtherGameDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetOtherGameDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetActiveSiteDetailsCompletedEventHandler(object sender, GetActiveSiteDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetActiveSiteDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetActiveSiteDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]
        public delegate void GetInTransitAssetforSiteCompletedEventHandler(object sender, GetInTransitAssetforSiteCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")]

        [System.ComponentModel.DesignerCategory("code")]
        public partial class GetInTransitAssetforSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetInTransitAssetforSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.Data.DataTable Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.Data.DataTable)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void ImportInstallationGameDataCompletedEventHandler(object sender, ImportInstallationGameDataCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class ImportInstallationGameDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportInstallationGameDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        public delegate void UpdateGMUNumberCompletedEventHandler(object sender, UpdateGMUNumberCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class UpdateGMUNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal UpdateGMUNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void ImportSiteConfigCompletedEventHandler(object sender, ImportSiteConfigCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class ImportSiteConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportSiteConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetGameLibraryCompletedEventHandler(object sender, GetGameLibraryCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetGameLibraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {
            private object[] results;

            internal GetGameLibraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        public delegate void GetSystemLocalDateTimeCompletedEventHandler(object sender, GetSystemLocalDateTimeCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSystemLocalDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSystemLocalDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public System.DateTime Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((System.DateTime)(this.results[0]));
                }
            }
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAFTTransactions", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetAFTTransactions(string Site_Code)
        {
            object[] results = this.Invoke("GetAFTTransactions", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAFTTransactions(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAFTTransactions", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAFTTransactions(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAFTTransactionsAsync(string Site_Code)
        {
            this.GetAFTTransactionsAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetAFTTransactionsAsync(string Site_Code, object userState)
        {
            if ((this.GetAFTTransactionsOperationCompleted == null))
            {
                this.GetAFTTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAFTTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetAFTTransactions", new object[] {
                    Site_Code}, this.GetAFTTransactionsOperationCompleted, userState);
        }

        private void OnGetAFTTransactionsOperationCompleted(object arg)
        {
            if ((this.GetAFTTransactionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAFTTransactionsCompleted(this, new GetAFTTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }


        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
        public delegate void GetAFTTransactionsCompletedEventHandler(object sender, GetAFTTransactionsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetAFTTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetAFTTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteAuditHistoryDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [SoapSecurityExtension(Decrypt = DecryptMode.Request)]
        public string GetSiteAuditHistoryDetails(string Site_Code)
        {
            object[] results = this.Invoke("GetSiteAuditHistoryDetails", new object[] {
                    Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSiteAuditHistoryDetails(string Site_Code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSiteAuditHistoryDetails", new object[] {
                    Site_Code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetSiteAuditHistoryDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetSiteAuditHistoryDetailsAsync(string Site_Code)
        {
            this.GetSiteAuditHistoryDetailsAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetSiteAuditHistoryDetailsAsync(string Site_Code, object userState)
        {
            if ((this.GetSiteAuditHistoryDetailsOperationCompleted == null))
            {
                this.GetSiteAuditHistoryDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteAuditHistoryDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSiteAuditHistoryDetails", new object[] {
                    Site_Code}, this.GetSiteAuditHistoryDetailsOperationCompleted, userState);
        }

        private void OnGetSiteAuditHistoryDetailsOperationCompleted(object arg)
        {
            if ((this.GetSiteAuditHistoryDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteAuditHistoryDetailsCompleted(this, new GetSiteAuditHistoryDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
        public delegate void GetSiteAuditHistoryDetailsCompletedEventHandler(object sender, GetSiteAuditHistoryDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSiteAuditHistoryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSiteAuditHistoryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
        public delegate void UpdateSiteLiquidationIDCompletedEventHandler(object sender, UpdateSiteLiquidationIDCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class UpdateSiteLiquidationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal UpdateSiteLiquidationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
        public delegate void UpdateSiteLiquidationShareIDCompletedEventHandler(object sender, UpdateSiteLiquidationShareIDCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class UpdateSiteLiquidationShareIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal UpdateSiteLiquidationShareIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public string Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((string)(this.results[0]));
                }
            }
        }


        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
        public delegate void ImportAlertDetailsCompletedEventHandler(object sender, ImportAlertDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class ImportAlertDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportAlertDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }
        }


        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
        public delegate void ImportEmailAlertStatusDetailsCompletedEventHandler(object sender, ImportEmailAlertStatusDetailsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class ImportEmailAlertStatusDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal ImportEmailAlertStatusDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public bool Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((bool)(this.results[0]));
                }
            }

        }
    }
}