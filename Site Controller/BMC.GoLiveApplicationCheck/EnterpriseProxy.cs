//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3082.
// 
#pragma warning disable 1591

namespace BMC_GoLiveApplication_Check.EnterpriseWebService
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "EnterpriseWebServiceSoap", Namespace = "http://tempuri.org/")]
    public partial class EnterpriseWebService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private AuthenticationInformation authenticationInformationValueField;

        private System.Threading.SendOrPostCallback ImportDataOperationCompleted;

        private System.Threading.SendOrPostCallback ImportCompressedDataOperationCompleted;

        private System.Threading.SendOrPostCallback LogSiteEventOperationCompleted;

        private System.Threading.SendOrPostCallback HelloWebServiceOperationCompleted;

        private System.Threading.SendOrPostCallback ImportHourlyStatisticsDataOperationCompleted;

        private System.Threading.SendOrPostCallback InsertTreasuryEntriesOperationCompleted;

        private System.Threading.SendOrPostCallback InsertReadOperationCompleted;

        private System.Threading.SendOrPostCallback CreateInstallationOperationCompleted;

        private System.Threading.SendOrPostCallback EnhancedEnrollmentForOfflineOperationCompleted;

        private System.Threading.SendOrPostCallback CloseInstallationOperationCompleted;

        private System.Threading.SendOrPostCallback ConvertInstallationOperationCompleted;

        private System.Threading.SendOrPostCallback SwapInstallationOperationCompleted;

        private System.Threading.SendOrPostCallback ImportInstallationUpdateOperationCompleted;

        private System.Threading.SendOrPostCallback GetInstallationNumberOperationCompleted;

        private System.Threading.SendOrPostCallback ImportMeterHistoryOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateBarPositionCentralStatusBySiteIDOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateSiteStatsInEnterpriseOperationCompleted;

        private System.Threading.SendOrPostCallback GetPlannedConversionOperationCompleted;

        private System.Threading.SendOrPostCallback PlannedConversionOperationCompleted;

        private System.Threading.SendOrPostCallback GetCurrentServiceCallsOperationCompleted;

        private System.Threading.SendOrPostCallback GetOpenServiceCallsOperationCompleted;

        private System.Threading.SendOrPostCallback GetServiceNotesOperationCompleted;

        private System.Threading.SendOrPostCallback CloseServiceCallOperationCompleted;

        private System.Threading.SendOrPostCallback InsertServiceNotesOperationCompleted;

        private System.Threading.SendOrPostCallback EscalateServiceOperationCompleted;

        private System.Threading.SendOrPostCallback GetBarPositionStatusOperationCompleted;

        private System.Threading.SendOrPostCallback GetWeeklyCollectionDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetHqInstallationIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetCashDeskServiceFaultsOperationCompleted;

        private System.Threading.SendOrPostCallback GetRemediesOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateInstallationGameOperationCompleted;

        private System.Threading.SendOrPostCallback GetAssetDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportSiteSettingsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportVoucherDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportTicketExceptionDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback ImportDeviceDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback InsertHandpayOperationCompleted;

        private System.Threading.SendOrPostCallback InitiateWebServiceOperationCompleted;

        private System.Threading.SendOrPostCallback CheckTransactionKeyOperationCompleted;

        private System.Threading.SendOrPostCallback GetSiteDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetInstallationDataOperationCompleted;

        private System.Threading.SendOrPostCallback GetZonesDataOperationCompleted;

        private System.Threading.SendOrPostCallback GetBarPositionsDataOperationCompleted;

        private System.Threading.SendOrPostCallback GetMachineDataOperationCompleted;

        private System.Threading.SendOrPostCallback GetLatestMeterHistoryOperationCompleted;

        private System.Threading.SendOrPostCallback GetLatestSiteBatchIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetSiteTicketsOperationCompleted;

        private System.Threading.SendOrPostCallback GetSiteTicketExceptionsOperationCompleted;

        private System.Threading.SendOrPostCallback GetSiteDeviceDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetHandpaysOperationCompleted;

        private System.Threading.SendOrPostCallback GetCashDeskTransactionsOperationCompleted;

        private System.Threading.SendOrPostCallback GetCollectionsOperationCompleted;

        private System.Threading.SendOrPostCallback GetDailyReadsOperationCompleted;

        private System.Threading.SendOrPostCallback GetHourlyOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllEventsOperationCompleted;

        private System.Threading.SendOrPostCallback GetSystemSettingsOperationCompleted;

        private System.Threading.SendOrPostCallback SetSiteStatusEnterpriseOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public EnterpriseWebService(string url)
        {
            this.Url = url;
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }

            this.AuthenticationInformationValue = new AuthenticationInformation();
            this.authenticationInformationValueField = new AuthenticationInformation();

        }

        public AuthenticationInformation AuthenticationInformationValue
        {
            get
            {
                return this.authenticationInformationValueField;
            }
            set
            {
                this.authenticationInformationValueField = value;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event ImportDataCompletedEventHandler ImportDataCompleted;

        /// <remarks/>
        public event ImportCompressedDataCompletedEventHandler ImportCompressedDataCompleted;

        /// <remarks/>
        public event LogSiteEventCompletedEventHandler LogSiteEventCompleted;

        /// <remarks/>
        public event HelloWebServiceCompletedEventHandler HelloWebServiceCompleted;

        /// <remarks/>
        public event ImportHourlyStatisticsDataCompletedEventHandler ImportHourlyStatisticsDataCompleted;

        /// <remarks/>
        public event InsertTreasuryEntriesCompletedEventHandler InsertTreasuryEntriesCompleted;

        /// <remarks/>
        public event InsertReadCompletedEventHandler InsertReadCompleted;

        /// <remarks/>
        public event CreateInstallationCompletedEventHandler CreateInstallationCompleted;

        /// <remarks/>
        public event EnhancedEnrollmentForOfflineCompletedEventHandler EnhancedEnrollmentForOfflineCompleted;

        /// <remarks/>
        public event CloseInstallationCompletedEventHandler CloseInstallationCompleted;

        /// <remarks/>
        public event ConvertInstallationCompletedEventHandler ConvertInstallationCompleted;

        /// <remarks/>
        public event SwapInstallationCompletedEventHandler SwapInstallationCompleted;

        /// <remarks/>
        public event ImportInstallationUpdateCompletedEventHandler ImportInstallationUpdateCompleted;

        /// <remarks/>
        public event GetInstallationNumberCompletedEventHandler GetInstallationNumberCompleted;

        /// <remarks/>
        public event ImportMeterHistoryCompletedEventHandler ImportMeterHistoryCompleted;

        /// <remarks/>
        public event UpdateBarPositionCentralStatusBySiteIDCompletedEventHandler UpdateBarPositionCentralStatusBySiteIDCompleted;

        /// <remarks/>
        public event UpdateSiteStatsInEnterpriseCompletedEventHandler UpdateSiteStatsInEnterpriseCompleted;

        /// <remarks/>
        public event GetPlannedConversionCompletedEventHandler GetPlannedConversionCompleted;

        /// <remarks/>
        public event PlannedConversionCompletedEventHandler PlannedConversionCompleted;

        /// <remarks/>
        public event GetCurrentServiceCallsCompletedEventHandler GetCurrentServiceCallsCompleted;

        /// <remarks/>
        public event GetOpenServiceCallsCompletedEventHandler GetOpenServiceCallsCompleted;

        /// <remarks/>
        public event GetServiceNotesCompletedEventHandler GetServiceNotesCompleted;

        /// <remarks/>
        public event CloseServiceCallCompletedEventHandler CloseServiceCallCompleted;

        /// <remarks/>
        public event InsertServiceNotesCompletedEventHandler InsertServiceNotesCompleted;

        /// <remarks/>
        public event EscalateServiceCompletedEventHandler EscalateServiceCompleted;

        /// <remarks/>
        public event GetBarPositionStatusCompletedEventHandler GetBarPositionStatusCompleted;

        /// <remarks/>
        public event GetWeeklyCollectionDetailsCompletedEventHandler GetWeeklyCollectionDetailsCompleted;

        /// <remarks/>
        public event GetHqInstallationIDCompletedEventHandler GetHqInstallationIDCompleted;

        /// <remarks/>
        public event GetCashDeskServiceFaultsCompletedEventHandler GetCashDeskServiceFaultsCompleted;

        /// <remarks/>
        public event GetRemediesCompletedEventHandler GetRemediesCompleted;

        /// <remarks/>
        public event UpdateInstallationGameCompletedEventHandler UpdateInstallationGameCompleted;

        /// <remarks/>
        public event GetAssetDetailsCompletedEventHandler GetAssetDetailsCompleted;

        /// <remarks/>
        public event ImportSiteSettingsCompletedEventHandler ImportSiteSettingsCompleted;

        /// <remarks/>
        public event ImportVoucherDetailsCompletedEventHandler ImportVoucherDetailsCompleted;

        /// <remarks/>
        public event ImportTicketExceptionDetailsCompletedEventHandler ImportTicketExceptionDetailsCompleted;

        /// <remarks/>
        public event ImportDeviceDetailsCompletedEventHandler ImportDeviceDetailsCompleted;

        /// <remarks/>
        public event InsertHandpayCompletedEventHandler InsertHandpayCompleted;

        /// <remarks/>
        public event InitiateWebServiceCompletedEventHandler InitiateWebServiceCompleted;

        /// <remarks/>
        public event CheckTransactionKeyCompletedEventHandler CheckTransactionKeyCompleted;

        /// <remarks/>
        public event GetSiteDetailsCompletedEventHandler GetSiteDetailsCompleted;

        /// <remarks/>
        public event GetInstallationDataCompletedEventHandler GetInstallationDataCompleted;

        /// <remarks/>
        public event GetZonesDataCompletedEventHandler GetZonesDataCompleted;

        /// <remarks/>
        public event GetBarPositionsDataCompletedEventHandler GetBarPositionsDataCompleted;

        /// <remarks/>
        public event GetMachineDataCompletedEventHandler GetMachineDataCompleted;

        /// <remarks/>
        public event GetLatestMeterHistoryCompletedEventHandler GetLatestMeterHistoryCompleted;

        /// <remarks/>
        public event GetLatestSiteBatchIDCompletedEventHandler GetLatestSiteBatchIDCompleted;

        /// <remarks/>
        public event GetSiteTicketsCompletedEventHandler GetSiteTicketsCompleted;

        /// <remarks/>
        public event GetSiteTicketExceptionsCompletedEventHandler GetSiteTicketExceptionsCompleted;

        /// <remarks/>
        public event GetSiteDeviceDetailsCompletedEventHandler GetSiteDeviceDetailsCompleted;

        /// <remarks/>
        public event GetHandpaysCompletedEventHandler GetHandpaysCompleted;

        /// <remarks/>
        public event GetCashDeskTransactionsCompletedEventHandler GetCashDeskTransactionsCompleted;

        /// <remarks/>
        public event GetCollectionsCompletedEventHandler GetCollectionsCompleted;

        /// <remarks/>
        public event GetDailyReadsCompletedEventHandler GetDailyReadsCompleted;

        /// <remarks/>
        public event GetHourlyCompletedEventHandler GetHourlyCompleted;

        /// <remarks/>
        public event GetAllEventsCompletedEventHandler GetAllEventsCompleted;

        /// <remarks/>
        public event GetSystemSettingsCompletedEventHandler GetSystemSettingsCompleted;

        /// <remarks/>
        public event SetSiteStatusEnterpriseCompletedEventHandler SetSiteStatusEnterpriseCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportData(string xmlString)
        {
            object[] results = this.Invoke("ImportData", new object[] {
                        xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportDataAsync(string xmlString)
        {
            this.ImportDataAsync(xmlString, null);
        }

        /// <remarks/>
        public void ImportDataAsync(string xmlString, object userState)
        {
            if ((this.ImportDataOperationCompleted == null))
            {
                this.ImportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDataOperationCompleted);
            }
            this.InvokeAsync("ImportData", new object[] {
                        xmlString}, this.ImportDataOperationCompleted, userState);
        }

        private void OnImportDataOperationCompleted(object arg)
        {
            if ((this.ImportDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDataCompleted(this, new ImportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportCompressedData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportCompressedData(string compressedData)
        {
            object[] results = this.Invoke("ImportCompressedData", new object[] {
                        compressedData});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportCompressedDataAsync(string compressedData)
        {
            this.ImportCompressedDataAsync(compressedData, null);
        }

        /// <remarks/>
        public void ImportCompressedDataAsync(string compressedData, object userState)
        {
            if ((this.ImportCompressedDataOperationCompleted == null))
            {
                this.ImportCompressedDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportCompressedDataOperationCompleted);
            }
            this.InvokeAsync("ImportCompressedData", new object[] {
                        compressedData}, this.ImportCompressedDataOperationCompleted, userState);
        }

        private void OnImportCompressedDataOperationCompleted(object arg)
        {
            if ((this.ImportCompressedDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportCompressedDataCompleted(this, new ImportCompressedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogSiteEvent", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LogSiteEvent(string sEventXml)
        {
            object[] results = this.Invoke("LogSiteEvent", new object[] {
                        sEventXml});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void LogSiteEventAsync(string sEventXml)
        {
            this.LogSiteEventAsync(sEventXml, null);
        }

        /// <remarks/>
        public void LogSiteEventAsync(string sEventXml, object userState)
        {
            if ((this.LogSiteEventOperationCompleted == null))
            {
                this.LogSiteEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogSiteEventOperationCompleted);
            }
            this.InvokeAsync("LogSiteEvent", new object[] {
                        sEventXml}, this.LogSiteEventOperationCompleted, userState);
        }

        private void OnLogSiteEventOperationCompleted(object arg)
        {
            if ((this.LogSiteEventCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogSiteEventCompleted(this, new LogSiteEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWebService", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [BMC.Common.Security.SoapSecurityExtension(Decrypt = BMC.Common.Security.DecryptMode.Response)]
        public int HelloWebService(int recieve)
        {
            object[] results = this.Invoke("HelloWebService", new object[] {
                        recieve});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void HelloWebServiceAsync(int recieve)
        {
            this.HelloWebServiceAsync(recieve, null);
        }

        /// <remarks/>
        public void HelloWebServiceAsync(int recieve, object userState)
        {
            if ((this.HelloWebServiceOperationCompleted == null))
            {
                this.HelloWebServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWebServiceOperationCompleted);
            }
            this.InvokeAsync("HelloWebService", new object[] {
                        recieve}, this.HelloWebServiceOperationCompleted, userState);
        }

        private void OnHelloWebServiceOperationCompleted(object arg)
        {
            if ((this.HelloWebServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWebServiceCompleted(this, new HelloWebServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportHourlyStatisticsData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ImportHourlyStatisticsData(string xmlString)
        {
            object[] results = this.Invoke("ImportHourlyStatisticsData", new object[] {
                        xmlString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ImportHourlyStatisticsDataAsync(string xmlString)
        {
            this.ImportHourlyStatisticsDataAsync(xmlString, null);
        }

        /// <remarks/>
        public void ImportHourlyStatisticsDataAsync(string xmlString, object userState)
        {
            if ((this.ImportHourlyStatisticsDataOperationCompleted == null))
            {
                this.ImportHourlyStatisticsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportHourlyStatisticsDataOperationCompleted);
            }
            this.InvokeAsync("ImportHourlyStatisticsData", new object[] {
                        xmlString}, this.ImportHourlyStatisticsDataOperationCompleted, userState);
        }

        private void OnImportHourlyStatisticsDataOperationCompleted(object arg)
        {
            if ((this.ImportHourlyStatisticsDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportHourlyStatisticsDataCompleted(this, new ImportHourlyStatisticsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTreasuryEntries", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertTreasuryEntries(string strXml)
        {
            object[] results = this.Invoke("InsertTreasuryEntries", new object[] {
                        strXml});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void InsertTreasuryEntriesAsync(string strXml)
        {
            this.InsertTreasuryEntriesAsync(strXml, null);
        }

        /// <remarks/>
        public void InsertTreasuryEntriesAsync(string strXml, object userState)
        {
            if ((this.InsertTreasuryEntriesOperationCompleted == null))
            {
                this.InsertTreasuryEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTreasuryEntriesOperationCompleted);
            }
            this.InvokeAsync("InsertTreasuryEntries", new object[] {
                        strXml}, this.InsertTreasuryEntriesOperationCompleted, userState);
        }

        private void OnInsertTreasuryEntriesOperationCompleted(object arg)
        {
            if ((this.InsertTreasuryEntriesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTreasuryEntriesCompleted(this, new InsertTreasuryEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRead", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertRead(string xmlString)
        {
            object[] results = this.Invoke("InsertRead", new object[] {
                        xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void InsertReadAsync(string xmlString)
        {
            this.InsertReadAsync(xmlString, null);
        }

        /// <remarks/>
        public void InsertReadAsync(string xmlString, object userState)
        {
            if ((this.InsertReadOperationCompleted == null))
            {
                this.InsertReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReadOperationCompleted);
            }
            this.InvokeAsync("InsertRead", new object[] {
                        xmlString}, this.InsertReadOperationCompleted, userState);
        }

        private void OnInsertReadOperationCompleted(object arg)
        {
            if ((this.InsertReadCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReadCompleted(this, new InsertReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateInstallation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateInstallation(string installationData)
        {
            object[] results = this.Invoke("CreateInstallation", new object[] {
                        installationData});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void CreateInstallationAsync(string installationData)
        {
            this.CreateInstallationAsync(installationData, null);
        }

        /// <remarks/>
        public void CreateInstallationAsync(string installationData, object userState)
        {
            if ((this.CreateInstallationOperationCompleted == null))
            {
                this.CreateInstallationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateInstallationOperationCompleted);
            }
            this.InvokeAsync("CreateInstallation", new object[] {
                        installationData}, this.CreateInstallationOperationCompleted, userState);
        }

        private void OnCreateInstallationOperationCompleted(object arg)
        {
            if ((this.CreateInstallationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateInstallationCompleted(this, new CreateInstallationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnhancedEnrollmentForOffline", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EnhancedEnrollmentForOffline(string strXML, InstallationType installType)
        {
            object[] results = this.Invoke("EnhancedEnrollmentForOffline", new object[] {
                        strXML,
                        installType});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void EnhancedEnrollmentForOfflineAsync(string strXML, InstallationType installType)
        {
            this.EnhancedEnrollmentForOfflineAsync(strXML, installType, null);
        }

        /// <remarks/>
        public void EnhancedEnrollmentForOfflineAsync(string strXML, InstallationType installType, object userState)
        {
            if ((this.EnhancedEnrollmentForOfflineOperationCompleted == null))
            {
                this.EnhancedEnrollmentForOfflineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnhancedEnrollmentForOfflineOperationCompleted);
            }
            this.InvokeAsync("EnhancedEnrollmentForOffline", new object[] {
                        strXML,
                        installType}, this.EnhancedEnrollmentForOfflineOperationCompleted, userState);
        }

        private void OnEnhancedEnrollmentForOfflineOperationCompleted(object arg)
        {
            if ((this.EnhancedEnrollmentForOfflineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnhancedEnrollmentForOfflineCompleted(this, new EnhancedEnrollmentForOfflineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CloseInstallation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CloseInstallation(string InstallationXML)
        {
            object[] results = this.Invoke("CloseInstallation", new object[] {
                        InstallationXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void CloseInstallationAsync(string InstallationXML)
        {
            this.CloseInstallationAsync(InstallationXML, null);
        }

        /// <remarks/>
        public void CloseInstallationAsync(string InstallationXML, object userState)
        {
            if ((this.CloseInstallationOperationCompleted == null))
            {
                this.CloseInstallationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseInstallationOperationCompleted);
            }
            this.InvokeAsync("CloseInstallation", new object[] {
                        InstallationXML}, this.CloseInstallationOperationCompleted, userState);
        }

        private void OnCloseInstallationOperationCompleted(object arg)
        {
            if ((this.CloseInstallationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseInstallationCompleted(this, new CloseInstallationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertInstallation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ConvertInstallation(string OldInstallationXML, string NewInstallationXML)
        {
            object[] results = this.Invoke("ConvertInstallation", new object[] {
                        OldInstallationXML,
                        NewInstallationXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void ConvertInstallationAsync(string OldInstallationXML, string NewInstallationXML)
        {
            this.ConvertInstallationAsync(OldInstallationXML, NewInstallationXML, null);
        }

        /// <remarks/>
        public void ConvertInstallationAsync(string OldInstallationXML, string NewInstallationXML, object userState)
        {
            if ((this.ConvertInstallationOperationCompleted == null))
            {
                this.ConvertInstallationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertInstallationOperationCompleted);
            }
            this.InvokeAsync("ConvertInstallation", new object[] {
                        OldInstallationXML,
                        NewInstallationXML}, this.ConvertInstallationOperationCompleted, userState);
        }

        private void OnConvertInstallationOperationCompleted(object arg)
        {
            if ((this.ConvertInstallationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertInstallationCompleted(this, new ConvertInstallationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SwapInstallation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SwapInstallation(string InstallationXML)
        {
            object[] results = this.Invoke("SwapInstallation", new object[] {
                        InstallationXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void SwapInstallationAsync(string InstallationXML)
        {
            this.SwapInstallationAsync(InstallationXML, null);
        }

        /// <remarks/>
        public void SwapInstallationAsync(string InstallationXML, object userState)
        {
            if ((this.SwapInstallationOperationCompleted == null))
            {
                this.SwapInstallationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapInstallationOperationCompleted);
            }
            this.InvokeAsync("SwapInstallation", new object[] {
                        InstallationXML}, this.SwapInstallationOperationCompleted, userState);
        }

        private void OnSwapInstallationOperationCompleted(object arg)
        {
            if ((this.SwapInstallationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapInstallationCompleted(this, new SwapInstallationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportInstallationUpdate", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportInstallationUpdate(string installationXML)
        {
            object[] results = this.Invoke("ImportInstallationUpdate", new object[] {
                        installationXML});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportInstallationUpdateAsync(string installationXML)
        {
            this.ImportInstallationUpdateAsync(installationXML, null);
        }

        /// <remarks/>
        public void ImportInstallationUpdateAsync(string installationXML, object userState)
        {
            if ((this.ImportInstallationUpdateOperationCompleted == null))
            {
                this.ImportInstallationUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportInstallationUpdateOperationCompleted);
            }
            this.InvokeAsync("ImportInstallationUpdate", new object[] {
                        installationXML}, this.ImportInstallationUpdateOperationCompleted, userState);
        }

        private void OnImportInstallationUpdateOperationCompleted(object arg)
        {
            if ((this.ImportInstallationUpdateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportInstallationUpdateCompleted(this, new ImportInstallationUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstallationNumber", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInstallationNumber(string xmlString)
        {
            object[] results = this.Invoke("GetInstallationNumber", new object[] {
                        xmlString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetInstallationNumberAsync(string xmlString)
        {
            this.GetInstallationNumberAsync(xmlString, null);
        }

        /// <remarks/>
        public void GetInstallationNumberAsync(string xmlString, object userState)
        {
            if ((this.GetInstallationNumberOperationCompleted == null))
            {
                this.GetInstallationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstallationNumberOperationCompleted);
            }
            this.InvokeAsync("GetInstallationNumber", new object[] {
                        xmlString}, this.GetInstallationNumberOperationCompleted, userState);
        }

        private void OnGetInstallationNumberOperationCompleted(object arg)
        {
            if ((this.GetInstallationNumberCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstallationNumberCompleted(this, new GetInstallationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportMeterHistory", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportMeterHistory(string xmlString)
        {
            object[] results = this.Invoke("ImportMeterHistory", new object[] {
                        xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportMeterHistoryAsync(string xmlString)
        {
            this.ImportMeterHistoryAsync(xmlString, null);
        }

        /// <remarks/>
        public void ImportMeterHistoryAsync(string xmlString, object userState)
        {
            if ((this.ImportMeterHistoryOperationCompleted == null))
            {
                this.ImportMeterHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportMeterHistoryOperationCompleted);
            }
            this.InvokeAsync("ImportMeterHistory", new object[] {
                        xmlString}, this.ImportMeterHistoryOperationCompleted, userState);
        }

        private void OnImportMeterHistoryOperationCompleted(object arg)
        {
            if ((this.ImportMeterHistoryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportMeterHistoryCompleted(this, new ImportMeterHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBarPositionCentralStatusBySiteID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateBarPositionCentralStatusBySiteID(int exportHistoryID)
        {
            object[] results = this.Invoke("UpdateBarPositionCentralStatusBySiteID", new object[] {
                        exportHistoryID});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateBarPositionCentralStatusBySiteIDAsync(int exportHistoryID)
        {
            this.UpdateBarPositionCentralStatusBySiteIDAsync(exportHistoryID, null);
        }

        /// <remarks/>
        public void UpdateBarPositionCentralStatusBySiteIDAsync(int exportHistoryID, object userState)
        {
            if ((this.UpdateBarPositionCentralStatusBySiteIDOperationCompleted == null))
            {
                this.UpdateBarPositionCentralStatusBySiteIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBarPositionCentralStatusBySiteIDOperationCompleted);
            }
            this.InvokeAsync("UpdateBarPositionCentralStatusBySiteID", new object[] {
                        exportHistoryID}, this.UpdateBarPositionCentralStatusBySiteIDOperationCompleted, userState);
        }

        private void OnUpdateBarPositionCentralStatusBySiteIDOperationCompleted(object arg)
        {
            if ((this.UpdateBarPositionCentralStatusBySiteIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBarPositionCentralStatusBySiteIDCompleted(this, new UpdateBarPositionCentralStatusBySiteIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSiteStatsInEnterprise", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSiteStatsInEnterprise(string strSiteName, string strStatusXML)
        {
            object[] results = this.Invoke("UpdateSiteStatsInEnterprise", new object[] {
                        strSiteName,
                        strStatusXML});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateSiteStatsInEnterpriseAsync(string strSiteName, string strStatusXML)
        {
            this.UpdateSiteStatsInEnterpriseAsync(strSiteName, strStatusXML, null);
        }

        /// <remarks/>
        public void UpdateSiteStatsInEnterpriseAsync(string strSiteName, string strStatusXML, object userState)
        {
            if ((this.UpdateSiteStatsInEnterpriseOperationCompleted == null))
            {
                this.UpdateSiteStatsInEnterpriseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSiteStatsInEnterpriseOperationCompleted);
            }
            this.InvokeAsync("UpdateSiteStatsInEnterprise", new object[] {
                        strSiteName,
                        strStatusXML}, this.UpdateSiteStatsInEnterpriseOperationCompleted, userState);
        }

        private void OnUpdateSiteStatsInEnterpriseOperationCompleted(object arg)
        {
            if ((this.UpdateSiteStatsInEnterpriseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSiteStatsInEnterpriseCompleted(this, new UpdateSiteStatsInEnterpriseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlannedConversion", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPlannedConversion(string assetNumber)
        {
            object[] results = this.Invoke("GetPlannedConversion", new object[] {
                        assetNumber});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetPlannedConversionAsync(string assetNumber)
        {
            this.GetPlannedConversionAsync(assetNumber, null);
        }

        /// <remarks/>
        public void GetPlannedConversionAsync(string assetNumber, object userState)
        {
            if ((this.GetPlannedConversionOperationCompleted == null))
            {
                this.GetPlannedConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlannedConversionOperationCompleted);
            }
            this.InvokeAsync("GetPlannedConversion", new object[] {
                        assetNumber}, this.GetPlannedConversionOperationCompleted, userState);
        }

        private void OnGetPlannedConversionOperationCompleted(object arg)
        {
            if ((this.GetPlannedConversionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlannedConversionCompleted(this, new GetPlannedConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PlannedConversion", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PlannedConversion(string installationXML)
        {
            object[] results = this.Invoke("PlannedConversion", new object[] {
                        installationXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void PlannedConversionAsync(string installationXML)
        {
            this.PlannedConversionAsync(installationXML, null);
        }

        /// <remarks/>
        public void PlannedConversionAsync(string installationXML, object userState)
        {
            if ((this.PlannedConversionOperationCompleted == null))
            {
                this.PlannedConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlannedConversionOperationCompleted);
            }
            this.InvokeAsync("PlannedConversion", new object[] {
                        installationXML}, this.PlannedConversionOperationCompleted, userState);
        }

        private void OnPlannedConversionOperationCompleted(object arg)
        {
            if ((this.PlannedConversionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlannedConversionCompleted(this, new PlannedConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentServiceCalls", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentServiceCalls(string strSiteCode, string strStartBarPosNo, string strLastBarPosNo)
        {
            object[] results = this.Invoke("GetCurrentServiceCalls", new object[] {
                        strSiteCode,
                        strStartBarPosNo,
                        strLastBarPosNo});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCurrentServiceCallsAsync(string strSiteCode, string strStartBarPosNo, string strLastBarPosNo)
        {
            this.GetCurrentServiceCallsAsync(strSiteCode, strStartBarPosNo, strLastBarPosNo, null);
        }

        /// <remarks/>
        public void GetCurrentServiceCallsAsync(string strSiteCode, string strStartBarPosNo, string strLastBarPosNo, object userState)
        {
            if ((this.GetCurrentServiceCallsOperationCompleted == null))
            {
                this.GetCurrentServiceCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentServiceCallsOperationCompleted);
            }
            this.InvokeAsync("GetCurrentServiceCalls", new object[] {
                        strSiteCode,
                        strStartBarPosNo,
                        strLastBarPosNo}, this.GetCurrentServiceCallsOperationCompleted, userState);
        }

        private void OnGetCurrentServiceCallsOperationCompleted(object arg)
        {
            if ((this.GetCurrentServiceCallsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentServiceCallsCompleted(this, new GetCurrentServiceCallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpenServiceCalls", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOpenServiceCalls(string siteCode, string barPos)
        {
            object[] results = this.Invoke("GetOpenServiceCalls", new object[] {
                        siteCode,
                        barPos});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetOpenServiceCallsAsync(string siteCode, string barPos)
        {
            this.GetOpenServiceCallsAsync(siteCode, barPos, null);
        }

        /// <remarks/>
        public void GetOpenServiceCallsAsync(string siteCode, string barPos, object userState)
        {
            if ((this.GetOpenServiceCallsOperationCompleted == null))
            {
                this.GetOpenServiceCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenServiceCallsOperationCompleted);
            }
            this.InvokeAsync("GetOpenServiceCalls", new object[] {
                        siteCode,
                        barPos}, this.GetOpenServiceCallsOperationCompleted, userState);
        }

        private void OnGetOpenServiceCallsOperationCompleted(object arg)
        {
            if ((this.GetOpenServiceCallsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenServiceCallsCompleted(this, new GetOpenServiceCallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServiceNotes", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetServiceNotes(string jobID)
        {
            object[] results = this.Invoke("GetServiceNotes", new object[] {
                        jobID});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetServiceNotesAsync(string jobID)
        {
            this.GetServiceNotesAsync(jobID, null);
        }

        /// <remarks/>
        public void GetServiceNotesAsync(string jobID, object userState)
        {
            if ((this.GetServiceNotesOperationCompleted == null))
            {
                this.GetServiceNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceNotesOperationCompleted);
            }
            this.InvokeAsync("GetServiceNotes", new object[] {
                        jobID}, this.GetServiceNotesOperationCompleted, userState);
        }

        private void OnGetServiceNotesOperationCompleted(object arg)
        {
            if ((this.GetServiceNotesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceNotesCompleted(this, new GetServiceNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CloseServiceCall", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CloseServiceCall(int serviceID, string jobID, int remedy, int userId, string notes)
        {
            object[] results = this.Invoke("CloseServiceCall", new object[] {
                        serviceID,
                        jobID,
                        remedy,
                        userId,
                        notes});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void CloseServiceCallAsync(int serviceID, string jobID, int remedy, int userId, string notes)
        {
            this.CloseServiceCallAsync(serviceID, jobID, remedy, userId, notes, null);
        }

        /// <remarks/>
        public void CloseServiceCallAsync(int serviceID, string jobID, int remedy, int userId, string notes, object userState)
        {
            if ((this.CloseServiceCallOperationCompleted == null))
            {
                this.CloseServiceCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseServiceCallOperationCompleted);
            }
            this.InvokeAsync("CloseServiceCall", new object[] {
                        serviceID,
                        jobID,
                        remedy,
                        userId,
                        notes}, this.CloseServiceCallOperationCompleted, userState);
        }

        private void OnCloseServiceCallOperationCompleted(object arg)
        {
            if ((this.CloseServiceCallCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseServiceCallCompleted(this, new CloseServiceCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertServiceNotes", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertServiceNotes(string jobID, string notes, string userName)
        {
            object[] results = this.Invoke("InsertServiceNotes", new object[] {
                        jobID,
                        notes,
                        userName});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void InsertServiceNotesAsync(string jobID, string notes, string userName)
        {
            this.InsertServiceNotesAsync(jobID, notes, userName, null);
        }

        /// <remarks/>
        public void InsertServiceNotesAsync(string jobID, string notes, string userName, object userState)
        {
            if ((this.InsertServiceNotesOperationCompleted == null))
            {
                this.InsertServiceNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertServiceNotesOperationCompleted);
            }
            this.InvokeAsync("InsertServiceNotes", new object[] {
                        jobID,
                        notes,
                        userName}, this.InsertServiceNotesOperationCompleted, userState);
        }

        private void OnInsertServiceNotesOperationCompleted(object arg)
        {
            if ((this.InsertServiceNotesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertServiceNotesCompleted(this, new InsertServiceNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EscalateService", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EscalateService(string jobID, int UserID)
        {
            object[] results = this.Invoke("EscalateService", new object[] {
                        jobID,
                        UserID});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void EscalateServiceAsync(string jobID, int UserID)
        {
            this.EscalateServiceAsync(jobID, UserID, null);
        }

        /// <remarks/>
        public void EscalateServiceAsync(string jobID, int UserID, object userState)
        {
            if ((this.EscalateServiceOperationCompleted == null))
            {
                this.EscalateServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEscalateServiceOperationCompleted);
            }
            this.InvokeAsync("EscalateService", new object[] {
                        jobID,
                        UserID}, this.EscalateServiceOperationCompleted, userState);
        }

        private void OnEscalateServiceOperationCompleted(object arg)
        {
            if ((this.EscalateServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EscalateServiceCompleted(this, new EscalateServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBarPositionStatus", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBarPositionStatus(string siteCode)
        {
            object[] results = this.Invoke("GetBarPositionStatus", new object[] {
                        siteCode});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetBarPositionStatusAsync(string siteCode)
        {
            this.GetBarPositionStatusAsync(siteCode, null);
        }

        /// <remarks/>
        public void GetBarPositionStatusAsync(string siteCode, object userState)
        {
            if ((this.GetBarPositionStatusOperationCompleted == null))
            {
                this.GetBarPositionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBarPositionStatusOperationCompleted);
            }
            this.InvokeAsync("GetBarPositionStatus", new object[] {
                        siteCode}, this.GetBarPositionStatusOperationCompleted, userState);
        }

        private void OnGetBarPositionStatusOperationCompleted(object arg)
        {
            if ((this.GetBarPositionStatusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBarPositionStatusCompleted(this, new GetBarPositionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWeeklyCollectionDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWeeklyCollectionDetails(string strSiteCode, int iWeekID, int iNoOfRecords)
        {
            object[] results = this.Invoke("GetWeeklyCollectionDetails", new object[] {
                        strSiteCode,
                        iWeekID,
                        iNoOfRecords});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetWeeklyCollectionDetailsAsync(string strSiteCode, int iWeekID, int iNoOfRecords)
        {
            this.GetWeeklyCollectionDetailsAsync(strSiteCode, iWeekID, iNoOfRecords, null);
        }

        /// <remarks/>
        public void GetWeeklyCollectionDetailsAsync(string strSiteCode, int iWeekID, int iNoOfRecords, object userState)
        {
            if ((this.GetWeeklyCollectionDetailsOperationCompleted == null))
            {
                this.GetWeeklyCollectionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWeeklyCollectionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetWeeklyCollectionDetails", new object[] {
                        strSiteCode,
                        iWeekID,
                        iNoOfRecords}, this.GetWeeklyCollectionDetailsOperationCompleted, userState);
        }

        private void OnGetWeeklyCollectionDetailsOperationCompleted(object arg)
        {
            if ((this.GetWeeklyCollectionDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWeeklyCollectionDetailsCompleted(this, new GetWeeklyCollectionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHqInstallationID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHqInstallationID()
        {
            object[] results = this.Invoke("GetHqInstallationID", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetHqInstallationIDAsync()
        {
            this.GetHqInstallationIDAsync(null);
        }

        /// <remarks/>
        public void GetHqInstallationIDAsync(object userState)
        {
            if ((this.GetHqInstallationIDOperationCompleted == null))
            {
                this.GetHqInstallationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHqInstallationIDOperationCompleted);
            }
            this.InvokeAsync("GetHqInstallationID", new object[0], this.GetHqInstallationIDOperationCompleted, userState);
        }

        private void OnGetHqInstallationIDOperationCompleted(object arg)
        {
            if ((this.GetHqInstallationIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHqInstallationIDCompleted(this, new GetHqInstallationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCashDeskServiceFaults", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCashDeskServiceFaults()
        {
            object[] results = this.Invoke("GetCashDeskServiceFaults", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetCashDeskServiceFaultsAsync()
        {
            this.GetCashDeskServiceFaultsAsync(null);
        }

        /// <remarks/>
        public void GetCashDeskServiceFaultsAsync(object userState)
        {
            if ((this.GetCashDeskServiceFaultsOperationCompleted == null))
            {
                this.GetCashDeskServiceFaultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashDeskServiceFaultsOperationCompleted);
            }
            this.InvokeAsync("GetCashDeskServiceFaults", new object[0], this.GetCashDeskServiceFaultsOperationCompleted, userState);
        }

        private void OnGetCashDeskServiceFaultsOperationCompleted(object arg)
        {
            if ((this.GetCashDeskServiceFaultsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashDeskServiceFaultsCompleted(this, new GetCashDeskServiceFaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRemedies", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRemedies()
        {
            object[] results = this.Invoke("GetRemedies", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetRemediesAsync()
        {
            this.GetRemediesAsync(null);
        }

        /// <remarks/>
        public void GetRemediesAsync(object userState)
        {
            if ((this.GetRemediesOperationCompleted == null))
            {
                this.GetRemediesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRemediesOperationCompleted);
            }
            this.InvokeAsync("GetRemedies", new object[0], this.GetRemediesOperationCompleted, userState);
        }

        private void OnGetRemediesOperationCompleted(object arg)
        {
            if ((this.GetRemediesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRemediesCompleted(this, new GetRemediesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInstallationGame", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateInstallationGame(string strInstallationXML)
        {
            object[] results = this.Invoke("UpdateInstallationGame", new object[] {
                        strInstallationXML});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void UpdateInstallationGameAsync(string strInstallationXML)
        {
            this.UpdateInstallationGameAsync(strInstallationXML, null);
        }

        /// <remarks/>
        public void UpdateInstallationGameAsync(string strInstallationXML, object userState)
        {
            if ((this.UpdateInstallationGameOperationCompleted == null))
            {
                this.UpdateInstallationGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInstallationGameOperationCompleted);
            }
            this.InvokeAsync("UpdateInstallationGame", new object[] {
                        strInstallationXML}, this.UpdateInstallationGameOperationCompleted, userState);
        }

        private void OnUpdateInstallationGameOperationCompleted(object arg)
        {
            if ((this.UpdateInstallationGameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInstallationGameCompleted(this, new UpdateInstallationGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAssetDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAssetDetails(string assetNo)
        {
            object[] results = this.Invoke("GetAssetDetails", new object[] {
                        assetNo});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetAssetDetailsAsync(string assetNo)
        {
            this.GetAssetDetailsAsync(assetNo, null);
        }

        /// <remarks/>
        public void GetAssetDetailsAsync(string assetNo, object userState)
        {
            if ((this.GetAssetDetailsOperationCompleted == null))
            {
                this.GetAssetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAssetDetails", new object[] {
                        assetNo}, this.GetAssetDetailsOperationCompleted, userState);
        }

        private void OnGetAssetDetailsOperationCompleted(object arg)
        {
            if ((this.GetAssetDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssetDetailsCompleted(this, new GetAssetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportSiteSettings", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportSiteSettings(string strXML)
        {
            object[] results = this.Invoke("ImportSiteSettings", new object[] {
                        strXML});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportSiteSettingsAsync(string strXML)
        {
            this.ImportSiteSettingsAsync(strXML, null);
        }

        /// <remarks/>
        public void ImportSiteSettingsAsync(string strXML, object userState)
        {
            if ((this.ImportSiteSettingsOperationCompleted == null))
            {
                this.ImportSiteSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportSiteSettingsOperationCompleted);
            }
            this.InvokeAsync("ImportSiteSettings", new object[] {
                        strXML}, this.ImportSiteSettingsOperationCompleted, userState);
        }

        private void OnImportSiteSettingsOperationCompleted(object arg)
        {
            if ((this.ImportSiteSettingsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportSiteSettingsCompleted(this, new ImportSiteSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportVoucherDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportVoucherDetails(string strXMLData)
        {
            object[] results = this.Invoke("ImportVoucherDetails", new object[] {
                        strXMLData});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportVoucherDetailsAsync(string strXMLData)
        {
            this.ImportVoucherDetailsAsync(strXMLData, null);
        }

        /// <remarks/>
        public void ImportVoucherDetailsAsync(string strXMLData, object userState)
        {
            if ((this.ImportVoucherDetailsOperationCompleted == null))
            {
                this.ImportVoucherDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportVoucherDetailsOperationCompleted);
            }
            this.InvokeAsync("ImportVoucherDetails", new object[] {
                        strXMLData}, this.ImportVoucherDetailsOperationCompleted, userState);
        }

        private void OnImportVoucherDetailsOperationCompleted(object arg)
        {
            if ((this.ImportVoucherDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportVoucherDetailsCompleted(this, new ImportVoucherDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportTicketExceptionDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportTicketExceptionDetails(string strXMLData, int iSiteCode)
        {
            object[] results = this.Invoke("ImportTicketExceptionDetails", new object[] {
                        strXMLData,
                        iSiteCode});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportTicketExceptionDetailsAsync(string strXMLData, int iSiteCode)
        {
            this.ImportTicketExceptionDetailsAsync(strXMLData, iSiteCode, null);
        }

        /// <remarks/>
        public void ImportTicketExceptionDetailsAsync(string strXMLData, int iSiteCode, object userState)
        {
            if ((this.ImportTicketExceptionDetailsOperationCompleted == null))
            {
                this.ImportTicketExceptionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportTicketExceptionDetailsOperationCompleted);
            }
            this.InvokeAsync("ImportTicketExceptionDetails", new object[] {
                        strXMLData,
                        iSiteCode}, this.ImportTicketExceptionDetailsOperationCompleted, userState);
        }

        private void OnImportTicketExceptionDetailsOperationCompleted(object arg)
        {
            if ((this.ImportTicketExceptionDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportTicketExceptionDetailsCompleted(this, new ImportTicketExceptionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportDeviceDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportDeviceDetails(string strXMLData)
        {
            object[] results = this.Invoke("ImportDeviceDetails", new object[] {
                        strXMLData});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ImportDeviceDetailsAsync(string strXMLData)
        {
            this.ImportDeviceDetailsAsync(strXMLData, null);
        }

        /// <remarks/>
        public void ImportDeviceDetailsAsync(string strXMLData, object userState)
        {
            if ((this.ImportDeviceDetailsOperationCompleted == null))
            {
                this.ImportDeviceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDeviceDetailsOperationCompleted);
            }
            this.InvokeAsync("ImportDeviceDetails", new object[] {
                        strXMLData}, this.ImportDeviceDetailsOperationCompleted, userState);
        }

        private void OnImportDeviceDetailsOperationCompleted(object arg)
        {
            if ((this.ImportDeviceDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDeviceDetailsCompleted(this, new ImportDeviceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertHandpay", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertHandpay(string xmlString)
        {
            object[] results = this.Invoke("InsertHandpay", new object[] {
                        xmlString});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void InsertHandpayAsync(string xmlString)
        {
            this.InsertHandpayAsync(xmlString, null);
        }

        /// <remarks/>
        public void InsertHandpayAsync(string xmlString, object userState)
        {
            if ((this.InsertHandpayOperationCompleted == null))
            {
                this.InsertHandpayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHandpayOperationCompleted);
            }
            this.InvokeAsync("InsertHandpay", new object[] {
                        xmlString}, this.InsertHandpayOperationCompleted, userState);
        }

        private void OnInsertHandpayOperationCompleted(object arg)
        {
            if ((this.InsertHandpayCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHandpayCompleted(this, new InsertHandpayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitiateWebService", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InitiateWebService()
        {
            object[] results = this.Invoke("InitiateWebService", new object[0]);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void InitiateWebServiceAsync()
        {
            this.InitiateWebServiceAsync(null);
        }

        /// <remarks/>
        public void InitiateWebServiceAsync(object userState)
        {
            if ((this.InitiateWebServiceOperationCompleted == null))
            {
                this.InitiateWebServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateWebServiceOperationCompleted);
            }
            this.InvokeAsync("InitiateWebService", new object[0], this.InitiateWebServiceOperationCompleted, userState);
        }

        private void OnInitiateWebServiceOperationCompleted(object arg)
        {
            if ((this.InitiateWebServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateWebServiceCompleted(this, new InitiateWebServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTransactionKey", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckTransactionKey(string Site_Code, string TransactionKey)
        {
            object[] results = this.Invoke("CheckTransactionKey", new object[] {
                        Site_Code,
                        TransactionKey});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void CheckTransactionKeyAsync(string Site_Code, string TransactionKey)
        {
            this.CheckTransactionKeyAsync(Site_Code, TransactionKey, null);
        }

        /// <remarks/>
        public void CheckTransactionKeyAsync(string Site_Code, string TransactionKey, object userState)
        {
            if ((this.CheckTransactionKeyOperationCompleted == null))
            {
                this.CheckTransactionKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTransactionKeyOperationCompleted);
            }
            this.InvokeAsync("CheckTransactionKey", new object[] {
                        Site_Code,
                        TransactionKey}, this.CheckTransactionKeyOperationCompleted, userState);
        }

        private void OnCheckTransactionKeyOperationCompleted(object arg)
        {
            if ((this.CheckTransactionKeyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTransactionKeyCompleted(this, new CheckTransactionKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSiteDetails(string Site_Code)
        {
            object[] results = this.Invoke("GetSiteDetails", new object[] {
                        Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetSiteDetailsAsync(string Site_Code)
        {
            this.GetSiteDetailsAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetSiteDetailsAsync(string Site_Code, object userState)
        {
            if ((this.GetSiteDetailsOperationCompleted == null))
            {
                this.GetSiteDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSiteDetails", new object[] {
                        Site_Code}, this.GetSiteDetailsOperationCompleted, userState);
        }

        private void OnGetSiteDetailsOperationCompleted(object arg)
        {
            if ((this.GetSiteDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteDetailsCompleted(this, new GetSiteDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstallationData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInstallationData(int siteId)
        {
            object[] results = this.Invoke("GetInstallationData", new object[] {
                        siteId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetInstallationDataAsync(int siteId)
        {
            this.GetInstallationDataAsync(siteId, null);
        }

        /// <remarks/>
        public void GetInstallationDataAsync(int siteId, object userState)
        {
            if ((this.GetInstallationDataOperationCompleted == null))
            {
                this.GetInstallationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstallationDataOperationCompleted);
            }
            this.InvokeAsync("GetInstallationData", new object[] {
                        siteId}, this.GetInstallationDataOperationCompleted, userState);
        }

        private void OnGetInstallationDataOperationCompleted(object arg)
        {
            if ((this.GetInstallationDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstallationDataCompleted(this, new GetInstallationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetZonesData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetZonesData(int siteId)
        {
            object[] results = this.Invoke("GetZonesData", new object[] {
                        siteId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetZonesDataAsync(int siteId)
        {
            this.GetZonesDataAsync(siteId, null);
        }

        /// <remarks/>
        public void GetZonesDataAsync(int siteId, object userState)
        {
            if ((this.GetZonesDataOperationCompleted == null))
            {
                this.GetZonesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZonesDataOperationCompleted);
            }
            this.InvokeAsync("GetZonesData", new object[] {
                        siteId}, this.GetZonesDataOperationCompleted, userState);
        }

        private void OnGetZonesDataOperationCompleted(object arg)
        {
            if ((this.GetZonesDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZonesDataCompleted(this, new GetZonesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBarPositionsData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBarPositionsData(int siteId)
        {
            object[] results = this.Invoke("GetBarPositionsData", new object[] {
                        siteId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetBarPositionsDataAsync(int siteId)
        {
            this.GetBarPositionsDataAsync(siteId, null);
        }

        /// <remarks/>
        public void GetBarPositionsDataAsync(int siteId, object userState)
        {
            if ((this.GetBarPositionsDataOperationCompleted == null))
            {
                this.GetBarPositionsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBarPositionsDataOperationCompleted);
            }
            this.InvokeAsync("GetBarPositionsData", new object[] {
                        siteId}, this.GetBarPositionsDataOperationCompleted, userState);
        }

        private void OnGetBarPositionsDataOperationCompleted(object arg)
        {
            if ((this.GetBarPositionsDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBarPositionsDataCompleted(this, new GetBarPositionsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMachineData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMachineData(int siteId)
        {
            object[] results = this.Invoke("GetMachineData", new object[] {
                        siteId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetMachineDataAsync(int siteId)
        {
            this.GetMachineDataAsync(siteId, null);
        }

        /// <remarks/>
        public void GetMachineDataAsync(int siteId, object userState)
        {
            if ((this.GetMachineDataOperationCompleted == null))
            {
                this.GetMachineDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineDataOperationCompleted);
            }
            this.InvokeAsync("GetMachineData", new object[] {
                        siteId}, this.GetMachineDataOperationCompleted, userState);
        }

        private void OnGetMachineDataOperationCompleted(object arg)
        {
            if ((this.GetMachineDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineDataCompleted(this, new GetMachineDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestMeterHistory", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLatestMeterHistory(string strInstallationXML)
        {
            object[] results = this.Invoke("GetLatestMeterHistory", new object[] {
                        strInstallationXML});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetLatestMeterHistoryAsync(string strInstallationXML)
        {
            this.GetLatestMeterHistoryAsync(strInstallationXML, null);
        }

        /// <remarks/>
        public void GetLatestMeterHistoryAsync(string strInstallationXML, object userState)
        {
            if ((this.GetLatestMeterHistoryOperationCompleted == null))
            {
                this.GetLatestMeterHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestMeterHistoryOperationCompleted);
            }
            this.InvokeAsync("GetLatestMeterHistory", new object[] {
                        strInstallationXML}, this.GetLatestMeterHistoryOperationCompleted, userState);
        }

        private void OnGetLatestMeterHistoryOperationCompleted(object arg)
        {
            if ((this.GetLatestMeterHistoryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestMeterHistoryCompleted(this, new GetLatestMeterHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestSiteBatchID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLatestSiteBatchID(int siteCode, int XDays)
        {
            object[] results = this.Invoke("GetLatestSiteBatchID", new object[] {
                        siteCode,
                        XDays});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetLatestSiteBatchIDAsync(int siteCode, int XDays)
        {
            this.GetLatestSiteBatchIDAsync(siteCode, XDays, null);
        }

        /// <remarks/>
        public void GetLatestSiteBatchIDAsync(int siteCode, int XDays, object userState)
        {
            if ((this.GetLatestSiteBatchIDOperationCompleted == null))
            {
                this.GetLatestSiteBatchIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestSiteBatchIDOperationCompleted);
            }
            this.InvokeAsync("GetLatestSiteBatchID", new object[] {
                        siteCode,
                        XDays}, this.GetLatestSiteBatchIDOperationCompleted, userState);
        }

        private void OnGetLatestSiteBatchIDOperationCompleted(object arg)
        {
            if ((this.GetLatestSiteBatchIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestSiteBatchIDCompleted(this, new GetLatestSiteBatchIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteTickets", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSiteTickets(int iSiteCode, int iRecords)
        {
            object[] results = this.Invoke("GetSiteTickets", new object[] {
                        iSiteCode,
                        iRecords});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetSiteTicketsAsync(int iSiteCode, int iRecords)
        {
            this.GetSiteTicketsAsync(iSiteCode, iRecords, null);
        }

        /// <remarks/>
        public void GetSiteTicketsAsync(int iSiteCode, int iRecords, object userState)
        {
            if ((this.GetSiteTicketsOperationCompleted == null))
            {
                this.GetSiteTicketsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteTicketsOperationCompleted);
            }
            this.InvokeAsync("GetSiteTickets", new object[] {
                        iSiteCode,
                        iRecords}, this.GetSiteTicketsOperationCompleted, userState);
        }

        private void OnGetSiteTicketsOperationCompleted(object arg)
        {
            if ((this.GetSiteTicketsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteTicketsCompleted(this, new GetSiteTicketsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteTicketExceptions", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSiteTicketExceptions(int iSiteCode, int iRecords)
        {
            object[] results = this.Invoke("GetSiteTicketExceptions", new object[] {
                        iSiteCode,
                        iRecords});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetSiteTicketExceptionsAsync(int iSiteCode, int iRecords)
        {
            this.GetSiteTicketExceptionsAsync(iSiteCode, iRecords, null);
        }

        /// <remarks/>
        public void GetSiteTicketExceptionsAsync(int iSiteCode, int iRecords, object userState)
        {
            if ((this.GetSiteTicketExceptionsOperationCompleted == null))
            {
                this.GetSiteTicketExceptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteTicketExceptionsOperationCompleted);
            }
            this.InvokeAsync("GetSiteTicketExceptions", new object[] {
                        iSiteCode,
                        iRecords}, this.GetSiteTicketExceptionsOperationCompleted, userState);
        }

        private void OnGetSiteTicketExceptionsOperationCompleted(object arg)
        {
            if ((this.GetSiteTicketExceptionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteTicketExceptionsCompleted(this, new GetSiteTicketExceptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteDeviceDetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSiteDeviceDetails(int iSiteCode)
        {
            object[] results = this.Invoke("GetSiteDeviceDetails", new object[] {
                        iSiteCode});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetSiteDeviceDetailsAsync(int iSiteCode)
        {
            this.GetSiteDeviceDetailsAsync(iSiteCode, null);
        }

        /// <remarks/>
        public void GetSiteDeviceDetailsAsync(int iSiteCode, object userState)
        {
            if ((this.GetSiteDeviceDetailsOperationCompleted == null))
            {
                this.GetSiteDeviceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteDeviceDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSiteDeviceDetails", new object[] {
                        iSiteCode}, this.GetSiteDeviceDetailsOperationCompleted, userState);
        }

        private void OnGetSiteDeviceDetailsOperationCompleted(object arg)
        {
            if ((this.GetSiteDeviceDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteDeviceDetailsCompleted(this, new GetSiteDeviceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHandpays", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHandpays(int iSiteCode, int iRecords)
        {
            object[] results = this.Invoke("GetHandpays", new object[] {
                        iSiteCode,
                        iRecords});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetHandpaysAsync(int iSiteCode, int iRecords)
        {
            this.GetHandpaysAsync(iSiteCode, iRecords, null);
        }

        /// <remarks/>
        public void GetHandpaysAsync(int iSiteCode, int iRecords, object userState)
        {
            if ((this.GetHandpaysOperationCompleted == null))
            {
                this.GetHandpaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHandpaysOperationCompleted);
            }
            this.InvokeAsync("GetHandpays", new object[] {
                        iSiteCode,
                        iRecords}, this.GetHandpaysOperationCompleted, userState);
        }

        private void OnGetHandpaysOperationCompleted(object arg)
        {
            if ((this.GetHandpaysCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHandpaysCompleted(this, new GetHandpaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCashDeskTransactions", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCashDeskTransactions(string strInstallationXML)
        {
            object[] results = this.Invoke("GetCashDeskTransactions", new object[] {
                        strInstallationXML});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetCashDeskTransactionsAsync(string strInstallationXML)
        {
            this.GetCashDeskTransactionsAsync(strInstallationXML, null);
        }

        /// <remarks/>
        public void GetCashDeskTransactionsAsync(string strInstallationXML, object userState)
        {
            if ((this.GetCashDeskTransactionsOperationCompleted == null))
            {
                this.GetCashDeskTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashDeskTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetCashDeskTransactions", new object[] {
                        strInstallationXML}, this.GetCashDeskTransactionsOperationCompleted, userState);
        }

        private void OnGetCashDeskTransactionsOperationCompleted(object arg)
        {
            if ((this.GetCashDeskTransactionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashDeskTransactionsCompleted(this, new GetCashDeskTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCollections", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCollections(int BatchId)
        {
            object[] results = this.Invoke("GetCollections", new object[] {
                        BatchId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCollectionsAsync(int BatchId)
        {
            this.GetCollectionsAsync(BatchId, null);
        }

        /// <remarks/>
        public void GetCollectionsAsync(int BatchId, object userState)
        {
            if ((this.GetCollectionsOperationCompleted == null))
            {
                this.GetCollectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCollectionsOperationCompleted);
            }
            this.InvokeAsync("GetCollections", new object[] {
                        BatchId}, this.GetCollectionsOperationCompleted, userState);
        }

        private void OnGetCollectionsOperationCompleted(object arg)
        {
            if ((this.GetCollectionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCollectionsCompleted(this, new GetCollectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDailyReads", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDailyReads(string Site_Code, int xDays)
        {
            object[] results = this.Invoke("GetDailyReads", new object[] {
                        Site_Code,
                        xDays});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetDailyReadsAsync(string Site_Code, int xDays)
        {
            this.GetDailyReadsAsync(Site_Code, xDays, null);
        }

        /// <remarks/>
        public void GetDailyReadsAsync(string Site_Code, int xDays, object userState)
        {
            if ((this.GetDailyReadsOperationCompleted == null))
            {
                this.GetDailyReadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyReadsOperationCompleted);
            }
            this.InvokeAsync("GetDailyReads", new object[] {
                        Site_Code,
                        xDays}, this.GetDailyReadsOperationCompleted, userState);
        }

        private void OnGetDailyReadsOperationCompleted(object arg)
        {
            if ((this.GetDailyReadsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyReadsCompleted(this, new GetDailyReadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHourly", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHourly(string Site_Code, int xDays)
        {
            object[] results = this.Invoke("GetHourly", new object[] {
                        Site_Code,
                        xDays});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetHourlyAsync(string Site_Code, int xDays)
        {
            this.GetHourlyAsync(Site_Code, xDays, null);
        }

        /// <remarks/>
        public void GetHourlyAsync(string Site_Code, int xDays, object userState)
        {
            if ((this.GetHourlyOperationCompleted == null))
            {
                this.GetHourlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHourlyOperationCompleted);
            }
            this.InvokeAsync("GetHourly", new object[] {
                        Site_Code,
                        xDays}, this.GetHourlyOperationCompleted, userState);
        }

        private void OnGetHourlyOperationCompleted(object arg)
        {
            if ((this.GetHourlyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHourlyCompleted(this, new GetHourlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEvents", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllEvents(string Site_Code, int xWeeks)
        {
            object[] results = this.Invoke("GetAllEvents", new object[] {
                        Site_Code,
                        xWeeks});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAllEventsAsync(string Site_Code, int xWeeks)
        {
            this.GetAllEventsAsync(Site_Code, xWeeks, null);
        }

        /// <remarks/>
        public void GetAllEventsAsync(string Site_Code, int xWeeks, object userState)
        {
            if ((this.GetAllEventsOperationCompleted == null))
            {
                this.GetAllEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEventsOperationCompleted);
            }
            this.InvokeAsync("GetAllEvents", new object[] {
                        Site_Code,
                        xWeeks}, this.GetAllEventsOperationCompleted, userState);
        }

        private void OnGetAllEventsOperationCompleted(object arg)
        {
            if ((this.GetAllEventsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEventsCompleted(this, new GetAllEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystemSettings", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSystemSettings(string Site_Code)
        {
            object[] results = this.Invoke("GetSystemSettings", new object[] {
                        Site_Code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetSystemSettingsAsync(string Site_Code)
        {
            this.GetSystemSettingsAsync(Site_Code, null);
        }

        /// <remarks/>
        public void GetSystemSettingsAsync(string Site_Code, object userState)
        {
            if ((this.GetSystemSettingsOperationCompleted == null))
            {
                this.GetSystemSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemSettingsOperationCompleted);
            }
            this.InvokeAsync("GetSystemSettings", new object[] {
                        Site_Code}, this.GetSystemSettingsOperationCompleted, userState);
        }

        private void OnGetSystemSettingsOperationCompleted(object arg)
        {
            if ((this.GetSystemSettingsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemSettingsCompleted(this, new GetSystemSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetSiteStatusEnterprise", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetSiteStatusEnterprise(string Site_Code, string sMessage)
        {
            object[] results = this.Invoke("SetSiteStatusEnterprise", new object[] {
                        Site_Code,
                        sMessage});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void SetSiteStatusEnterpriseAsync(string Site_Code, string sMessage)
        {
            this.SetSiteStatusEnterpriseAsync(Site_Code, sMessage, null);
        }

        /// <remarks/>
        public void SetSiteStatusEnterpriseAsync(string Site_Code, string sMessage, object userState)
        {
            if ((this.SetSiteStatusEnterpriseOperationCompleted == null))
            {
                this.SetSiteStatusEnterpriseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSiteStatusEnterpriseOperationCompleted);
            }
            this.InvokeAsync("SetSiteStatusEnterprise", new object[] {
                        Site_Code,
                        sMessage}, this.SetSiteStatusEnterpriseOperationCompleted, userState);
        }

        private void OnSetSiteStatusEnterpriseOperationCompleted(object arg)
        {
            if ((this.SetSiteStatusEnterpriseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSiteStatusEnterpriseCompleted(this, new SetSiteStatusEnterpriseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://tempuri.org/", IsNullable = false)]
    public partial class AuthenticationInformation : System.Web.Services.Protocols.SoapHeader
    {

        private string enterprisePassKeyField;

        private string exchangePassKeyField;

        private string siteCodeField;

        private System.Xml.XmlAttribute[] anyAttrField;

        /// <remarks/>
        public string EnterprisePassKey
        {
            get
            {
                return this.enterprisePassKeyField;
            }
            set
            {
                this.enterprisePassKeyField = value;
            }
        }

        /// <remarks/>
        public string ExchangePassKey
        {
            get
            {
                return this.exchangePassKeyField;
            }
            set
            {
                this.exchangePassKeyField = value;
            }
        }

        /// <remarks/>
        public string SiteCode
        {
            get
            {
                return this.siteCodeField;
            }
            set
            {
                this.siteCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                this.anyAttrField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public enum InstallationType
    {

        /// <remarks/>
        NewInstallation,

        /// <remarks/>
        GmuChange,

        /// <remarks/>
        ConvertInstallation,

        /// <remarks/>
        RemoveInstallation,

        /// <remarks/>
        PlannedConversion,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ImportDataCompletedEventHandler(object sender, ImportDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ImportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ImportCompressedDataCompletedEventHandler(object sender, ImportCompressedDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportCompressedDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ImportCompressedDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LogSiteEventCompletedEventHandler(object sender, LogSiteEventCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogSiteEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal LogSiteEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void HelloWebServiceCompletedEventHandler(object sender, HelloWebServiceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWebServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal HelloWebServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ImportHourlyStatisticsDataCompletedEventHandler(object sender, ImportHourlyStatisticsDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportHourlyStatisticsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ImportHourlyStatisticsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertTreasuryEntriesCompletedEventHandler(object sender, InsertTreasuryEntriesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTreasuryEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal InsertTreasuryEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertReadCompletedEventHandler(object sender, InsertReadCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal InsertReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CreateInstallationCompletedEventHandler(object sender, CreateInstallationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateInstallationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CreateInstallationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void EnhancedEnrollmentForOfflineCompletedEventHandler(object sender, EnhancedEnrollmentForOfflineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnhancedEnrollmentForOfflineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal EnhancedEnrollmentForOfflineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CloseInstallationCompletedEventHandler(object sender, CloseInstallationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseInstallationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CloseInstallationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ConvertInstallationCompletedEventHandler(object sender, ConvertInstallationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertInstallationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ConvertInstallationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SwapInstallationCompletedEventHandler(object sender, SwapInstallationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapInstallationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SwapInstallationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ImportInstallationUpdateCompletedEventHandler(object sender, ImportInstallationUpdateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportInstallationUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ImportInstallationUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetInstallationNumberCompletedEventHandler(object sender, GetInstallationNumberCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstallationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetInstallationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ImportMeterHistoryCompletedEventHandler(object sender, ImportMeterHistoryCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportMeterHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ImportMeterHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateBarPositionCentralStatusBySiteIDCompletedEventHandler(object sender, UpdateBarPositionCentralStatusBySiteIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBarPositionCentralStatusBySiteIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateBarPositionCentralStatusBySiteIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateSiteStatsInEnterpriseCompletedEventHandler(object sender, UpdateSiteStatsInEnterpriseCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSiteStatsInEnterpriseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateSiteStatsInEnterpriseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetPlannedConversionCompletedEventHandler(object sender, GetPlannedConversionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlannedConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetPlannedConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PlannedConversionCompletedEventHandler(object sender, PlannedConversionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlannedConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal PlannedConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCurrentServiceCallsCompletedEventHandler(object sender, GetCurrentServiceCallsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentServiceCallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCurrentServiceCallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetOpenServiceCallsCompletedEventHandler(object sender, GetOpenServiceCallsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenServiceCallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetOpenServiceCallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetServiceNotesCompletedEventHandler(object sender, GetServiceNotesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetServiceNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CloseServiceCallCompletedEventHandler(object sender, CloseServiceCallCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseServiceCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CloseServiceCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertServiceNotesCompletedEventHandler(object sender, InsertServiceNotesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertServiceNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal InsertServiceNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void EscalateServiceCompletedEventHandler(object sender, EscalateServiceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EscalateServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal EscalateServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBarPositionStatusCompletedEventHandler(object sender, GetBarPositionStatusCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBarPositionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetBarPositionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetWeeklyCollectionDetailsCompletedEventHandler(object sender, GetWeeklyCollectionDetailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWeeklyCollectionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetWeeklyCollectionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetHqInstallationIDCompletedEventHandler(object sender, GetHqInstallationIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHqInstallationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetHqInstallationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCashDeskServiceFaultsCompletedEventHandler(object sender, GetCashDeskServiceFaultsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashDeskServiceFaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCashDeskServiceFaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetRemediesCompletedEventHandler(object sender, GetRemediesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRemediesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetRemediesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateInstallationGameCompletedEventHandler(object sender, UpdateInstallationGameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInstallationGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateInstallationGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAssetDetailsCompletedEventHandler(object sender, GetAssetDetailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAssetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ImportSiteSettingsCompletedEventHandler(object sender, ImportSiteSettingsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportSiteSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ImportSiteSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ImportVoucherDetailsCompletedEventHandler(object sender, ImportVoucherDetailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportVoucherDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ImportVoucherDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ImportTicketExceptionDetailsCompletedEventHandler(object sender, ImportTicketExceptionDetailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportTicketExceptionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ImportTicketExceptionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ImportDeviceDetailsCompletedEventHandler(object sender, ImportDeviceDetailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportDeviceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ImportDeviceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertHandpayCompletedEventHandler(object sender, InsertHandpayCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertHandpayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal InsertHandpayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InitiateWebServiceCompletedEventHandler(object sender, InitiateWebServiceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateWebServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal InitiateWebServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckTransactionKeyCompletedEventHandler(object sender, CheckTransactionKeyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTransactionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CheckTransactionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSiteDetailsCompletedEventHandler(object sender, GetSiteDetailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSiteDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetInstallationDataCompletedEventHandler(object sender, GetInstallationDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstallationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetInstallationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetZonesDataCompletedEventHandler(object sender, GetZonesDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZonesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetZonesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBarPositionsDataCompletedEventHandler(object sender, GetBarPositionsDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBarPositionsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetBarPositionsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetMachineDataCompletedEventHandler(object sender, GetMachineDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetMachineDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLatestMeterHistoryCompletedEventHandler(object sender, GetLatestMeterHistoryCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestMeterHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetLatestMeterHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLatestSiteBatchIDCompletedEventHandler(object sender, GetLatestSiteBatchIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestSiteBatchIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetLatestSiteBatchIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSiteTicketsCompletedEventHandler(object sender, GetSiteTicketsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSiteTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSiteTicketExceptionsCompletedEventHandler(object sender, GetSiteTicketExceptionsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteTicketExceptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSiteTicketExceptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSiteDeviceDetailsCompletedEventHandler(object sender, GetSiteDeviceDetailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteDeviceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSiteDeviceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetHandpaysCompletedEventHandler(object sender, GetHandpaysCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHandpaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetHandpaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCashDeskTransactionsCompletedEventHandler(object sender, GetCashDeskTransactionsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashDeskTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCashDeskTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCollectionsCompletedEventHandler(object sender, GetCollectionsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCollectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCollectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDailyReadsCompletedEventHandler(object sender, GetDailyReadsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyReadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDailyReadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetHourlyCompletedEventHandler(object sender, GetHourlyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHourlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetHourlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllEventsCompletedEventHandler(object sender, GetAllEventsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAllEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSystemSettingsCompletedEventHandler(object sender, GetSystemSettingsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSystemSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetSiteStatusEnterpriseCompletedEventHandler(object sender, SetSiteStatusEnterpriseCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetSiteStatusEnterpriseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetSiteStatusEnterpriseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591