<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imglstSmallIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imglstSmallIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADE
        CQAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AIwABOQIBAV0BVAEVAQ0BwAE+AUQBJgHvAS0BVgE0Af4BKwFRATIB/gE4
        ATsBIQHvAVABEgEJAcABOQIBAV0UAAFVARABJgHHAW8BdwHQAfwBTwEEAQwBoiQAAQMCAQEClAABUgEL
        AQYBpAFAAV0BOAH2ATUBgQFIAf8BLgGHAUgB/wEnAY0BRQH/ASEBiQFAAf8BHgF+ATkB/wEgAWwBNQH/
        AS8BQgEmAfYBUAEHAQUBpAwAAS8CAQFIAX0BgwHmAf8BbQGBAv8BKgE1AcwB/AEQAgEBFBwAAUoBAgEF
        AYsBRQEBAQMBepAAAVMBDAEHAaQBSQF8AUgB+QFJAaABYAH/AUIBogFdAf8BOQGdAVUB/wEwAZcBTgH/
        ASgBkgFHAf8BIgGOAUEB/wEcAYoBPQH/ARsBgQE5Af8BKAFXAS0B+QFQAQcBBQGkCAABPAEBAQIBZAFQ
        AVcB3gH/ASgBOQHrAf8BEAEiAdEB/gEXAgEBHRgAARoCAQEjARgBEQGgAfgBMwIBAU+MAAE5AgEBXQFP
        AXUBQwH2AV4BrgFxAf8BWQGxAXAB/wFPAasBZwH/AUUBpAFfAf8BPAGfAVgB/wEzAZkBUAH/ASsBlAFK
        Af8BJAGPAUQB/wEdAYsBPwH/ARwBgQE5Af8BLwFFASYB9gE5AgEBXQQAARICAQEWARwBGAGrAfsBCQER
        AdsB/wEHARUB2AH/AUgBAgEEAYYYAAE/AQgBQgHZASsBDwF9Ae6QAAFcASABFQHAAWIBqgFvAf8BcAG/
        AYEB/wFmAbkBewH/AV0BswFzBf8BSQGmAWMB/wE/AaABWgH/ATYBmwFTAf8BLgGWAUsB/wEmAZEBRgH/
        AR8BjAFAAf8BIgFxATgB/wFRARIBDAHACAABTwECAQ0BpgEDAQUBzwH/AQYBDAHYAf8BEAEOAa0B+wEc
        AgEBJhAAAUgBAgEFAYgBDwEkAd8B/wE8AQEBAgFlkAABXAF0AUQB7wF8AcMBhwH/AXwBxwGLAf8BcwHB
        AYMN/wFMAakBZQH/AUIBogFdAf8BOQGcAVUB/wEwAZgBTgH/ASgBkgFIAf8BJAGBAT8B/wE8AUABJAHv
        CAABAwIBAQIBNAEFAVMB4wEDAQQB0AH/AQQBCQHVAf8BOQEEAUsB3wwAATYCAQFXAQ8BKwHlAf8BOQEL
        AVMB35QAAVoBogFgAf4BmQHcAaUB/wGNAdUBnQn/AUsBngFXCf8BTwGrAWgB/wFGAaUBYAH/ATwBngFY
        Af8BMwGZAVEB/wErAY8BSAH/ATIBXgE5Af4MAAESAgEBFwEiAQUBeAHvAgMB0QH/AQQBBgHOAf8BTwEC
        AQ0BpwQAATMCAQFPAREBHwHHAfwBEQEoAdcB/gEhAgEBLpQAAV4BqQFkAf4BpwHnAbIB/wGhAeMBrgH/
        AUsBngFXAf8BSwGeAVcB/wF5AcUBiAH/AUsBngFXCf8BUgGtAWoB/wFJAacBYwH/AT8BoAFbAf8BNgGX
        AVIB/wE3AWUBPQH+EAABFwIBAR0BKgEGAW4B7AIDAdIB/wIEAcQB/wFOAQIBFQG0AQ8BDQGvAfsBCAEX
        AeEB/wFLAQIBBwGTmAABaAF/AU0B7wGaAd0BpQH/AbAB7gG8Af8BogHjAbAB/wGSAdcBoAH/AYIBzQGS
        Af8BfAHHAYsB/wFLAZ4BVwn/AVYBrgFtAf8BSwGoAWUB/wFAAZYBVwH/AUUBUAEtAe8UAAEJAgEBCgFC
        AQMBOAHVAQMBBAHMAf8CAwHMAf8BBAEGAdEB/wFHAQMBKQHLnAABYAEkARgBwAGBAc0BiwH/AbcB9AHD
        Af8BsAHvAbwB/wGkAeUBsAH/AZQB2QGiAf8BhQHOAZQB/wF/AckBjQH/AUsBngFXCf8BWQGxAXAB/wFH
        AZEBWAH/AVcBGQEPAcAUAAEXAgEBHQFGAQUBMgHQAQUBCgHPAf8BBAEGAdIB/wEDAQQByQH/AUkBAgEE
        AYqcAAE5AQIBAQFdAWwBnQFgAfcBoAHjAawB/wG3AfQBwwH/AbEB7wG9Af8BpQHlAbIB/wGWAdoBowH/
        AYcB0AGWAf8BgQHKAY8B/wFLAZ4BVwH/AUsBngFXAf8BYQGxAXQB/wFKAXABQQH2ATkCAQFdEAABSwEC
        AQcBkgEYARkBtwH6AQoBGgHkAf8BCAETAd4B/wEcAQoBiQHzAQsBBwG0AfwBCQELAcwB/wFOAQIBCwGh
        nAABVgEQAQsBpAF4AbEBdAH6AaEB4wGsAf8BtwH0AcMB/wGxAe8BvQH/AaYB5gGzAf8BmAHcAaUB/wGJ
        AdEBmQH/AYIBzQGSAf8BdQG/AYIB/wFcAY0BWQH5AVMBDAEJAaQMAAFBAQEBAgFxAVABMAGDAewBQAFa
        AfcB/wEgAT8B+gH/ARABKQHwAf8BKwEKAXIB6wEQAgEBFAEpAgEBPAEsAQcBeAHtASYBKAHUAf8BTQEI
        ASwBygEGAgEBBpgAAVYBEAELAaQBbgGfAWEB9wGCAc8BjAH/AZoB3wGlAf8BqQHpAbUB/wGgAeIBrAH/
        AYcBzgGSAf8BcwG6AX4B/wFcAYgBUgH2AVQBDQEJAaQMAAFwAUIBbwHmAaIBqwH3Af8BjQGdAv8BbQGB
        Av8BPQFYAfkB/wFCAQkBQQHWAQ0CAQEQCAABAwIBAQIBTwEDARIBrgFDAUEByQH+AUsBNAGTAfQBPAEB
        AQIBZZgAATkBAgEBAV0BYAEkARgBwAFoAYMBTgHvAWQBswFoAf4BYgGwAWYB/gFoAXwBTQHvAV4BIgEX
        AcABOQIBAV0QAAFnASsBSgHYAbYBuwH1Af8BowGsAfsB/wFpAWYByAH6AU4BAwEJAZgYAAEnAgEBOAFS
        ARMBPAHUAV4BUwGzAfoBVwEaAUgB2wE1AgEBVMAAARwCAQElAWEBGAEoAcMBdgFBAWUB3wFGAQIBAwF/
        IAABDwIBARIBTgEDAQkBmAFYASEBUwHeAUgBAgEEAYSAAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEB
        AQABAQUAAYAXAAP/AQAE/wQAAfABDwGPAfsEAAHgAgcB8wQAAcABAwEHAeMEAAGAAQEBBwHnBAABgAEB
        AYMBxwQAAYABAQGDAY8EAAGAAQEBwQEPBAABgAEBAeABHwQAAYABAQHwAT8EAAGAAQEB8AE/BAABgAEB
        AeABHwQAAcABAwGAAQcEAAHgAQcBAQGDBAAB8AEPAQcB4AQAAv8BDwHwBAAL
</value>
  </data>
</root>