#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BMC.MeterAdjustmentTool
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Exchange")]
	public partial class ExchangeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public ExchangeDataContext() : 
				base(global::BMC.MeterAdjustmentTool.Properties.Settings.Default.ExchangeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ExchangeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExchangeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExchangeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExchangeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRiskyCollections")]
		public ISingleResult<GetRiskyCollectionsResult> GetRiskyCollections([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BatchID", DbType="Int")] System.Nullable<int> batchID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Threshold", DbType="Int")] System.Nullable<int> threshold)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batchID, threshold);
			return ((ISingleResult<GetRiskyCollectionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.pGETSuspectedDailyReads")]
		public int pGETSuspectedDailyReads([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Installation_ID", DbType="Int")] System.Nullable<int> installation_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PreviousCollDate", DbType="VarChar(20)")] string previousCollDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollectionDate", DbType="VarChar(20)")] string collectionDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Threshold", DbType="Int")] System.Nullable<int> threshold)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), installation_ID, previousCollDate, collectionDate, threshold);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.pGETSuspectedHourlyReads")]
		public int pGETSuspectedHourlyReads([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Installation_ID", DbType="VarChar(30)")] string installation_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollectionDate", DbType="VarChar(30)")] string collectionDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PreviousCollectionDate", DbType="VarChar(30)")] string previousCollectionDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Threshold", DbType="Int")] System.Nullable<int> threshold)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), installation_ID, collectionDate, previousCollectionDate, threshold);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateHourlyDetails")]
		public int UpdateHourlyDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Installation_ID", DbType="VarChar(30)")] string installation_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Collection_ID", DbType="VarChar(30)")] string collection_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollectionDate", DbType="VarChar(30)")] string collectionDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Hours", DbType="VarChar(2000)")] string hours, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BatchID", DbType="Int")] System.Nullable<int> batchID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(20)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpdateSet", DbType="NVarChar(MAX)")] string updateSet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentSet", DbType="NVarChar(MAX)")] string currentSet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), installation_ID, collection_ID, collectionDate, hours, batchID, userID, userName, updateSet, currentSet);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateDailyRead")]
		public int UpdateDailyRead([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReadID", DbType="Int")] System.Nullable<int> readID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BatchID", DbType="Int")] System.Nullable<int> batchID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(20)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpdateSet", DbType="NVarChar(MAX)")] string updateSet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentSet", DbType="NVarChar(MAX)")] string currentSet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollectionID", DbType="Int")] System.Nullable<int> collectionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), readID, batchID, userID, userName, updateSet, currentSet, collectionID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCollection")]
		public int UpdateCollection([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CollectionID", DbType="Int")] System.Nullable<int> collectionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BatchID", DbType="Int")] System.Nullable<int> batchID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(20)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpdateSet", DbType="NVarChar(MAX)")] string updateSet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentSet", DbType="NVarChar(MAX)")] string currentSet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), collectionID, batchID, userID, userName, updateSet, currentSet);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.rsp_GetAllInstallationsWithStatus")]
		public ISingleResult<rsp_GetAllInstallationsWithStatusResult> FuncGetAllInstallationsWithStatus()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<rsp_GetAllInstallationsWithStatusResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdateMGMDDelta")]
		public int FuncUpdateMGMDDelta([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MGMD_Session_ID", DbType="Int")] System.Nullable<int> mGMD_Session_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(20)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpdateSet", DbType="NVarChar(MAX)")] string updateSet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentSet", DbType="NVarChar(MAX)")] string currentSet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mGMD_Session_ID, userID, userName, updateSet, currentSet);
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class GetRiskyCollectionsResult
	{
		
		private System.Nullable<int> _Collection_No;
		
		private System.Nullable<int> _Installation_No;
		
		private string _Bar_pos_Name;
		
		private string _Stock_no;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Collection_Date;
		
		private System.Nullable<System.DateTime> _PreviousCollectionDate;
		
		private System.Nullable<int> _CASH_IN_100P;
		
		private System.Nullable<int> _CASH_IN_500P;
		
		private System.Nullable<int> _CASH_IN_1000P;
		
		private System.Nullable<int> _CASH_IN_2000P;
		
		private System.Nullable<int> _CASH_IN_5000P;
		
		private System.Nullable<int> _CASH_IN_10000P;
		
		private int _COLLECTION_RDC_JACKPOT;
		
		private int _COLLECTION_RDC_HANDPAY;
		
		private int _COLLECTION_RDC_TICKETS_INSERTED_VALUE;
		
		private int _COLLECTION_RDC_TICKETS_PRINTED_VALUE;
		
		private int _progressive_win_value;
		
		private int _progressive_win_Handpay_value;
		
		private double _MeterVar;
		
		private double _HandpayVar;
		
		private double _Note_Var;
		
		private double _Coin_Var;
		
		private double _TicketVar;
		
		private double _Progressive_Value_Variance;
		
		public GetRiskyCollectionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collection_No", DbType="Int")]
		public System.Nullable<int> Collection_No
		{
			get
			{
				return this._Collection_No;
			}
			set
			{
				if ((this._Collection_No != value))
				{
					this._Collection_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installation_No", DbType="Int")]
		public System.Nullable<int> Installation_No
		{
			get
			{
				return this._Installation_No;
			}
			set
			{
				if ((this._Installation_No != value))
				{
					this._Installation_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bar_pos_Name", DbType="VarChar(50)")]
		public string Bar_pos_Name
		{
			get
			{
				return this._Bar_pos_Name;
			}
			set
			{
				if ((this._Bar_pos_Name != value))
				{
					this._Bar_pos_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock_no", DbType="VarChar(50)")]
		public string Stock_no
		{
			get
			{
				return this._Stock_no;
			}
			set
			{
				if ((this._Stock_no != value))
				{
					this._Stock_no = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collection_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Collection_Date
		{
			get
			{
				return this._Collection_Date;
			}
			set
			{
				if ((this._Collection_Date != value))
				{
					this._Collection_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousCollectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PreviousCollectionDate
		{
			get
			{
				return this._PreviousCollectionDate;
			}
			set
			{
				if ((this._PreviousCollectionDate != value))
				{
					this._PreviousCollectionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CASH_IN_100P", DbType="Int")]
		public System.Nullable<int> CASH_IN_100P
		{
			get
			{
				return this._CASH_IN_100P;
			}
			set
			{
				if ((this._CASH_IN_100P != value))
				{
					this._CASH_IN_100P = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CASH_IN_500P", DbType="Int")]
		public System.Nullable<int> CASH_IN_500P
		{
			get
			{
				return this._CASH_IN_500P;
			}
			set
			{
				if ((this._CASH_IN_500P != value))
				{
					this._CASH_IN_500P = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CASH_IN_1000P", DbType="Int")]
		public System.Nullable<int> CASH_IN_1000P
		{
			get
			{
				return this._CASH_IN_1000P;
			}
			set
			{
				if ((this._CASH_IN_1000P != value))
				{
					this._CASH_IN_1000P = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CASH_IN_2000P", DbType="Int")]
		public System.Nullable<int> CASH_IN_2000P
		{
			get
			{
				return this._CASH_IN_2000P;
			}
			set
			{
				if ((this._CASH_IN_2000P != value))
				{
					this._CASH_IN_2000P = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CASH_IN_5000P", DbType="Int")]
		public System.Nullable<int> CASH_IN_5000P
		{
			get
			{
				return this._CASH_IN_5000P;
			}
			set
			{
				if ((this._CASH_IN_5000P != value))
				{
					this._CASH_IN_5000P = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CASH_IN_10000P", DbType="Int")]
		public System.Nullable<int> CASH_IN_10000P
		{
			get
			{
				return this._CASH_IN_10000P;
			}
			set
			{
				if ((this._CASH_IN_10000P != value))
				{
					this._CASH_IN_10000P = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLLECTION_RDC_JACKPOT", DbType="Int NOT NULL")]
		public int COLLECTION_RDC_JACKPOT
		{
			get
			{
				return this._COLLECTION_RDC_JACKPOT;
			}
			set
			{
				if ((this._COLLECTION_RDC_JACKPOT != value))
				{
					this._COLLECTION_RDC_JACKPOT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLLECTION_RDC_HANDPAY", DbType="Int NOT NULL")]
		public int COLLECTION_RDC_HANDPAY
		{
			get
			{
				return this._COLLECTION_RDC_HANDPAY;
			}
			set
			{
				if ((this._COLLECTION_RDC_HANDPAY != value))
				{
					this._COLLECTION_RDC_HANDPAY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLLECTION_RDC_TICKETS_INSERTED_VALUE", DbType="Int NOT NULL")]
		public int COLLECTION_RDC_TICKETS_INSERTED_VALUE
		{
			get
			{
				return this._COLLECTION_RDC_TICKETS_INSERTED_VALUE;
			}
			set
			{
				if ((this._COLLECTION_RDC_TICKETS_INSERTED_VALUE != value))
				{
					this._COLLECTION_RDC_TICKETS_INSERTED_VALUE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLLECTION_RDC_TICKETS_PRINTED_VALUE", DbType="Int NOT NULL")]
		public int COLLECTION_RDC_TICKETS_PRINTED_VALUE
		{
			get
			{
				return this._COLLECTION_RDC_TICKETS_PRINTED_VALUE;
			}
			set
			{
				if ((this._COLLECTION_RDC_TICKETS_PRINTED_VALUE != value))
				{
					this._COLLECTION_RDC_TICKETS_PRINTED_VALUE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_progressive_win_value", DbType="Int NOT NULL")]
		public int progressive_win_value
		{
			get
			{
				return this._progressive_win_value;
			}
			set
			{
				if ((this._progressive_win_value != value))
				{
					this._progressive_win_value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_progressive_win_Handpay_value", DbType="Int NOT NULL")]
		public int progressive_win_Handpay_value
		{
			get
			{
				return this._progressive_win_Handpay_value;
			}
			set
			{
				if ((this._progressive_win_Handpay_value != value))
				{
					this._progressive_win_Handpay_value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeterVar", DbType="Float NOT NULL")]
		public double MeterVar
		{
			get
			{
				return this._MeterVar;
			}
			set
			{
				if ((this._MeterVar != value))
				{
					this._MeterVar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandpayVar", DbType="Float NOT NULL")]
		public double HandpayVar
		{
			get
			{
				return this._HandpayVar;
			}
			set
			{
				if ((this._HandpayVar != value))
				{
					this._HandpayVar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note_Var", DbType="Float NOT NULL")]
		public double Note_Var
		{
			get
			{
				return this._Note_Var;
			}
			set
			{
				if ((this._Note_Var != value))
				{
					this._Note_Var = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coin_Var", DbType="Float NOT NULL")]
		public double Coin_Var
		{
			get
			{
				return this._Coin_Var;
			}
			set
			{
				if ((this._Coin_Var != value))
				{
					this._Coin_Var = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketVar", DbType="Float NOT NULL")]
		public double TicketVar
		{
			get
			{
				return this._TicketVar;
			}
			set
			{
				if ((this._TicketVar != value))
				{
					this._TicketVar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Progressive_Value_Variance", DbType="Float NOT NULL")]
		public double Progressive_Value_Variance
		{
			get
			{
				return this._Progressive_Value_Variance;
			}
			set
			{
				if ((this._Progressive_Value_Variance != value))
				{
					this._Progressive_Value_Variance = value;
				}
			}
		}
	}
	
	public partial class rsp_GetAllInstallationsWithStatusResult
	{
		
		private System.Nullable<long> _Serial_No;
		
		private int _Installation_No;
		
		private string _InstallationStatus;
		
		private string _Stock_No;
		
		private string _Bar_Pos_Name;
		
		private string _NAME;
		
		private string _Model_Code;
		
		private string _Machine_Serial_No;
		
		private string _Machine_Alternative_Serial_Numbers;
		
		private System.Nullable<int> _Installation_Price_Of_Play;
		
		private int _Installation_Token_Value;
		
		private System.Nullable<int> _Installation_Jackpot;
		
		private System.Nullable<float> _Anticipated_Percentage_Payout;
		
		public rsp_GetAllInstallationsWithStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Serial No]", Storage="_Serial_No", DbType="BigInt")]
		public System.Nullable<long> Serial_No
		{
			get
			{
				return this._Serial_No;
			}
			set
			{
				if ((this._Serial_No != value))
				{
					this._Serial_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installation_No", DbType="Int NOT NULL")]
		public int Installation_No
		{
			get
			{
				return this._Installation_No;
			}
			set
			{
				if ((this._Installation_No != value))
				{
					this._Installation_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationStatus", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string InstallationStatus
		{
			get
			{
				return this._InstallationStatus;
			}
			set
			{
				if ((this._InstallationStatus != value))
				{
					this._InstallationStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock_No", DbType="VarChar(50)")]
		public string Stock_No
		{
			get
			{
				return this._Stock_No;
			}
			set
			{
				if ((this._Stock_No != value))
				{
					this._Stock_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bar_Pos_Name", DbType="VarChar(50)")]
		public string Bar_Pos_Name
		{
			get
			{
				return this._Bar_Pos_Name;
			}
			set
			{
				if ((this._Bar_Pos_Name != value))
				{
					this._Bar_Pos_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model_Code", DbType="VarChar(50)")]
		public string Model_Code
		{
			get
			{
				return this._Model_Code;
			}
			set
			{
				if ((this._Model_Code != value))
				{
					this._Model_Code = value;
				}
			}
		}

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Machine_Serial_No", DbType = "VarChar(50)")]
		public string Machine_Serial_No
		{
			get
			{
                return this._Machine_Serial_No;
			}
			set
			{
                if ((this._Machine_Serial_No != value))
				{
                    this._Machine_Serial_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_Alternative_Serial_Numbers", DbType="VarChar(50)")]
		public string Machine_Alternative_Serial_Numbers
		{
			get
			{
				return this._Machine_Alternative_Serial_Numbers;
			}
			set
			{
				if ((this._Machine_Alternative_Serial_Numbers != value))
				{
					this._Machine_Alternative_Serial_Numbers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installation_Price_Of_Play", DbType="Int")]
		public System.Nullable<int> Installation_Price_Of_Play
		{
			get
			{
				return this._Installation_Price_Of_Play;
			}
			set
			{
				if ((this._Installation_Price_Of_Play != value))
				{
					this._Installation_Price_Of_Play = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installation_Token_Value", DbType="Int NOT NULL")]
		public int Installation_Token_Value
		{
			get
			{
				return this._Installation_Token_Value;
			}
			set
			{
				if ((this._Installation_Token_Value != value))
				{
					this._Installation_Token_Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installation_Jackpot", DbType="Int")]
		public System.Nullable<int> Installation_Jackpot
		{
			get
			{
				return this._Installation_Jackpot;
			}
			set
			{
				if ((this._Installation_Jackpot != value))
				{
					this._Installation_Jackpot = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anticipated_Percentage_Payout", DbType="Real")]
		public System.Nullable<float> Anticipated_Percentage_Payout
		{
			get
			{
				return this._Anticipated_Percentage_Payout;
			}
			set
			{
				if ((this._Anticipated_Percentage_Payout != value))
				{
					this._Anticipated_Percentage_Payout = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
