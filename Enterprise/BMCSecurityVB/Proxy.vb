
'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3082
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=2.0.50727.3038.
'

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code"), _
 System.Web.Services.WebServiceBindingAttribute(Name:="ExchangeWebServiceSoap", [Namespace]:="http://www.ballytech.com/BallyMultiConnect/WSE/")> _
Partial Public Class ExchangeWebService
    Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

    Private authenticationInformationValueField As AuthenticationInformation

    Private HelloWebServiceOperationCompleted As System.Threading.SendOrPostCallback

    Private InitializeSiteOperationCompleted As System.Threading.SendOrPostCallback

    Private GetServiceStatusOperationCompleted As System.Threading.SendOrPostCallback

    Private StartServiceOperationCompleted As System.Threading.SendOrPostCallback

    Private ImportUserOperationCompleted As System.Threading.SendOrPostCallback

    Private ImportRoleOperationCompleted As System.Threading.SendOrPostCallback

    Private ImportRoleAccessLnkOperationCompleted As System.Threading.SendOrPostCallback

    Private ImportDataOperationCompleted As System.Threading.SendOrPostCallback

    Private InsertScheduleJobsOperationCompleted As System.Threading.SendOrPostCallback

    Private GetCashDeskServiceFaultsOperationCompleted As System.Threading.SendOrPostCallback

    Private ImportCompressedDataOperationCompleted As System.Threading.SendOrPostCallback

    Private ImportCalendarOperationCompleted As System.Threading.SendOrPostCallback

    Private ImportSiteOperationCompleted As System.Threading.SendOrPostCallback

    Private ImportModelOperationCompleted As System.Threading.SendOrPostCallback

    Private UpdateBarPositionCentralStatusOperationCompleted As System.Threading.SendOrPostCallback

    Private RequestCollectionByDateOperationCompleted As System.Threading.SendOrPostCallback

    Private ImportSiteSettingsOperationCompleted As System.Threading.SendOrPostCallback

    Private GetSiteStatusOperationCompleted As System.Threading.SendOrPostCallback

    '''<remarks/>
    Public Sub New()
        MyBase.New()
        Me.Url = "http://localhost:1928/ExchangeWebService.asmx"
    End Sub

    Public Property AuthenticationInformationValue() As AuthenticationInformation
        Get
            Return Me.authenticationInformationValueField
        End Get
        Set(ByVal value As AuthenticationInformation)
            Me.authenticationInformationValueField = value
        End Set
    End Property

    '''<remarks/>
    Public Event HelloWebServiceCompleted As HelloWebServiceCompletedEventHandler

    '''<remarks/>
    Public Event InitializeSiteCompleted As InitializeSiteCompletedEventHandler

    '''<remarks/>
    Public Event GetServiceStatusCompleted As GetServiceStatusCompletedEventHandler

    '''<remarks/>
    Public Event StartServiceCompleted As StartServiceCompletedEventHandler

    '''<remarks/>
    Public Event ImportUserCompleted As ImportUserCompletedEventHandler

    '''<remarks/>
    Public Event ImportRoleCompleted As ImportRoleCompletedEventHandler

    '''<remarks/>
    Public Event ImportRoleAccessLnkCompleted As ImportRoleAccessLnkCompletedEventHandler

    '''<remarks/>
    Public Event ImportDataCompleted As ImportDataCompletedEventHandler

    '''<remarks/>
    Public Event InsertScheduleJobsCompleted As InsertScheduleJobsCompletedEventHandler

    '''<remarks/>
    Public Event GetCashDeskServiceFaultsCompleted As GetCashDeskServiceFaultsCompletedEventHandler

    '''<remarks/>
    Public Event ImportCompressedDataCompleted As ImportCompressedDataCompletedEventHandler

    '''<remarks/>
    Public Event ImportCalendarCompleted As ImportCalendarCompletedEventHandler

    '''<remarks/>
    Public Event ImportSiteCompleted As ImportSiteCompletedEventHandler

    '''<remarks/>
    Public Event ImportModelCompleted As ImportModelCompletedEventHandler

    '''<remarks/>
    Public Event UpdateBarPositionCentralStatusCompleted As UpdateBarPositionCentralStatusCompletedEventHandler

    '''<remarks/>
    Public Event RequestCollectionByDateCompleted As RequestCollectionByDateCompletedEventHandler

    '''<remarks/>
    Public Event ImportSiteSettingsCompleted As ImportSiteSettingsCompletedEventHandler

    '''<remarks/>
    Public Event GetSiteStatusCompleted As GetSiteStatusCompletedEventHandler

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/HelloWebService", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function HelloWebService(ByVal recieve As Integer) As Integer
        Dim results() As Object = Me.Invoke("HelloWebService", New Object() {recieve})
        Return CType(results(0), Integer)
    End Function

    '''<remarks/>
    Public Function BeginHelloWebService(ByVal recieve As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("HelloWebService", New Object() {recieve}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndHelloWebService(ByVal asyncResult As System.IAsyncResult) As Integer
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Integer)
    End Function

    '''<remarks/>
    Public Overloads Sub HelloWebServiceAsync(ByVal recieve As Integer)
        Me.HelloWebServiceAsync(recieve, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub HelloWebServiceAsync(ByVal recieve As Integer, ByVal userState As Object)
        If (Me.HelloWebServiceOperationCompleted Is Nothing) Then
            Me.HelloWebServiceOperationCompleted = AddressOf Me.OnHelloWebServiceOperationCompleted
        End If
        Me.InvokeAsync("HelloWebService", New Object() {recieve}, Me.HelloWebServiceOperationCompleted, userState)
    End Sub

    Private Sub OnHelloWebServiceOperationCompleted(ByVal arg As Object)
        If (Not (Me.HelloWebServiceCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent HelloWebServiceCompleted(Me, New HelloWebServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/InitializeSite", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function InitializeSite() As Boolean
        Dim results() As Object = Me.Invoke("InitializeSite", New Object(-1) {})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginInitializeSite(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("InitializeSite", New Object(-1) {}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndInitializeSite(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub InitializeSiteAsync()
        Me.InitializeSiteAsync(Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub InitializeSiteAsync(ByVal userState As Object)
        If (Me.InitializeSiteOperationCompleted Is Nothing) Then
            Me.InitializeSiteOperationCompleted = AddressOf Me.OnInitializeSiteOperationCompleted
        End If
        Me.InvokeAsync("InitializeSite", New Object(-1) {}, Me.InitializeSiteOperationCompleted, userState)
    End Sub

    Private Sub OnInitializeSiteOperationCompleted(ByVal arg As Object)
        If (Not (Me.InitializeSiteCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent InitializeSiteCompleted(Me, New InitializeSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/GetServiceStatus", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function GetServiceStatus(ByVal strServiceNames As String, ByVal serviceStatus As ServiceTypes) As String
        Dim results() As Object = Me.Invoke("GetServiceStatus", New Object() {strServiceNames, serviceStatus})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginGetServiceStatus(ByVal strServiceNames As String, ByVal serviceStatus As ServiceTypes, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GetServiceStatus", New Object() {strServiceNames, serviceStatus}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndGetServiceStatus(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub GetServiceStatusAsync(ByVal strServiceNames As String, ByVal serviceStatus As ServiceTypes)
        Me.GetServiceStatusAsync(strServiceNames, serviceStatus, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub GetServiceStatusAsync(ByVal strServiceNames As String, ByVal serviceStatus As ServiceTypes, ByVal userState As Object)
        If (Me.GetServiceStatusOperationCompleted Is Nothing) Then
            Me.GetServiceStatusOperationCompleted = AddressOf Me.OnGetServiceStatusOperationCompleted
        End If
        Me.InvokeAsync("GetServiceStatus", New Object() {strServiceNames, serviceStatus}, Me.GetServiceStatusOperationCompleted, userState)
    End Sub

    Private Sub OnGetServiceStatusOperationCompleted(ByVal arg As Object)
        If (Not (Me.GetServiceStatusCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GetServiceStatusCompleted(Me, New GetServiceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/StartService", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function StartService(ByVal strServiceName As String) As Boolean
        Dim results() As Object = Me.Invoke("StartService", New Object() {strServiceName})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginStartService(ByVal strServiceName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("StartService", New Object() {strServiceName}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndStartService(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub StartServiceAsync(ByVal strServiceName As String)
        Me.StartServiceAsync(strServiceName, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub StartServiceAsync(ByVal strServiceName As String, ByVal userState As Object)
        If (Me.StartServiceOperationCompleted Is Nothing) Then
            Me.StartServiceOperationCompleted = AddressOf Me.OnStartServiceOperationCompleted
        End If
        Me.InvokeAsync("StartService", New Object() {strServiceName}, Me.StartServiceOperationCompleted, userState)
    End Sub

    Private Sub OnStartServiceOperationCompleted(ByVal arg As Object)
        If (Not (Me.StartServiceCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent StartServiceCompleted(Me, New StartServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/ImportUser", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function ImportUser(ByVal xmlString As String, ByVal IsAddUser As Boolean) As Boolean
        Dim results() As Object = Me.Invoke("ImportUser", New Object() {xmlString, IsAddUser})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginImportUser(ByVal xmlString As String, ByVal IsAddUser As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ImportUser", New Object() {xmlString, IsAddUser}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndImportUser(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub ImportUserAsync(ByVal xmlString As String, ByVal IsAddUser As Boolean)
        Me.ImportUserAsync(xmlString, IsAddUser, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub ImportUserAsync(ByVal xmlString As String, ByVal IsAddUser As Boolean, ByVal userState As Object)
        If (Me.ImportUserOperationCompleted Is Nothing) Then
            Me.ImportUserOperationCompleted = AddressOf Me.OnImportUserOperationCompleted
        End If
        Me.InvokeAsync("ImportUser", New Object() {xmlString, IsAddUser}, Me.ImportUserOperationCompleted, userState)
    End Sub

    Private Sub OnImportUserOperationCompleted(ByVal arg As Object)
        If (Not (Me.ImportUserCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ImportUserCompleted(Me, New ImportUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/ImportRole", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function ImportRole(ByVal xmlString As String) As Boolean
        Dim results() As Object = Me.Invoke("ImportRole", New Object() {xmlString})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginImportRole(ByVal xmlString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ImportRole", New Object() {xmlString}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndImportRole(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub ImportRoleAsync(ByVal xmlString As String)
        Me.ImportRoleAsync(xmlString, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub ImportRoleAsync(ByVal xmlString As String, ByVal userState As Object)
        If (Me.ImportRoleOperationCompleted Is Nothing) Then
            Me.ImportRoleOperationCompleted = AddressOf Me.OnImportRoleOperationCompleted
        End If
        Me.InvokeAsync("ImportRole", New Object() {xmlString}, Me.ImportRoleOperationCompleted, userState)
    End Sub

    Private Sub OnImportRoleOperationCompleted(ByVal arg As Object)
        If (Not (Me.ImportRoleCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ImportRoleCompleted(Me, New ImportRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/ImportRoleAccessLnk", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function ImportRoleAccessLnk(ByVal xmlString As String) As Boolean
        Dim results() As Object = Me.Invoke("ImportRoleAccessLnk", New Object() {xmlString})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginImportRoleAccessLnk(ByVal xmlString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ImportRoleAccessLnk", New Object() {xmlString}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndImportRoleAccessLnk(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub ImportRoleAccessLnkAsync(ByVal xmlString As String)
        Me.ImportRoleAccessLnkAsync(xmlString, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub ImportRoleAccessLnkAsync(ByVal xmlString As String, ByVal userState As Object)
        If (Me.ImportRoleAccessLnkOperationCompleted Is Nothing) Then
            Me.ImportRoleAccessLnkOperationCompleted = AddressOf Me.OnImportRoleAccessLnkOperationCompleted
        End If
        Me.InvokeAsync("ImportRoleAccessLnk", New Object() {xmlString}, Me.ImportRoleAccessLnkOperationCompleted, userState)
    End Sub

    Private Sub OnImportRoleAccessLnkOperationCompleted(ByVal arg As Object)
        If (Not (Me.ImportRoleAccessLnkCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ImportRoleAccessLnkCompleted(Me, New ImportRoleAccessLnkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/ImportData", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function ImportData(ByVal xmlString As String) As Boolean
        Dim results() As Object = Me.Invoke("ImportData", New Object() {xmlString})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginImportData(ByVal xmlString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ImportData", New Object() {xmlString}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndImportData(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub ImportDataAsync(ByVal xmlString As String)
        Me.ImportDataAsync(xmlString, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub ImportDataAsync(ByVal xmlString As String, ByVal userState As Object)
        If (Me.ImportDataOperationCompleted Is Nothing) Then
            Me.ImportDataOperationCompleted = AddressOf Me.OnImportDataOperationCompleted
        End If
        Me.InvokeAsync("ImportData", New Object() {xmlString}, Me.ImportDataOperationCompleted, userState)
    End Sub

    Private Sub OnImportDataOperationCompleted(ByVal arg As Object)
        If (Not (Me.ImportDataCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ImportDataCompleted(Me, New ImportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/InsertScheduleJobs", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function InsertScheduleJobs(ByVal jobTable As System.Data.DataTable) As Boolean
        Dim results() As Object = Me.Invoke("InsertScheduleJobs", New Object() {jobTable})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginInsertScheduleJobs(ByVal jobTable As System.Data.DataTable, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("InsertScheduleJobs", New Object() {jobTable}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndInsertScheduleJobs(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub InsertScheduleJobsAsync(ByVal jobTable As System.Data.DataTable)
        Me.InsertScheduleJobsAsync(jobTable, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub InsertScheduleJobsAsync(ByVal jobTable As System.Data.DataTable, ByVal userState As Object)
        If (Me.InsertScheduleJobsOperationCompleted Is Nothing) Then
            Me.InsertScheduleJobsOperationCompleted = AddressOf Me.OnInsertScheduleJobsOperationCompleted
        End If
        Me.InvokeAsync("InsertScheduleJobs", New Object() {jobTable}, Me.InsertScheduleJobsOperationCompleted, userState)
    End Sub

    Private Sub OnInsertScheduleJobsOperationCompleted(ByVal arg As Object)
        If (Not (Me.InsertScheduleJobsCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent InsertScheduleJobsCompleted(Me, New InsertScheduleJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/GetCashDeskServiceFaults", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function GetCashDeskServiceFaults() As System.Data.DataTable
        Dim results() As Object = Me.Invoke("GetCashDeskServiceFaults", New Object(-1) {})
        Return CType(results(0), System.Data.DataTable)
    End Function

    '''<remarks/>
    Public Function BeginGetCashDeskServiceFaults(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GetCashDeskServiceFaults", New Object(-1) {}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndGetCashDeskServiceFaults(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), System.Data.DataTable)
    End Function

    '''<remarks/>
    Public Overloads Sub GetCashDeskServiceFaultsAsync()
        Me.GetCashDeskServiceFaultsAsync(Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub GetCashDeskServiceFaultsAsync(ByVal userState As Object)
        If (Me.GetCashDeskServiceFaultsOperationCompleted Is Nothing) Then
            Me.GetCashDeskServiceFaultsOperationCompleted = AddressOf Me.OnGetCashDeskServiceFaultsOperationCompleted
        End If
        Me.InvokeAsync("GetCashDeskServiceFaults", New Object(-1) {}, Me.GetCashDeskServiceFaultsOperationCompleted, userState)
    End Sub

    Private Sub OnGetCashDeskServiceFaultsOperationCompleted(ByVal arg As Object)
        If (Not (Me.GetCashDeskServiceFaultsCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GetCashDeskServiceFaultsCompleted(Me, New GetCashDeskServiceFaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/ImportCompressedData", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function ImportCompressedData(ByVal compressedData As String) As Boolean
        Dim results() As Object = Me.Invoke("ImportCompressedData", New Object() {compressedData})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginImportCompressedData(ByVal compressedData As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ImportCompressedData", New Object() {compressedData}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndImportCompressedData(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub ImportCompressedDataAsync(ByVal compressedData As String)
        Me.ImportCompressedDataAsync(compressedData, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub ImportCompressedDataAsync(ByVal compressedData As String, ByVal userState As Object)
        If (Me.ImportCompressedDataOperationCompleted Is Nothing) Then
            Me.ImportCompressedDataOperationCompleted = AddressOf Me.OnImportCompressedDataOperationCompleted
        End If
        Me.InvokeAsync("ImportCompressedData", New Object() {compressedData}, Me.ImportCompressedDataOperationCompleted, userState)
    End Sub

    Private Sub OnImportCompressedDataOperationCompleted(ByVal arg As Object)
        If (Not (Me.ImportCompressedDataCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ImportCompressedDataCompleted(Me, New ImportCompressedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/ImportCalendar", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function ImportCalendar(ByVal xmlString As String) As Boolean
        Dim results() As Object = Me.Invoke("ImportCalendar", New Object() {xmlString})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginImportCalendar(ByVal xmlString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ImportCalendar", New Object() {xmlString}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndImportCalendar(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub ImportCalendarAsync(ByVal xmlString As String)
        Me.ImportCalendarAsync(xmlString, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub ImportCalendarAsync(ByVal xmlString As String, ByVal userState As Object)
        If (Me.ImportCalendarOperationCompleted Is Nothing) Then
            Me.ImportCalendarOperationCompleted = AddressOf Me.OnImportCalendarOperationCompleted
        End If
        Me.InvokeAsync("ImportCalendar", New Object() {xmlString}, Me.ImportCalendarOperationCompleted, userState)
    End Sub

    Private Sub OnImportCalendarOperationCompleted(ByVal arg As Object)
        If (Not (Me.ImportCalendarCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ImportCalendarCompleted(Me, New ImportCalendarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/ImportSite", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function ImportSite(ByVal xml As String) As Boolean
        Dim results() As Object = Me.Invoke("ImportSite", New Object() {xml})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginImportSite(ByVal xml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ImportSite", New Object() {xml}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndImportSite(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub ImportSiteAsync(ByVal xml As String)
        Me.ImportSiteAsync(xml, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub ImportSiteAsync(ByVal xml As String, ByVal userState As Object)
        If (Me.ImportSiteOperationCompleted Is Nothing) Then
            Me.ImportSiteOperationCompleted = AddressOf Me.OnImportSiteOperationCompleted
        End If
        Me.InvokeAsync("ImportSite", New Object() {xml}, Me.ImportSiteOperationCompleted, userState)
    End Sub

    Private Sub OnImportSiteOperationCompleted(ByVal arg As Object)
        If (Not (Me.ImportSiteCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ImportSiteCompleted(Me, New ImportSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/ImportModel", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function ImportModel(ByVal xmlString As String) As Boolean
        Dim results() As Object = Me.Invoke("ImportModel", New Object() {xmlString})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginImportModel(ByVal xmlString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ImportModel", New Object() {xmlString}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndImportModel(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub ImportModelAsync(ByVal xmlString As String)
        Me.ImportModelAsync(xmlString, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub ImportModelAsync(ByVal xmlString As String, ByVal userState As Object)
        If (Me.ImportModelOperationCompleted Is Nothing) Then
            Me.ImportModelOperationCompleted = AddressOf Me.OnImportModelOperationCompleted
        End If
        Me.InvokeAsync("ImportModel", New Object() {xmlString}, Me.ImportModelOperationCompleted, userState)
    End Sub

    Private Sub OnImportModelOperationCompleted(ByVal arg As Object)
        If (Not (Me.ImportModelCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ImportModelCompleted(Me, New ImportModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/UpdateBarPositionCentralStatus", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Sub UpdateBarPositionCentralStatus(ByVal strBarposName As String, ByVal bStatus As Boolean)
        Me.Invoke("UpdateBarPositionCentralStatus", New Object() {strBarposName, bStatus})
    End Sub

    '''<remarks/>
    Public Function BeginUpdateBarPositionCentralStatus(ByVal strBarposName As String, ByVal bStatus As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("UpdateBarPositionCentralStatus", New Object() {strBarposName, bStatus}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Sub EndUpdateBarPositionCentralStatus(ByVal asyncResult As System.IAsyncResult)
        Me.EndInvoke(asyncResult)
    End Sub

    '''<remarks/>
    Public Overloads Sub UpdateBarPositionCentralStatusAsync(ByVal strBarposName As String, ByVal bStatus As Boolean)
        Me.UpdateBarPositionCentralStatusAsync(strBarposName, bStatus, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub UpdateBarPositionCentralStatusAsync(ByVal strBarposName As String, ByVal bStatus As Boolean, ByVal userState As Object)
        If (Me.UpdateBarPositionCentralStatusOperationCompleted Is Nothing) Then
            Me.UpdateBarPositionCentralStatusOperationCompleted = AddressOf Me.OnUpdateBarPositionCentralStatusOperationCompleted
        End If
        Me.InvokeAsync("UpdateBarPositionCentralStatus", New Object() {strBarposName, bStatus}, Me.UpdateBarPositionCentralStatusOperationCompleted, userState)
    End Sub

    Private Sub OnUpdateBarPositionCentralStatusOperationCompleted(ByVal arg As Object)
        If (Not (Me.UpdateBarPositionCentralStatusCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent UpdateBarPositionCentralStatusCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/RequestCollectionByDate", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function RequestCollectionByDate(ByVal strCollectionByDateDetails As String, ByVal strSiteCode As String) As Boolean
        Dim results() As Object = Me.Invoke("RequestCollectionByDate", New Object() {strCollectionByDateDetails, strSiteCode})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginRequestCollectionByDate(ByVal strCollectionByDateDetails As String, ByVal strSiteCode As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("RequestCollectionByDate", New Object() {strCollectionByDateDetails, strSiteCode}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndRequestCollectionByDate(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub RequestCollectionByDateAsync(ByVal strCollectionByDateDetails As String, ByVal strSiteCode As String)
        Me.RequestCollectionByDateAsync(strCollectionByDateDetails, strSiteCode, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub RequestCollectionByDateAsync(ByVal strCollectionByDateDetails As String, ByVal strSiteCode As String, ByVal userState As Object)
        If (Me.RequestCollectionByDateOperationCompleted Is Nothing) Then
            Me.RequestCollectionByDateOperationCompleted = AddressOf Me.OnRequestCollectionByDateOperationCompleted
        End If
        Me.InvokeAsync("RequestCollectionByDate", New Object() {strCollectionByDateDetails, strSiteCode}, Me.RequestCollectionByDateOperationCompleted, userState)
    End Sub

    Private Sub OnRequestCollectionByDateOperationCompleted(ByVal arg As Object)
        If (Not (Me.RequestCollectionByDateCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent RequestCollectionByDateCompleted(Me, New RequestCollectionByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/ImportSiteSettings", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function ImportSiteSettings(ByVal xmlString As String) As Boolean
        Dim results() As Object = Me.Invoke("ImportSiteSettings", New Object() {xmlString})
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Function BeginImportSiteSettings(ByVal xmlString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ImportSiteSettings", New Object() {xmlString}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndImportSiteSettings(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), Boolean)
    End Function

    '''<remarks/>
    Public Overloads Sub ImportSiteSettingsAsync(ByVal xmlString As String)
        Me.ImportSiteSettingsAsync(xmlString, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub ImportSiteSettingsAsync(ByVal xmlString As String, ByVal userState As Object)
        If (Me.ImportSiteSettingsOperationCompleted Is Nothing) Then
            Me.ImportSiteSettingsOperationCompleted = AddressOf Me.OnImportSiteSettingsOperationCompleted
        End If
        Me.InvokeAsync("ImportSiteSettings", New Object() {xmlString}, Me.ImportSiteSettingsOperationCompleted, userState)
    End Sub

    Private Sub OnImportSiteSettingsOperationCompleted(ByVal arg As Object)
        If (Not (Me.ImportSiteSettingsCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ImportSiteSettingsCompleted(Me, New ImportSiteSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationInformationValue"), _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ballytech.com/BallyMultiConnect/WSE/GetSiteStatus", RequestNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", ResponseNamespace:="http://www.ballytech.com/BallyMultiConnect/WSE/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
    Public Function GetSiteStatus() As String
        Dim results() As Object = Me.Invoke("GetSiteStatus", New Object(-1) {})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BeginGetSiteStatus(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GetSiteStatus", New Object(-1) {}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndGetSiteStatus(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub GetSiteStatusAsync()
        Me.GetSiteStatusAsync(Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub GetSiteStatusAsync(ByVal userState As Object)
        If (Me.GetSiteStatusOperationCompleted Is Nothing) Then
            Me.GetSiteStatusOperationCompleted = AddressOf Me.OnGetSiteStatusOperationCompleted
        End If
        Me.InvokeAsync("GetSiteStatus", New Object(-1) {}, Me.GetSiteStatusOperationCompleted, userState)
    End Sub

    Private Sub OnGetSiteStatusOperationCompleted(ByVal arg As Object)
        If (Not (Me.GetSiteStatusCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GetSiteStatusCompleted(Me, New GetSiteStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    Public Shadows Sub CancelAsync(ByVal userState As Object)
        MyBase.CancelAsync(userState)
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.SerializableAttribute(), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code"), _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.ballytech.com/BallyMultiConnect/WSE/"), _
 System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://www.ballytech.com/BallyMultiConnect/WSE/", IsNullable:=False)> _
Partial Public Class AuthenticationInformation
    Inherits System.Web.Services.Protocols.SoapHeader

    Private enterprisePassKeyField As String

    Private exchangePassKeyField As String

    Private siteCodeField As String

    Private anyAttrField() As System.Xml.XmlAttribute

    '''<remarks/>
    Public Property EnterprisePassKey() As String
        Get
            Return Me.enterprisePassKeyField
        End Get
        Set(ByVal value As String)
            Me.enterprisePassKeyField = value
        End Set
    End Property

    '''<remarks/>
    Public Property ExchangePassKey() As String
        Get
            Return Me.exchangePassKeyField
        End Get
        Set(ByVal value As String)
            Me.exchangePassKeyField = value
        End Set
    End Property

    '''<remarks/>
    Public Property SiteCode() As String
        Get
            Return Me.siteCodeField
        End Get
        Set(ByVal value As String)
            Me.siteCodeField = value
        End Set
    End Property

    '''<remarks/>
    <System.Xml.Serialization.XmlAnyAttributeAttribute()> _
    Public Property AnyAttr() As System.Xml.XmlAttribute()
        Get
            Return Me.anyAttrField
        End Get
        Set(ByVal value As System.Xml.XmlAttribute())
            Me.anyAttrField = value
        End Set
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.SerializableAttribute(), _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.ballytech.com/BallyMultiConnect/WSE/")> _
Public Enum ServiceTypes

    '''<remarks/>
    All

    '''<remarks/>
    Running

    '''<remarks/>
    NotRunning
End Enum

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub HelloWebServiceCompletedEventHandler(ByVal sender As Object, ByVal e As HelloWebServiceCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class HelloWebServiceCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Integer
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Integer)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub InitializeSiteCompletedEventHandler(ByVal sender As Object, ByVal e As InitializeSiteCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class InitializeSiteCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub GetServiceStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetServiceStatusCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class GetServiceStatusCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub StartServiceCompletedEventHandler(ByVal sender As Object, ByVal e As StartServiceCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class StartServiceCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub ImportUserCompletedEventHandler(ByVal sender As Object, ByVal e As ImportUserCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class ImportUserCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub ImportRoleCompletedEventHandler(ByVal sender As Object, ByVal e As ImportRoleCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class ImportRoleCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub ImportRoleAccessLnkCompletedEventHandler(ByVal sender As Object, ByVal e As ImportRoleAccessLnkCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class ImportRoleAccessLnkCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub ImportDataCompletedEventHandler(ByVal sender As Object, ByVal e As ImportDataCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class ImportDataCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub InsertScheduleJobsCompletedEventHandler(ByVal sender As Object, ByVal e As InsertScheduleJobsCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class InsertScheduleJobsCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub GetCashDeskServiceFaultsCompletedEventHandler(ByVal sender As Object, ByVal e As GetCashDeskServiceFaultsCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class GetCashDeskServiceFaultsCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As System.Data.DataTable
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), System.Data.DataTable)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub ImportCompressedDataCompletedEventHandler(ByVal sender As Object, ByVal e As ImportCompressedDataCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class ImportCompressedDataCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub ImportCalendarCompletedEventHandler(ByVal sender As Object, ByVal e As ImportCalendarCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class ImportCalendarCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub ImportSiteCompletedEventHandler(ByVal sender As Object, ByVal e As ImportSiteCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class ImportSiteCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub ImportModelCompletedEventHandler(ByVal sender As Object, ByVal e As ImportModelCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class ImportModelCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub UpdateBarPositionCentralStatusCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub RequestCollectionByDateCompletedEventHandler(ByVal sender As Object, ByVal e As RequestCollectionByDateCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class RequestCollectionByDateCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub ImportSiteSettingsCompletedEventHandler(ByVal sender As Object, ByVal e As ImportSiteSettingsCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class ImportSiteSettingsCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
Public Delegate Sub GetSiteStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetSiteStatusCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class GetSiteStatusCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), String)
        End Get
    End Property
End Class
