//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BMC.Common.Persistence
{
    using System;
    
    
    public interface IConfig_Honeyframe : BMC.Common.Persistence.IConfigApplication
    {
        
        string Honeyframe_DefaultLogDir
        {
            get;
            set;
        }
        
        bool Honeyframe_DisableLogging
        {
            get;
            set;
        }
        
        string Honeyframe_InstallationPath
        {
            get;
            set;
        }
        
        string Honeyframe_InstallationType
        {
            get;
            set;
        }
        
        string Honeyframe_NoteCounter_Location
        {
            get;
            set;
        }
        
        int Honeyframe_NoteCounter_SimulateNoteCounter
        {
            get;
            set;
        }
        
        string Honeyframe_SQLCommandTimeout
        {
            get;
            set;
        }
    }
    
    public interface IConfig_Enterprise : BMC.Common.Persistence.IConfig_Honeyframe
    {
        
        string Honeyframe_CashmasterHQ_Settings_AuditSQLConnect
        {
            get;
            set;
        }
        
        bool Honeyframe_CashmasterHQ_Settings_IsRSAEnabled
        {
            get;
            set;
        }
        
        bool Honeyframe_CashmasterHQ_Settings_IsTripleDES
        {
            get;
            set;
        }
        
        string Honeyframe_CashmasterHQ_Settings_RSAPrivateKeyPassword
        {
            get;
            set;
        }
        
        string Honeyframe_CashmasterHQ_Settings_RSAPrivateKeyPath
        {
            get;
            set;
        }
        
        string Honeyframe_CashmasterHQ_Settings_RSAPublicKeyPath
        {
            get;
            set;
        }
        
        string Honeyframe_CashmasterHQ_Settings_SQLConnect
        {
            get;
            set;
        }
        
        string Honeyframe_CertificateSerialNumber
        {
            get;
            set;
        }
    }
    
    public interface IConfig_EnterpriseServer : BMC.Common.Persistence.IConfig_Enterprise
    {
        
        string Honeyframe_CashmasterHQ_Settings_EnterpriseKey
        {
            get;
            set;
        }
    }
    
    public interface IConfig_EnterpriseClient : BMC.Common.Persistence.IConfig_Enterprise
    {
        
        string Honeyframe_CashmasterHQ_Settings_LogPath
        {
            get;
            set;
        }
    }
    
    public interface IConfig_Exchange : BMC.Common.Persistence.IConfig_Honeyframe
    {
        
        string Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_Location
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BGSWebService
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_EnterpriseKey
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_BindIPAddress
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_BlockingCallTimeOut
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_ClientLog
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_default_server_ip
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_ExchangeDir
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_ServerIPPort
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_SocketLog
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_ExchangeKey
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_IsRSAEnabled
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_IsTripleDES
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_RSAPrivateKeyPassword
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_RSAPrivateKeyPath
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_RSAPublicKeyPath
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_SQLConnect
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_SQLConnectEx
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_TicketingSQLConnect
        {
            get;
            set;
        }
    }
    
    public interface IConfig_ExchangeServer : BMC.Common.Persistence.IConfig_Exchange
    {
        
        bool Honeyframe_Cashmaster_AddCashToExistingBreakdown
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_AutoFrequency
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_AutoRead
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BGSLogger_BGSComExchange_DefaultFile
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_CCMtrLogTimeOut
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_CommSessionCrit_log
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_EthReadLog
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_EthWriteLog
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_Log
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_MaxLogFileSize
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_Mtrchk
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_Mtrlog
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_NumOfCommLogs
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BGSLogger_BGSExchangeMonitor_DefaultFile
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BGSLogger_BGSVTP_DefaultFile
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BGSLogger_DefaultFile
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BGSLogger_ExServiceThread_DefaultFile
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BGSLogger_maxfilesize
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BGSLogger_maxlogs
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BMCDHCP_DNSIP
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BMCDHCP_GatewayIP
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_BMCDHCP_LeaseTime
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BMCDHCP_NetMask
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BMCDHCP_ServerIP
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_BMCDHCP_STATIC_IP_Default
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_BufferDatapak
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_CashBankedReport
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CashCounterComPort
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CashCounterType
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_CashCounterWithNoteCounter
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CMPWebserviceURL
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CoinSlot_1_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CoinSlot_2_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CoinSlot_3_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CoinSlot_4_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CoinSlot_5_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CoinSlot_6_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CoinSlot_7_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CoinSlot_8_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CoinSlot_9_Value
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_CollectionDisplayByZone
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_ComExchange
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Connection
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_CurrentView
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_DBServer
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_DeclarationRefills
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_EnhancedEnrollmentStatus
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_AFTTimeOut
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_AutoDepCC
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_AutoDepNCC
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_CashDep
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_CashWhdrw
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_EFTTrans
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_NonCashDep
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_Opt1WhdrwAmt
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_Opt2WhdrwAmt
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_Opt3WhdrwAmt
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_Opt4WhdrwAmt
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_Opt5WhdrwAmt
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_PartTrans
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_PtsWhdrw
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Aft_RedeemOffer
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_Async_readsector_timeout
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_Exchange_Debug_Logging
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_Debug_RegTest
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_EnableDhcp
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_EnSoftGMU
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_EPI_Card_ID_Store
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_EPI_Connection
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_Exchange_EPI_debug_logging
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_EPI_InactivityTimeout
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_EPI_MeterUpdate
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_AFTEnable
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_AFTMsgTimeOut
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_CardLesPlyTO
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_CashlessPlayer
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_CommsFailRtryCnt
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_DBCmdTimeout
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_DepositOk
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_DisMachineWhenRemove
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_DispCode
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_dwSectorWaitTime
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_dwWaitTime
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_EncryptEnable
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_EnDisCCMtr
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_EnterAmnt
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_Event
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_GmMtrTimeOut
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_GmPlayedPoll
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_GMUTimeOut
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_HPClearEn
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_HPClearPos
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_InitTimeOut
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_InsPerDelay
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_Is1AReqForBalReq
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_Is1AReqForECashDep
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_Is1AReqForECashWd
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_IsACKReqForCCMtr
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_IsCrossTktEn
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_IsGameInfoNeed
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_IsHPPollEn
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_IsUpdateEvtToSTM
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_IsUpdateTktQue
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_Iview3AssetNum
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_MeterAckTimeout
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_MeterDataTimeout
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_MsgTimeOut
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_MtrReqTimeInt
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_PinReqd
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_RcvPort
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_RebootOnFail
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_Releaselock
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_Reset
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_RSAEnable
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_SASMeterReadInt
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_Sector200FailCnt
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_SendPort
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_SplPlayer
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_TotInstGrp
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_UpdateError4D
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_UseBCDDateFormat
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Events_UseSlotDate
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_Exchange_Multi_Max_Processors
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_Exchange_Multi_ReadSector_Timeout
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_Exchange_ignore_last_counter
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_interface
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Logging_Log
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_max_mins_between_meters
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_Max_Ticket_Timeout
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_MaxOffLineTkt
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_MC_Switch_Create
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_MC_Switch_Interval
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_MC_Switch_Server_Protect
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_MC_Switch_unkwn_UDP_Interval
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_MC_TIME_Interval
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_meter_read_timeout
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_Exchange_MSMQ_CheckDenomChangeForRamReset
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_MSMQ_ExceptionTimeDelay
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_MSMQ_Path
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_MSMQ_QueueWaitTimeOut
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_MSMQ_SDTMessageQueuePath
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_Exchange_MSMQ_SDTSingleSocketMessageQueue
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_Exchange_MSMQ_ShowLogXML
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_MSMQ_TicketPriorityQueueLabel
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_MSMQ_TicketPriorityQueuePath
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_multicastip
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_OffLineTktLine1
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_OffLineTktLine2
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Polling_Interval
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Polling_Retry
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Polling_Server_Protect
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Polling_unkwn_UDP_Interval
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_SERVICE_IP_PORT
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Timeouts_Interval
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_Timeouts_Read
        {
            get;
            set;
        }
        
        int Honeyframe_Cashmaster_Exchange_TktExpDays
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_Use_Total_Financials
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Exchange_UserCompany
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_Exchange_Version11Code
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_FullCollectionsAcceptAll
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_HandHeldUsed
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_HourlyReadHour
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_IgnoreRDCNotes
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_LastAutoRead
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_LastUser
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_LFMWebService
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_LimitTimeSync
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_LogDoor
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_LogEvent
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_MaxMeterCash
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_MaxMeterTolerance
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_MaxPercentageAgainstAverage
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_MaxVariationBetweenRDCCashMeters
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_NoAltSerialNumberDisplayed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_NoSerialNumberDisplayed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_NoSingleCoinModelsDisplayed
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_NoteSlot_1_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_NoteSlot_10_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_NoteSlot_2_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_NoteSlot_3_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_NoteSlot_4_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_NoteSlot_5_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_NoteSlot_6_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_NoteSlot_7_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_NoteSlot_8_Value
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_NoteSlot_9_Value
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_offlinereads
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Open_Fri
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Open_Mon
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Open_Sat
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Open_Sun
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Open_Thu
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Open_Tue
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_Open_Wed
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_PCConnect
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_Presentation
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_ResetDatapakFloat
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_SAS_UpdateTicketDetails
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_SiteDatapackNotUsed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_SiteHandpayNotUsed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_SiteManualMetersNotUsed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_SiteMeterRefillsNotUsed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_SitePartialMetersNotUsed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_SiteRDCRefillsNotUsed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_SiteSingleCoinNotUsed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_SiteTokensNotUsed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_SiteTreasuryMemberNoNotUsed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_SpotCheckDisplayByZone
        {
            get;
            set;
        }
        
        string Honeyframe_Cashmaster_TimeSyncDelay
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_TreasuryDateTimeEnabled
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_UpdateAvalible
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_VTPNotesUsed
        {
            get;
            set;
        }
        
        bool Honeyframe_Cashmaster_XMLExport
        {
            get;
            set;
        }
        
        string Honeyframe_CertificateSerialNumber
        {
            get;
            set;
        }
        
        string Honeyframe_NetLogger_ServerIP
        {
            get;
            set;
        }
        
        int Honeyframe_NetLogger_ServerPort
        {
            get;
            set;
        }
    }
    
    public interface IConfig_ExchangeClient : BMC.Common.Persistence.IConfig_Exchange
    {
    }
    
    internal sealed class Config_EnterpriseClient : BMC.Common.Persistence.ConfigApplicationBase, BMC.Common.Persistence.IConfig_EnterpriseClient
    {
        
        private const string _s_Honeyframe = "Honeyframe";
        
        private const string _s_Honeyframe_CashmasterHQ = "Honeyframe\\CashmasterHQ";
        
        private const string _s_Honeyframe_CashmasterHQ_Settings = "Honeyframe\\CashmasterHQ\\Settings";
        
        private const string _s_Honeyframe_CashmasterHQ_Settings_LogPath = "Honeyframe\\CashmasterHQ\\Settings\\LogPath";
        
        private const string _s_Honeyframe_NoteCounter = "Honeyframe\\NoteCounter";
        
        public Config_EnterpriseClient(BMC.Common.Persistence.IConfigProvider configProvider, bool load)
        {
            this._configProvider = configProvider;
            this.Initialize(load);
        }
        
        [System.ComponentModel.DisplayName("InstallationType")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_InstallationType
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe, "InstallationType", "EnterpriseClient");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe, "InstallationType", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CertificateSerialNumber")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_CertificateSerialNumber
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe, "CertificateSerialNumber", "0E8DB4B5BD770F972F2974C381CF0CDD");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe, "CertificateSerialNumber", value);
            }
        }
        
        [System.ComponentModel.DisplayName("InstallationPath")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_InstallationPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe, "InstallationPath", "C:\\Program Files\\Bally Technologies\\Enterprise Client\\");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe, "InstallationPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SQLCommandTimeout")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_SQLCommandTimeout
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe, "SQLCommandTimeout", "60");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe, "SQLCommandTimeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DisableLogging")]
        [System.ComponentModel.Category("Honeyframe")]
        public bool Honeyframe_DisableLogging
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_EnterpriseClient._s_Honeyframe, "DisableLogging", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_EnterpriseClient._s_Honeyframe, "DisableLogging", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DefaultLogDir")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_DefaultLogDir
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe, "DefaultLogDir", "C:\\Logs");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe, "DefaultLogDir", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SQLConnect")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_SQLConnect
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "SQLConnect", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "SQLConnect", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsRSAEnabled")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public bool Honeyframe_CashmasterHQ_Settings_IsRSAEnabled
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "IsRSAEnabled", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "IsRSAEnabled", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsTripleDES")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public bool Honeyframe_CashmasterHQ_Settings_IsTripleDES
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "IsTripleDES", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "IsTripleDES", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPublicKeyPath")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_RSAPublicKeyPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "RSAPublicKeyPath", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "RSAPublicKeyPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPrivateKeyPath")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_RSAPrivateKeyPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPath", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPrivateKeyPassword")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_RSAPrivateKeyPassword
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPassword", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPassword", value);
            }
        }
        
        [System.ComponentModel.DisplayName("AuditSQLConnect")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_AuditSQLConnect
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "AuditSQLConnect", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "AuditSQLConnect", value);
            }
        }
        
        [System.ComponentModel.DisplayName("LogPath")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_LogPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "LogPath", "C:\\Logs\\AssetExportImport.txt");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "LogPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Location")]
        [System.ComponentModel.Category("Honeyframe\\NoteCounter")]
        public string Honeyframe_NoteCounter_Location
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseClient._s_Honeyframe_NoteCounter, "Location", "C:\\\\CashmasterExchange");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseClient._s_Honeyframe_NoteCounter, "Location", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SimulateNoteCounter")]
        [System.ComponentModel.Category("Honeyframe\\NoteCounter")]
        public int Honeyframe_NoteCounter_SimulateNoteCounter
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_EnterpriseClient._s_Honeyframe_NoteCounter, "SimulateNoteCounter", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_EnterpriseClient._s_Honeyframe_NoteCounter, "SimulateNoteCounter", value);
            }
        }
        
        public override void Initialize(bool load)
        {
            this.Initialize_Honeyframe();
            this.Initialize_Honeyframe_CashmasterHQ();
            this.Initialize_Honeyframe_CashmasterHQ_Settings();
            this.Initialize_Honeyframe_CashmasterHQ_Settings_LogPath();
            this.Initialize_Honeyframe_NoteCounter();
            this._configProvider.IsMetadataInitialized = true;
            if ((load == true))
            {
                this.Load();
            }
        }
        
        public override void Load()
        {
            this._configProvider.Load();
        }
        
        public override void Save()
        {
            this._configProvider.Save();
        }
        
        private void Initialize_Honeyframe()
        {
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe, "InstallationType", "EnterpriseClient");
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe, "CertificateSerialNumber", "0E8DB4B5BD770F972F2974C381CF0CDD");
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe, "InstallationPath", "C:\\Program Files\\Bally Technologies\\Enterprise Client\\");
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe, "SQLCommandTimeout", "60");
            this.Initialize<bool>(Config_EnterpriseClient._s_Honeyframe, "DisableLogging", false);
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe, "DefaultLogDir", "C:\\Logs");
        }
        
        private void Initialize_Honeyframe_CashmasterHQ()
        {
        }
        
        private void Initialize_Honeyframe_CashmasterHQ_Settings()
        {
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "SQLConnect", "");
            this.Initialize<bool>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "IsRSAEnabled", false);
            this.Initialize<bool>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "IsTripleDES", true);
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "RSAPublicKeyPath", "");
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPath", "");
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPassword", "");
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "AuditSQLConnect", "");
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe_CashmasterHQ_Settings, "LogPath", "C:\\Logs\\AssetExportImport.txt");
        }
        
        private void Initialize_Honeyframe_CashmasterHQ_Settings_LogPath()
        {
        }
        
        private void Initialize_Honeyframe_NoteCounter()
        {
            this.Initialize<string>(Config_EnterpriseClient._s_Honeyframe_NoteCounter, "Location", "C:\\\\CashmasterExchange");
            this.Initialize<int>(Config_EnterpriseClient._s_Honeyframe_NoteCounter, "SimulateNoteCounter", 0);
        }
    }
    
    internal sealed class Config_EnterpriseServer : BMC.Common.Persistence.ConfigApplicationBase, BMC.Common.Persistence.IConfig_EnterpriseServer
    {
        
        private const string _s_Honeyframe = "Honeyframe";
        
        private const string _s_Honeyframe_CashmasterHQ = "Honeyframe\\CashmasterHQ";
        
        private const string _s_Honeyframe_CashmasterHQ_Settings = "Honeyframe\\CashmasterHQ\\Settings";
        
        private const string _s_Honeyframe_NoteCounter = "Honeyframe\\NoteCounter";
        
        public Config_EnterpriseServer(BMC.Common.Persistence.IConfigProvider configProvider, bool load)
        {
            this._configProvider = configProvider;
            this.Initialize(load);
        }
        
        [System.ComponentModel.DisplayName("InstallationType")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_InstallationType
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe, "InstallationType", "EnterpriseServer");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe, "InstallationType", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CertificateSerialNumber")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_CertificateSerialNumber
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe, "CertificateSerialNumber", "0E8DB4B5BD770F972F2974C381CF0CDD");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe, "CertificateSerialNumber", value);
            }
        }
        
        [System.ComponentModel.DisplayName("InstallationPath")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_InstallationPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe, "InstallationPath", "C:\\Program Files\\Bally Technologies\\Enterprise Server\\");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe, "InstallationPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SQLCommandTimeout")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_SQLCommandTimeout
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe, "SQLCommandTimeout", "60");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe, "SQLCommandTimeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DisableLogging")]
        [System.ComponentModel.Category("Honeyframe")]
        public bool Honeyframe_DisableLogging
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_EnterpriseServer._s_Honeyframe, "DisableLogging", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_EnterpriseServer._s_Honeyframe, "DisableLogging", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DefaultLogDir")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_DefaultLogDir
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe, "DefaultLogDir", "C:\\Logs");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe, "DefaultLogDir", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SQLConnect")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_SQLConnect
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "SQLConnect", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "SQLConnect", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsRSAEnabled")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public bool Honeyframe_CashmasterHQ_Settings_IsRSAEnabled
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "IsRSAEnabled", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "IsRSAEnabled", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsTripleDES")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public bool Honeyframe_CashmasterHQ_Settings_IsTripleDES
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "IsTripleDES", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "IsTripleDES", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPublicKeyPath")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_RSAPublicKeyPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "RSAPublicKeyPath", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "RSAPublicKeyPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPrivateKeyPath")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_RSAPrivateKeyPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPath", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPrivateKeyPassword")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_RSAPrivateKeyPassword
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPassword", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPassword", value);
            }
        }
        
        [System.ComponentModel.DisplayName("AuditSQLConnect")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_AuditSQLConnect
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "AuditSQLConnect", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "AuditSQLConnect", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EnterpriseKey")]
        [System.ComponentModel.Category("Honeyframe\\CashmasterHQ\\Settings")]
        public string Honeyframe_CashmasterHQ_Settings_EnterpriseKey
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "EnterpriseKey", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "EnterpriseKey", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Location")]
        [System.ComponentModel.Category("Honeyframe\\NoteCounter")]
        public string Honeyframe_NoteCounter_Location
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_EnterpriseServer._s_Honeyframe_NoteCounter, "Location", "C:\\\\CashmasterExchange");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_EnterpriseServer._s_Honeyframe_NoteCounter, "Location", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SimulateNoteCounter")]
        [System.ComponentModel.Category("Honeyframe\\NoteCounter")]
        public int Honeyframe_NoteCounter_SimulateNoteCounter
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_EnterpriseServer._s_Honeyframe_NoteCounter, "SimulateNoteCounter", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_EnterpriseServer._s_Honeyframe_NoteCounter, "SimulateNoteCounter", value);
            }
        }
        
        public override void Initialize(bool load)
        {
            this.Initialize_Honeyframe();
            this.Initialize_Honeyframe_CashmasterHQ();
            this.Initialize_Honeyframe_CashmasterHQ_Settings();
            this.Initialize_Honeyframe_NoteCounter();
            this._configProvider.IsMetadataInitialized = true;
            if ((load == true))
            {
                this.Load();
            }
        }
        
        public override void Load()
        {
            this._configProvider.Load();
        }
        
        public override void Save()
        {
            this._configProvider.Save();
        }
        
        private void Initialize_Honeyframe()
        {
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe, "InstallationType", "EnterpriseServer");
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe, "CertificateSerialNumber", "0E8DB4B5BD770F972F2974C381CF0CDD");
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe, "InstallationPath", "C:\\Program Files\\Bally Technologies\\Enterprise Server\\");
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe, "SQLCommandTimeout", "60");
            this.Initialize<bool>(Config_EnterpriseServer._s_Honeyframe, "DisableLogging", false);
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe, "DefaultLogDir", "C:\\Logs");
        }
        
        private void Initialize_Honeyframe_CashmasterHQ()
        {
        }
        
        private void Initialize_Honeyframe_CashmasterHQ_Settings()
        {
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "SQLConnect", "");
            this.Initialize<bool>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "IsRSAEnabled", false);
            this.Initialize<bool>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "IsTripleDES", true);
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "RSAPublicKeyPath", "");
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPath", "");
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "RSAPrivateKeyPassword", "");
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "AuditSQLConnect", "");
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe_CashmasterHQ_Settings, "EnterpriseKey", "");
        }
        
        private void Initialize_Honeyframe_NoteCounter()
        {
            this.Initialize<string>(Config_EnterpriseServer._s_Honeyframe_NoteCounter, "Location", "C:\\\\CashmasterExchange");
            this.Initialize<int>(Config_EnterpriseServer._s_Honeyframe_NoteCounter, "SimulateNoteCounter", 0);
        }
    }
    
    internal sealed class Config_ExchangeClient : BMC.Common.Persistence.ConfigApplicationBase, BMC.Common.Persistence.IConfig_ExchangeClient
    {
        
        private const string _s_Honeyframe = "Honeyframe";
        
        private const string _s_Honeyframe_Cashmaster = "Honeyframe\\Cashmaster";
        
        private const string _s_Honeyframe_Cashmaster_BGSLogger = "Honeyframe\\Cashmaster\\BGSLogger";
        
        private const string _s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost = "Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost";
        
        private const string _s_Honeyframe_Cashmaster_Exchange = "Honeyframe\\Cashmaster\\Exchange";
        
        private const string _s_Honeyframe_NoteCounter = "Honeyframe\\NoteCounter";
        
        public Config_ExchangeClient(BMC.Common.Persistence.IConfigProvider configProvider, bool load)
        {
            this._configProvider = configProvider;
            this.Initialize(load);
        }
        
        [System.ComponentModel.DisplayName("InstallationPath")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_InstallationPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe, "InstallationPath", " C:\\Program Files\\Bally Technologies\\Exchange Client\\");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe, "InstallationPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("InstallationType")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_InstallationType
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe, "InstallationType", "ExchangeClient");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe, "InstallationType", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SQLCommandTimeout")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_SQLCommandTimeout
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe, "SQLCommandTimeout", "60");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe, "SQLCommandTimeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DisableLogging")]
        [System.ComponentModel.Category("Honeyframe")]
        public bool Honeyframe_DisableLogging
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeClient._s_Honeyframe, "DisableLogging", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeClient._s_Honeyframe, "DisableLogging", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DefaultLogDir")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_DefaultLogDir
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe, "DefaultLogDir", "C:\\Logs");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe, "DefaultLogDir", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ExchangeKey")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_ExchangeKey
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "ExchangeKey", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "ExchangeKey", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EnterpriseKey")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_EnterpriseKey
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "EnterpriseKey", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "EnterpriseKey", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsTripleDES")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_IsTripleDES
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "IsTripleDES", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "IsTripleDES", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SQLConnect")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_SQLConnect
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "SQLConnect", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "SQLConnect", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsRSAEnabled")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_IsRSAEnabled
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "IsRSAEnabled", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "IsRSAEnabled", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPublicKeyPath")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_RSAPublicKeyPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "RSAPublicKeyPath", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "RSAPublicKeyPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPrivateKeyPath")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_RSAPrivateKeyPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "RSAPrivateKeyPath", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "RSAPrivateKeyPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPrivateKeyPassword")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_RSAPrivateKeyPassword
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "RSAPrivateKeyPassword", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "RSAPrivateKeyPassword", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SQLConnectEx")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_SQLConnectEx
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "SQLConnectEx", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "SQLConnectEx", value);
            }
        }
        
        [System.ComponentModel.DisplayName("TicketingSQLConnect")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_TicketingSQLConnect
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "TicketingSQLConnect", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "TicketingSQLConnect", value);
            }
        }
        
        [System.ComponentModel.DisplayName("BGSWebService")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_BGSWebService
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "BGSWebService", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "BGSWebService", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Location")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost")]
        public string Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_Location
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Location", "C:\\CashmasterExchange");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Location", value);
            }
        }
        
        [System.ComponentModel.DisplayName("default_server_ip")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_default_server_ip
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "default_server_ip", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "default_server_ip", value);
            }
        }
        
        [System.ComponentModel.DisplayName("BindIPAddress")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_BindIPAddress
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "BindIPAddress", ".");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "BindIPAddress", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ExchangeDir")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_ExchangeDir
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "ExchangeDir", "C:\\CashmasterExchange");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "ExchangeDir", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ServerIPPort")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_ServerIPPort
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "ServerIPPort", 6810);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "ServerIPPort", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ClientLog")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_ClientLog
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "ClientLog", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "ClientLog", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SocketLog")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_SocketLog
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "SocketLog", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "SocketLog", value);
            }
        }
        
        [System.ComponentModel.DisplayName("BlockingCallTimeOut")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_BlockingCallTimeOut
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "BlockingCallTimeOut", 10000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "BlockingCallTimeOut", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Location")]
        [System.ComponentModel.Category("Honeyframe\\NoteCounter")]
        public string Honeyframe_NoteCounter_Location
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeClient._s_Honeyframe_NoteCounter, "Location", "C:\\\\CashmasterExchange");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeClient._s_Honeyframe_NoteCounter, "Location", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SimulateNoteCounter")]
        [System.ComponentModel.Category("Honeyframe\\NoteCounter")]
        public int Honeyframe_NoteCounter_SimulateNoteCounter
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeClient._s_Honeyframe_NoteCounter, "SimulateNoteCounter", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeClient._s_Honeyframe_NoteCounter, "SimulateNoteCounter", value);
            }
        }
        
        public override void Initialize(bool load)
        {
            this.Initialize_Honeyframe();
            this.Initialize_Honeyframe_Cashmaster();
            this.Initialize_Honeyframe_Cashmaster_BGSLogger();
            this.Initialize_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost();
            this.Initialize_Honeyframe_Cashmaster_Exchange();
            this.Initialize_Honeyframe_NoteCounter();
            this._configProvider.IsMetadataInitialized = true;
            if ((load == true))
            {
                this.Load();
            }
        }
        
        public override void Load()
        {
            this._configProvider.Load();
        }
        
        public override void Save()
        {
            this._configProvider.Save();
        }
        
        private void Initialize_Honeyframe()
        {
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe, "InstallationPath", " C:\\Program Files\\Bally Technologies\\Exchange Client\\");
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe, "InstallationType", "ExchangeClient");
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe, "SQLCommandTimeout", "60");
            this.Initialize<bool>(Config_ExchangeClient._s_Honeyframe, "DisableLogging", false);
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe, "DefaultLogDir", "C:\\Logs");
        }
        
        private void Initialize_Honeyframe_Cashmaster()
        {
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "ExchangeKey", "");
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "EnterpriseKey", "");
            this.Initialize<bool>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "IsTripleDES", true);
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "SQLConnect", "");
            this.Initialize<bool>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "IsRSAEnabled", false);
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "RSAPublicKeyPath", "");
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "RSAPrivateKeyPath", "");
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "RSAPrivateKeyPassword", "");
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "SQLConnectEx", "");
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "TicketingSQLConnect", "");
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster, "BGSWebService", "");
        }
        
        private void Initialize_Honeyframe_Cashmaster_BGSLogger()
        {
        }
        
        private void Initialize_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost()
        {
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Location", "C:\\CashmasterExchange");
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange()
        {
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "default_server_ip", "");
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "BindIPAddress", ".");
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "ExchangeDir", "C:\\CashmasterExchange");
            this.Initialize<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "ServerIPPort", 6810);
            this.Initialize<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "ClientLog", 0);
            this.Initialize<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "SocketLog", 1);
            this.Initialize<int>(Config_ExchangeClient._s_Honeyframe_Cashmaster_Exchange, "BlockingCallTimeOut", 10000);
        }
        
        private void Initialize_Honeyframe_NoteCounter()
        {
            this.Initialize<string>(Config_ExchangeClient._s_Honeyframe_NoteCounter, "Location", "C:\\\\CashmasterExchange");
            this.Initialize<int>(Config_ExchangeClient._s_Honeyframe_NoteCounter, "SimulateNoteCounter", 0);
        }
    }
    
    internal sealed class Config_ExchangeServer : BMC.Common.Persistence.ConfigApplicationBase, BMC.Common.Persistence.IConfig_ExchangeServer
    {
        
        private const string _s_Honeyframe = "Honeyframe";
        
        private const string _s_Honeyframe_Cashmaster = "Honeyframe\\Cashmaster";
        
        private const string _s_Honeyframe_Cashmaster_BGSLogger = "Honeyframe\\Cashmaster\\BGSLogger";
        
        private const string _s_Honeyframe_Cashmaster_BGSLogger_BGSComExchange = "Honeyframe\\Cashmaster\\BGSLogger\\BGSComExchange";
        
        private const string _s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost = "Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost";
        
        private const string _s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeMonitor = "Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeMonitor";
        
        private const string _s_Honeyframe_Cashmaster_BGSLogger_BGSVTP = "Honeyframe\\Cashmaster\\BGSLogger\\BGSVTP";
        
        private const string _s_Honeyframe_Cashmaster_BGSLogger_ExServiceThread = "Honeyframe\\Cashmaster\\BGSLogger\\ExServiceThread";
        
        private const string _s_Honeyframe_Cashmaster_BMCDHCP = "Honeyframe\\Cashmaster\\BMCDHCP";
        
        private const string _s_Honeyframe_Cashmaster_BMCDHCP_STATIC_IP = "Honeyframe\\Cashmaster\\BMCDHCP\\STATIC_IP";
        
        private const string _s_Honeyframe_Cashmaster_Exchange = "Honeyframe\\Cashmaster\\Exchange";
        
        private const string _s_Honeyframe_Cashmaster_Exchange_Aft = "Honeyframe\\Cashmaster\\Exchange\\Aft";
        
        private const string _s_Honeyframe_Cashmaster_Exchange_Debug = "Honeyframe\\Cashmaster\\Exchange\\Debug";
        
        private const string _s_Honeyframe_Cashmaster_Exchange_EPI = "Honeyframe\\Cashmaster\\Exchange\\EPI";
        
        private const string _s_Honeyframe_Cashmaster_Exchange_Events = "Honeyframe\\Cashmaster\\Exchange\\Events";
        
        private const string _s_Honeyframe_Cashmaster_Exchange_Logging = "Honeyframe\\Cashmaster\\Exchange\\Logging";
        
        private const string _s_Honeyframe_Cashmaster_Exchange_MC = "Honeyframe\\Cashmaster\\Exchange\\MC";
        
        private const string _s_Honeyframe_Cashmaster_Exchange_MC_Switch = "Honeyframe\\Cashmaster\\Exchange\\MC\\Switch";
        
        private const string _s_Honeyframe_Cashmaster_Exchange_MC_TIME = "Honeyframe\\Cashmaster\\Exchange\\MC\\TIME";
        
        private const string _s_Honeyframe_Cashmaster_Exchange_MSMQ = "Honeyframe\\Cashmaster\\Exchange\\MSMQ";
        
        private const string _s_Honeyframe_Cashmaster_Exchange_Polling = "Honeyframe\\Cashmaster\\Exchange\\Polling";
        
        private const string _s_Honeyframe_Cashmaster_Exchange_Timeouts = "Honeyframe\\Cashmaster\\Exchange\\Timeouts";
        
        private const string _s_Honeyframe_NetLogger = "Honeyframe\\NetLogger";
        
        private const string _s_Honeyframe_NoteCounter = "Honeyframe\\NoteCounter";
        
        public Config_ExchangeServer(BMC.Common.Persistence.IConfigProvider configProvider, bool load)
        {
            this._configProvider = configProvider;
            this.Initialize(load);
        }
        
        [System.ComponentModel.DisplayName("InstallationPath")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_InstallationPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe, "InstallationPath", "C:\\Program Files\\Bally Technologies\\Exchange Server\\");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe, "InstallationPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("InstallationType")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_InstallationType
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe, "InstallationType", "ExchangeServer");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe, "InstallationType", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SQLCommandTimeout")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_SQLCommandTimeout
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe, "SQLCommandTimeout", "60");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe, "SQLCommandTimeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CertificateSerialNumber")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_CertificateSerialNumber
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe, "CertificateSerialNumber", "0E8DB4B5BD770F972F2974C381CF0CDD");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe, "CertificateSerialNumber", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DisableLogging")]
        [System.ComponentModel.Category("Honeyframe")]
        public bool Honeyframe_DisableLogging
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe, "DisableLogging", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe, "DisableLogging", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DefaultLogDir")]
        [System.ComponentModel.Category("Honeyframe")]
        public string Honeyframe_DefaultLogDir
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe, "DefaultLogDir", "C:\\Logs");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe, "DefaultLogDir", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ExchangeKey")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_ExchangeKey
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "ExchangeKey", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "ExchangeKey", value);
            }
        }
        
        [System.ComponentModel.DisplayName("LFMWebService")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_LFMWebService
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LFMWebService", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LFMWebService", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EnterpriseKey")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_EnterpriseKey
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "EnterpriseKey", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "EnterpriseKey", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsTripleDES")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_IsTripleDES
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "IsTripleDES", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "IsTripleDES", value);
            }
        }
        
        [System.ComponentModel.DisplayName("UpdateAvalible")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_UpdateAvalible
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "UpdateAvalible", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "UpdateAvalible", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SiteDatapackNotUsed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_SiteDatapackNotUsed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteDatapackNotUsed", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteDatapackNotUsed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoSingleCoinModelsDisplayed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_NoSingleCoinModelsDisplayed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoSingleCoinModelsDisplayed", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoSingleCoinModelsDisplayed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SiteManualMetersNotUsed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_SiteManualMetersNotUsed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteManualMetersNotUsed", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteManualMetersNotUsed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoSerialNumberDisplayed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_NoSerialNumberDisplayed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoSerialNumberDisplayed", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoSerialNumberDisplayed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoAltSerialNumberDisplayed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_NoAltSerialNumberDisplayed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoAltSerialNumberDisplayed", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoAltSerialNumberDisplayed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("BufferDatapak")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_BufferDatapak
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "BufferDatapak", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "BufferDatapak", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SiteTokensNotUsed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_SiteTokensNotUsed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteTokensNotUsed", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteTokensNotUsed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SiteSingleCoinNotUsed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_SiteSingleCoinNotUsed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteSingleCoinNotUsed", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteSingleCoinNotUsed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("AddCashToExistingBreakdown")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_AddCashToExistingBreakdown
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "AddCashToExistingBreakdown", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "AddCashToExistingBreakdown", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SiteMeterRefillsNotUsed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_SiteMeterRefillsNotUsed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteMeterRefillsNotUsed", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteMeterRefillsNotUsed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SiteHandpayNotUsed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_SiteHandpayNotUsed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteHandpayNotUsed", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteHandpayNotUsed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SiteTreasuryMemberNoNotUsed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_SiteTreasuryMemberNoNotUsed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteTreasuryMemberNoNotUsed", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteTreasuryMemberNoNotUsed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("VTPNotesUsed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_VTPNotesUsed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "VTPNotesUsed", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "VTPNotesUsed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("TreasuryDateTimeEnabled")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_TreasuryDateTimeEnabled
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "TreasuryDateTimeEnabled", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "TreasuryDateTimeEnabled", value);
            }
        }
        
        [System.ComponentModel.DisplayName("HandHeldUsed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_HandHeldUsed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "HandHeldUsed", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "HandHeldUsed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ResetDatapakFloat")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_ResetDatapakFloat
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "ResetDatapakFloat", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "ResetDatapakFloat", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CashBankedReport")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_CashBankedReport
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashBankedReport", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashBankedReport", value);
            }
        }
        
        [System.ComponentModel.DisplayName("MaxMeterCash")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_MaxMeterCash
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxMeterCash", "10000");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxMeterCash", value);
            }
        }
        
        [System.ComponentModel.DisplayName("XMLExport")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_XMLExport
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "XMLExport", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "XMLExport", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CurrentView")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CurrentView
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CurrentView", "List");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CurrentView", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Open_Mon")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_Open_Mon
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Mon", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Mon", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Open_Tue")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_Open_Tue
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Tue", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Tue", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Open_Wed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_Open_Wed
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Wed", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Wed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Open_Thu")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_Open_Thu
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Thu", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Thu", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Open_Fri")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_Open_Fri
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Fri", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Fri", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Open_Sat")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_Open_Sat
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Sat", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Sat", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Open_Sun")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_Open_Sun
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Sun", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Sun", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CashCounterType")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CashCounterType
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashCounterType", "14");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashCounterType", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CashCounterComPort")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CashCounterComPort
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashCounterComPort", "1");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashCounterComPort", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CoinSlot_1_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CoinSlot_1_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_1_Value", "1");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_1_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CoinSlot_2_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CoinSlot_2_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_2_Value", "2");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_2_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CoinSlot_3_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CoinSlot_3_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_3_Value", "5");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_3_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CoinSlot_4_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CoinSlot_4_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_4_Value", "10");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_4_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CoinSlot_5_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CoinSlot_5_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_5_Value", "20");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_5_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CoinSlot_6_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CoinSlot_6_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_6_Value", "50");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_6_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CoinSlot_7_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CoinSlot_7_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_7_Value", "50");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_7_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CoinSlot_8_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CoinSlot_8_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_8_Value", "100");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_8_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CoinSlot_9_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CoinSlot_9_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_9_Value", "200");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_9_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Presentation")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_Presentation
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Presentation", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Presentation", value);
            }
        }
        
        [System.ComponentModel.DisplayName("FullCollectionsAcceptAll")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_FullCollectionsAcceptAll
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "FullCollectionsAcceptAll", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "FullCollectionsAcceptAll", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DeclarationRefills")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_DeclarationRefills
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "DeclarationRefills", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "DeclarationRefills", value);
            }
        }
        
        [System.ComponentModel.DisplayName("MaxVariationBetweenRDCCashMeters")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_MaxVariationBetweenRDCCashMeters
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxVariationBetweenRDCCashMeters", "3");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxVariationBetweenRDCCashMeters", value);
            }
        }
        
        [System.ComponentModel.DisplayName("MaxPercentageAgainstAverage")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_MaxPercentageAgainstAverage
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxPercentageAgainstAverage", "5");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxPercentageAgainstAverage", value);
            }
        }
        
        [System.ComponentModel.DisplayName("MaxMeterTolerance")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_MaxMeterTolerance
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxMeterTolerance", "1000");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxMeterTolerance", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IgnoreRDCNotes")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_IgnoreRDCNotes
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "IgnoreRDCNotes", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "IgnoreRDCNotes", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CashCounterWithNoteCounter")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_CashCounterWithNoteCounter
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashCounterWithNoteCounter", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashCounterWithNoteCounter", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SitePartialMetersNotUsed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_SitePartialMetersNotUsed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SitePartialMetersNotUsed", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SitePartialMetersNotUsed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Connection")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_Connection
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Connection", "1");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Connection", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SiteRDCRefillsNotUsed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_SiteRDCRefillsNotUsed
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteRDCRefillsNotUsed", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteRDCRefillsNotUsed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("LogDoor")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_LogDoor
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LogDoor", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LogDoor", value);
            }
        }
        
        [System.ComponentModel.DisplayName("LogEvent")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_LogEvent
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LogEvent", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LogEvent", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ComExchange")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_ComExchange
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "ComExchange", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "ComExchange", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DBServer")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_DBServer
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "DBServer", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "DBServer", value);
            }
        }
        
        [System.ComponentModel.DisplayName("offlinereads")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_offlinereads
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "offlinereads", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "offlinereads", value);
            }
        }
        
        [System.ComponentModel.DisplayName("TimeSyncDelay")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_TimeSyncDelay
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "TimeSyncDelay", "5");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "TimeSyncDelay", value);
            }
        }
        
        [System.ComponentModel.DisplayName("AutoRead")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_AutoRead
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "AutoRead", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "AutoRead", value);
            }
        }
        
        [System.ComponentModel.DisplayName("AutoFrequency")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_AutoFrequency
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "AutoFrequency", "Daily");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "AutoFrequency", value);
            }
        }
        
        [System.ComponentModel.DisplayName("LastAutoRead")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_LastAutoRead
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LastAutoRead", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LastAutoRead", value);
            }
        }
        
        [System.ComponentModel.DisplayName("LastUser")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_LastUser
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LastUser", "Bally");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LastUser", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CollectionDisplayByZone")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_CollectionDisplayByZone
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CollectionDisplayByZone", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CollectionDisplayByZone", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SpotCheckDisplayByZone")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_SpotCheckDisplayByZone
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SpotCheckDisplayByZone", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SpotCheckDisplayByZone", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SQLConnect")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_SQLConnect
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SQLConnect", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SQLConnect", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsRSAEnabled")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_IsRSAEnabled
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "IsRSAEnabled", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "IsRSAEnabled", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPublicKeyPath")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_RSAPublicKeyPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "RSAPublicKeyPath", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "RSAPublicKeyPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPrivateKeyPath")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_RSAPrivateKeyPath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "RSAPrivateKeyPath", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "RSAPrivateKeyPath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAPrivateKeyPassword")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_RSAPrivateKeyPassword
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "RSAPrivateKeyPassword", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "RSAPrivateKeyPassword", value);
            }
        }
        
        [System.ComponentModel.DisplayName("LimitTimeSync")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_LimitTimeSync
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LimitTimeSync", "15,16");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LimitTimeSync", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SAS_UpdateTicketDetails")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public bool Honeyframe_Cashmaster_SAS_UpdateTicketDetails
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SAS_UpdateTicketDetails", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SAS_UpdateTicketDetails", value);
            }
        }
        
        [System.ComponentModel.DisplayName("HourlyReadHour")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_HourlyReadHour
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "HourlyReadHour", "12");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "HourlyReadHour", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoteSlot_1_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_NoteSlot_1_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_1_Value", "1");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_1_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoteSlot_2_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_NoteSlot_2_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_2_Value", "5");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_2_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoteSlot_3_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_NoteSlot_3_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_3_Value", "10");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_3_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoteSlot_4_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_NoteSlot_4_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_4_Value", "20");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_4_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoteSlot_5_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_NoteSlot_5_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_5_Value", "50");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_5_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoteSlot_6_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_NoteSlot_6_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_6_Value", "100");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_6_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoteSlot_7_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_NoteSlot_7_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_7_Value", "0");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_7_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoteSlot_8_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_NoteSlot_8_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_8_Value", "0");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_8_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoteSlot_9_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_NoteSlot_9_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_9_Value", "0");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_9_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NoteSlot_10_Value")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_NoteSlot_10_Value
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_10_Value", "0");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_10_Value", value);
            }
        }
        
        [System.ComponentModel.DisplayName("BGSWebService")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_BGSWebService
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "BGSWebService", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "BGSWebService", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EnhancedEnrollmentStatus")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_EnhancedEnrollmentStatus
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "EnhancedEnrollmentStatus", "ONLINE");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "EnhancedEnrollmentStatus", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SQLConnectEx")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_SQLConnectEx
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SQLConnectEx", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SQLConnectEx", value);
            }
        }
        
        [System.ComponentModel.DisplayName("TicketingSQLConnect")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_TicketingSQLConnect
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "TicketingSQLConnect", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "TicketingSQLConnect", value);
            }
        }
        
        [System.ComponentModel.DisplayName("PCConnect")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_PCConnect
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "PCConnect", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "PCConnect", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CMPWebserviceURL")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster")]
        public string Honeyframe_Cashmaster_CMPWebserviceURL
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CMPWebserviceURL", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CMPWebserviceURL", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DefaultFile")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger")]
        public string Honeyframe_Cashmaster_BGSLogger_DefaultFile
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger, "DefaultFile", "c:\\\\logs\\\\otherlogging.txt");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger, "DefaultFile", value);
            }
        }
        
        [System.ComponentModel.DisplayName("maxlogs")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger")]
        public string Honeyframe_Cashmaster_BGSLogger_maxlogs
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger, "maxlogs", "100");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger, "maxlogs", value);
            }
        }
        
        [System.ComponentModel.DisplayName("maxfilesize")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger")]
        public string Honeyframe_Cashmaster_BGSLogger_maxfilesize
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger, "maxfilesize", "2000");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger, "maxfilesize", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DefaultFile")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSComExchange")]
        public string Honeyframe_Cashmaster_BGSLogger_BGSComExchange_DefaultFile
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSComExchange, "DefaultFile", "c:\\\\Logs\\\\BGSExchangeMonitor.txt");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSComExchange, "DefaultFile", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Mtrchk")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost")]
        public int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_Mtrchk
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Mtrchk", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Mtrchk", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Mtrlog")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost")]
        public int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_Mtrlog
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Mtrlog", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Mtrlog", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Location")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost")]
        public string Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_Location
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Location", "C:\\\\CashmasterExchange");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Location", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Log")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost")]
        public int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_Log
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Log", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Log", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NumOfCommLogs")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost")]
        public int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_NumOfCommLogs
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "NumOfCommLogs", 10);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "NumOfCommLogs", value);
            }
        }
        
        [System.ComponentModel.DisplayName("MaxLogFileSize")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost")]
        public int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_MaxLogFileSize
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "MaxLogFileSize", 1024);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "MaxLogFileSize", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EthReadLog")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost")]
        public int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_EthReadLog
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "EthReadLog", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "EthReadLog", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EthWriteLog")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost")]
        public int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_EthWriteLog
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "EthWriteLog", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "EthWriteLog", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CCMtrLogTimeOut")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost")]
        public int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_CCMtrLogTimeOut
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "CCMtrLogTimeOut", 3600000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "CCMtrLogTimeOut", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CommSessionCrit_log")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeHost")]
        public int Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost_CommSessionCrit_log
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "CommSessionCrit_log", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "CommSessionCrit_log", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DefaultFile")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSExchangeMonitor")]
        public string Honeyframe_Cashmaster_BGSLogger_BGSExchangeMonitor_DefaultFile
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeMonitor, "DefaultFile", "c:\\\\Logs\\\\BGSExchangeMonitor.txt");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeMonitor, "DefaultFile", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DefaultFile")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\BGSVTP")]
        public string Honeyframe_Cashmaster_BGSLogger_BGSVTP_DefaultFile
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSVTP, "DefaultFile", "c:\\\\Logs\\\\VTP.txt");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSVTP, "DefaultFile", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DefaultFile")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BGSLogger\\ExServiceThread")]
        public string Honeyframe_Cashmaster_BGSLogger_ExServiceThread_DefaultFile
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_ExServiceThread, "DefaultFile", "c:\\\\Logs\\\\BGSExchangeMonitor.txt");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_ExServiceThread, "DefaultFile", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ServerIP")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BMCDHCP")]
        public string Honeyframe_Cashmaster_BMCDHCP_ServerIP
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "ServerIP", "10.0.0.10");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "ServerIP", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NetMask")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BMCDHCP")]
        public string Honeyframe_Cashmaster_BMCDHCP_NetMask
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "NetMask", "255.255.0.0");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "NetMask", value);
            }
        }
        
        [System.ComponentModel.DisplayName("GatewayIP")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BMCDHCP")]
        public string Honeyframe_Cashmaster_BMCDHCP_GatewayIP
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "GatewayIP", "10.0.0.1");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "GatewayIP", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DNSIP")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BMCDHCP")]
        public string Honeyframe_Cashmaster_BMCDHCP_DNSIP
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "DNSIP", "10.0.0.1");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "DNSIP", value);
            }
        }
        
        [System.ComponentModel.DisplayName("LeaseTime")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BMCDHCP")]
        public int Honeyframe_Cashmaster_BMCDHCP_LeaseTime
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "LeaseTime", 6850);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "LeaseTime", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Default")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\BMCDHCP\\STATIC_IP")]
        public string Honeyframe_Cashmaster_BMCDHCP_STATIC_IP_Default
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP_STATIC_IP, "Default", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP_STATIC_IP, "Default", value);
            }
        }
        
        [System.ComponentModel.DisplayName("multicastip")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_multicastip
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "multicastip", "239.192.1.1");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "multicastip", value);
            }
        }
        
        [System.ComponentModel.DisplayName("interface")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_interface
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "interface", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "interface", value);
            }
        }
        
        [System.ComponentModel.DisplayName("TktExpDays")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_TktExpDays
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "TktExpDays", 10);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "TktExpDays", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ServerIPPort")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_ServerIPPort
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ServerIPPort", 6810);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ServerIPPort", value);
            }
        }
        
        [System.ComponentModel.DisplayName("BindIPAddress")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_BindIPAddress
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "BindIPAddress", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "BindIPAddress", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ExchangeDir")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_ExchangeDir
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ExchangeDir", "c:\\CashmasterExchange");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ExchangeDir", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Use_Total_Financials")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_Use_Total_Financials
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Use_Total_Financials", "10.0.0.1");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Use_Total_Financials", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SERVICE_IP_PORT")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_SERVICE_IP_PORT
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "SERVICE_IP_PORT", "60000");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "SERVICE_IP_PORT", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ignore_last_counter")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public bool Honeyframe_Cashmaster_Exchange_ignore_last_counter
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ignore_last_counter", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ignore_last_counter", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Debug_Logging")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public bool Honeyframe_Cashmaster_Exchange_Debug_Logging
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Debug_Logging", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Debug_Logging", value);
            }
        }
        
        [System.ComponentModel.DisplayName("max_mins_between_meters")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_max_mins_between_meters
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "max_mins_between_meters", "1");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "max_mins_between_meters", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Exchange_Multi_Max_Processors")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_Exchange_Multi_Max_Processors
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Exchange_Multi_Max_Processors", "50");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Exchange_Multi_Max_Processors", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Exchange_Multi_ReadSector_Timeout")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_Exchange_Multi_ReadSector_Timeout
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Exchange_Multi_ReadSector_Timeout", "60");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Exchange_Multi_ReadSector_Timeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Max_Ticket_Timeout")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_Max_Ticket_Timeout
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Max_Ticket_Timeout", "2");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Max_Ticket_Timeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("meter_read_timeout")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_meter_read_timeout
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "meter_read_timeout", "20");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "meter_read_timeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Version11Code")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public bool Honeyframe_Cashmaster_Exchange_Version11Code
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Version11Code", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Version11Code", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Async_readsector_timeout")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_Async_readsector_timeout
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Async_readsector_timeout", "60");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Async_readsector_timeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EnableDhcp")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_EnableDhcp
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "EnableDhcp", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "EnableDhcp", value);
            }
        }
        
        [System.ComponentModel.DisplayName("default_server_ip")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_default_server_ip
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "default_server_ip", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "default_server_ip", value);
            }
        }
        
        [System.ComponentModel.DisplayName("MaxOffLineTkt")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_MaxOffLineTkt
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "MaxOffLineTkt", 36);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "MaxOffLineTkt", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SocketLog")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_SocketLog
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "SocketLog", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "SocketLog", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EnSoftGMU")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_EnSoftGMU
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "EnSoftGMU", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "EnSoftGMU", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ClientLog")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_ClientLog
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ClientLog", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ClientLog", value);
            }
        }
        
        [System.ComponentModel.DisplayName("BlockingCallTimeOut")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public int Honeyframe_Cashmaster_Exchange_BlockingCallTimeOut
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "BlockingCallTimeOut", 10000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "BlockingCallTimeOut", value);
            }
        }
        
        [System.ComponentModel.DisplayName("OffLineTktLine1")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_OffLineTktLine1
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "OffLineTktLine1", "**** OFFLINE **** OFFLINE ****");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "OffLineTktLine1", value);
            }
        }
        
        [System.ComponentModel.DisplayName("OffLineTktLine2")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_OffLineTktLine2
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "OffLineTktLine2", "**** OFFLINE **** OFFLINE ****");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "OffLineTktLine2", value);
            }
        }
        
        [System.ComponentModel.DisplayName("UserCompany")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange")]
        public string Honeyframe_Cashmaster_Exchange_UserCompany
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "UserCompany", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "UserCompany", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EFTTrans")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_EFTTrans
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "EFTTrans", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "EFTTrans", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CashDep")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_CashDep
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "CashDep", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "CashDep", value);
            }
        }
        
        [System.ComponentModel.DisplayName("NonCashDep")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_NonCashDep
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "NonCashDep", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "NonCashDep", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RedeemOffer")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_RedeemOffer
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "RedeemOffer", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "RedeemOffer", value);
            }
        }
        
        [System.ComponentModel.DisplayName("PtsWhdrw")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_PtsWhdrw
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "PtsWhdrw", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "PtsWhdrw", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CashWhdrw")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_CashWhdrw
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "CashWhdrw", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "CashWhdrw", value);
            }
        }
        
        [System.ComponentModel.DisplayName("PartTrans")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_PartTrans
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "PartTrans", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "PartTrans", value);
            }
        }
        
        [System.ComponentModel.DisplayName("AutoDepNCC")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_AutoDepNCC
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "AutoDepNCC", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "AutoDepNCC", value);
            }
        }
        
        [System.ComponentModel.DisplayName("AutoDepCC")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_AutoDepCC
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "AutoDepCC", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "AutoDepCC", value);
            }
        }
        
        [System.ComponentModel.DisplayName("AFTTimeOut")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_AFTTimeOut
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "AFTTimeOut", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "AFTTimeOut", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Opt1WhdrwAmt")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_Opt1WhdrwAmt
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt1WhdrwAmt", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt1WhdrwAmt", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Opt2WhdrwAmt")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_Opt2WhdrwAmt
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt2WhdrwAmt", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt2WhdrwAmt", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Opt3WhdrwAmt")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_Opt3WhdrwAmt
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt3WhdrwAmt", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt3WhdrwAmt", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Opt4WhdrwAmt")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_Opt4WhdrwAmt
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt4WhdrwAmt", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt4WhdrwAmt", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Opt5WhdrwAmt")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Aft")]
        public int Honeyframe_Cashmaster_Exchange_Aft_Opt5WhdrwAmt
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt5WhdrwAmt", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt5WhdrwAmt", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RegTest")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Debug")]
        public string Honeyframe_Cashmaster_Exchange_Debug_RegTest
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Debug, "RegTest", "1");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Debug, "RegTest", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Card_ID_Store")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\EPI")]
        public string Honeyframe_Cashmaster_Exchange_EPI_Card_ID_Store
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "Card_ID_Store", "1");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "Card_ID_Store", value);
            }
        }
        
        [System.ComponentModel.DisplayName("debug_logging")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\EPI")]
        public bool Honeyframe_Cashmaster_Exchange_EPI_debug_logging
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "debug_logging", true);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "debug_logging", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Connection")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\EPI")]
        public string Honeyframe_Cashmaster_Exchange_EPI_Connection
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "Connection", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "Connection", value);
            }
        }
        
        [System.ComponentModel.DisplayName("InactivityTimeout")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\EPI")]
        public string Honeyframe_Cashmaster_Exchange_EPI_InactivityTimeout
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "InactivityTimeout", "10");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "InactivityTimeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("MeterUpdate")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\EPI")]
        public string Honeyframe_Cashmaster_Exchange_EPI_MeterUpdate
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "MeterUpdate", "15");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "MeterUpdate", value);
            }
        }
        
        [System.ComponentModel.DisplayName("AFTEnable")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_AFTEnable
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "AFTEnable", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "AFTEnable", value);
            }
        }
        
        [System.ComponentModel.DisplayName("AFTMsgTimeOut")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_AFTMsgTimeOut
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "AFTMsgTimeOut", 25000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "AFTMsgTimeOut", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CardLesPlyTO")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_CardLesPlyTO
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "CardLesPlyTO", 10);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "CardLesPlyTO", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CashlessPlayer")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_CashlessPlayer
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "CashlessPlayer", 10);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "CashlessPlayer", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DepositOk")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_DepositOk
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DepositOk", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DepositOk", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DispCode")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_DispCode
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DispCode", 9);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DispCode", value);
            }
        }
        
        [System.ComponentModel.DisplayName("dwWaitTime")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_dwWaitTime
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "dwWaitTime", 10);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "dwWaitTime", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EnDisCCMtr")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_EnDisCCMtr
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "EnDisCCMtr", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "EnDisCCMtr", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EnterAmnt")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_EnterAmnt
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "EnterAmnt", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "EnterAmnt", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Event")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_Event
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Event", 50);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Event", value);
            }
        }
        
        [System.ComponentModel.DisplayName("GmMtrTimeOut")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_GmMtrTimeOut
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "GmMtrTimeOut", 2000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "GmMtrTimeOut", value);
            }
        }
        
        [System.ComponentModel.DisplayName("GmPlayedPoll")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_GmPlayedPoll
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "GmPlayedPoll", 1000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "GmPlayedPoll", value);
            }
        }
        
        [System.ComponentModel.DisplayName("GMUTimeOut")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_GMUTimeOut
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "GMUTimeOut", 10000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "GMUTimeOut", value);
            }
        }
        
        [System.ComponentModel.DisplayName("HPClearEn")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_HPClearEn
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "HPClearEn", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "HPClearEn", value);
            }
        }
        
        [System.ComponentModel.DisplayName("HPClearPos")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_HPClearPos
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "HPClearPos", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "HPClearPos", value);
            }
        }
        
        [System.ComponentModel.DisplayName("InitTimeOut")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_InitTimeOut
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "InitTimeOut", 500);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "InitTimeOut", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsHPPollEn")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_IsHPPollEn
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsHPPollEn", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsHPPollEn", value);
            }
        }
        
        [System.ComponentModel.DisplayName("MeterAckTimeout")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_MeterAckTimeout
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MeterAckTimeout", 10000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MeterAckTimeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("MeterDataTimeout")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_MeterDataTimeout
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MeterDataTimeout", 10000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MeterDataTimeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("MtrReqTimeInt")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_MtrReqTimeInt
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MtrReqTimeInt", 30000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MtrReqTimeInt", value);
            }
        }
        
        [System.ComponentModel.DisplayName("PinReqd")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_PinReqd
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "PinReqd", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "PinReqd", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RebootOnFail")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_RebootOnFail
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "RebootOnFail", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "RebootOnFail", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Releaselock")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_Releaselock
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Releaselock", 3);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Releaselock", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Reset")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_Reset
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Reset", 1000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Reset", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SASMeterReadInt")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_SASMeterReadInt
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "SASMeterReadInt", 200);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "SASMeterReadInt", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Sector200FailCnt")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_Sector200FailCnt
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Sector200FailCnt", 5);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Sector200FailCnt", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SplPlayer")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_SplPlayer
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "SplPlayer", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "SplPlayer", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsACKReqForCCMtr")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_IsACKReqForCCMtr
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsACKReqForCCMtr", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsACKReqForCCMtr", value);
            }
        }
        
        [System.ComponentModel.DisplayName("EncryptEnable")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_EncryptEnable
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "EncryptEnable", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "EncryptEnable", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RSAEnable")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_RSAEnable
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "RSAEnable", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "RSAEnable", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DBCmdTimeout")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_DBCmdTimeout
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DBCmdTimeout", 10);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DBCmdTimeout", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsGameInfoNeed")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_IsGameInfoNeed
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsGameInfoNeed", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsGameInfoNeed", value);
            }
        }
        
        [System.ComponentModel.DisplayName("RcvPort")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_RcvPort
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "RcvPort", 11112);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "RcvPort", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SendPort")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_SendPort
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "SendPort", 1031);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "SendPort", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsCrossTktEn")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_IsCrossTktEn
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsCrossTktEn", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsCrossTktEn", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsUpdateTktQue")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_IsUpdateTktQue
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsUpdateTktQue", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsUpdateTktQue", value);
            }
        }
        
        [System.ComponentModel.DisplayName("UseSlotDate")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_UseSlotDate
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "UseSlotDate", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "UseSlotDate", value);
            }
        }
        
        [System.ComponentModel.DisplayName("UseBCDDateFormat")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_UseBCDDateFormat
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "UseBCDDateFormat", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "UseBCDDateFormat", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Is1AReqForBalReq")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_Is1AReqForBalReq
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Is1AReqForBalReq", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Is1AReqForBalReq", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Is1AReqForECashWd")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_Is1AReqForECashWd
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Is1AReqForECashWd", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Is1AReqForECashWd", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Is1AReqForECashDep")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_Is1AReqForECashDep
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Is1AReqForECashDep", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Is1AReqForECashDep", value);
            }
        }
        
        [System.ComponentModel.DisplayName("IsUpdateEvtToSTM")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_IsUpdateEvtToSTM
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsUpdateEvtToSTM", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsUpdateEvtToSTM", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CommsFailRtryCnt")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_CommsFailRtryCnt
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "CommsFailRtryCnt", 2);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "CommsFailRtryCnt", value);
            }
        }
        
        [System.ComponentModel.DisplayName("DisMachineWhenRemove")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_DisMachineWhenRemove
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DisMachineWhenRemove", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DisMachineWhenRemove", value);
            }
        }
        
        [System.ComponentModel.DisplayName("dwSectorWaitTime")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_dwSectorWaitTime
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "dwSectorWaitTime", 2000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "dwSectorWaitTime", value);
            }
        }
        
        [System.ComponentModel.DisplayName("UpdateError4D")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_UpdateError4D
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "UpdateError4D", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "UpdateError4D", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Iview3AssetNum")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_Iview3AssetNum
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Iview3AssetNum", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Iview3AssetNum", value);
            }
        }
        
        [System.ComponentModel.DisplayName("TotInstGrp")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_TotInstGrp
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "TotInstGrp", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "TotInstGrp", value);
            }
        }
        
        [System.ComponentModel.DisplayName("InsPerDelay")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_InsPerDelay
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "InsPerDelay", 10);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "InsPerDelay", value);
            }
        }
        
        [System.ComponentModel.DisplayName("MsgTimeOut")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Events")]
        public int Honeyframe_Cashmaster_Exchange_Events_MsgTimeOut
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MsgTimeOut", 25000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MsgTimeOut", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Log")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Logging")]
        public int Honeyframe_Cashmaster_Exchange_Logging_Log
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Logging, "Log", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Logging, "Log", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Create")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MC\\Switch")]
        public int Honeyframe_Cashmaster_Exchange_MC_Switch_Create
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "Create", 1);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "Create", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Interval")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MC\\Switch")]
        public int Honeyframe_Cashmaster_Exchange_MC_Switch_Interval
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "Interval", 500);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "Interval", value);
            }
        }
        
        [System.ComponentModel.DisplayName("unkwn_UDP_Interval")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MC\\Switch")]
        public int Honeyframe_Cashmaster_Exchange_MC_Switch_unkwn_UDP_Interval
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "unkwn_UDP_Interval", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "unkwn_UDP_Interval", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Server_Protect")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MC\\Switch")]
        public int Honeyframe_Cashmaster_Exchange_MC_Switch_Server_Protect
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "Server_Protect", 1000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "Server_Protect", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Interval")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MC\\TIME")]
        public string Honeyframe_Cashmaster_Exchange_MC_TIME_Interval
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_TIME, "Interval", "23");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_TIME, "Interval", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Path")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MSMQ")]
        public string Honeyframe_Cashmaster_Exchange_MSMQ_Path
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "Path", ".\\private$\\Exchangequeue");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "Path", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ExceptionTimeDelay")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MSMQ")]
        public string Honeyframe_Cashmaster_Exchange_MSMQ_ExceptionTimeDelay
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "ExceptionTimeDelay", "5");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "ExceptionTimeDelay", value);
            }
        }
        
        [System.ComponentModel.DisplayName("CheckDenomChangeForRamReset")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MSMQ")]
        public bool Honeyframe_Cashmaster_Exchange_MSMQ_CheckDenomChangeForRamReset
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "CheckDenomChangeForRamReset", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "CheckDenomChangeForRamReset", value);
            }
        }
        
        [System.ComponentModel.DisplayName("QueueWaitTimeOut")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MSMQ")]
        public string Honeyframe_Cashmaster_Exchange_MSMQ_QueueWaitTimeOut
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "QueueWaitTimeOut", "20");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "QueueWaitTimeOut", value);
            }
        }
        
        [System.ComponentModel.DisplayName("TicketPriorityQueuePath")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MSMQ")]
        public string Honeyframe_Cashmaster_Exchange_MSMQ_TicketPriorityQueuePath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "TicketPriorityQueuePath", ".\\Private$\\ticketprtqueue");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "TicketPriorityQueuePath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("TicketPriorityQueueLabel")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MSMQ")]
        public string Honeyframe_Cashmaster_Exchange_MSMQ_TicketPriorityQueueLabel
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "TicketPriorityQueueLabel", "TicketPrint");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "TicketPriorityQueueLabel", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SDTMessageQueuePath")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MSMQ")]
        public string Honeyframe_Cashmaster_Exchange_MSMQ_SDTMessageQueuePath
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "SDTMessageQueuePath", ".\\Private$\\sdtqueue");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "SDTMessageQueuePath", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SDTSingleSocketMessageQueue")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MSMQ")]
        public bool Honeyframe_Cashmaster_Exchange_MSMQ_SDTSingleSocketMessageQueue
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "SDTSingleSocketMessageQueue", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "SDTSingleSocketMessageQueue", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ShowLogXML")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\MSMQ")]
        public bool Honeyframe_Cashmaster_Exchange_MSMQ_ShowLogXML
        {
            get
            {
                return this._configProvider.GetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "ShowLogXML", false);
            }
            set
            {
                this._configProvider.SetValue<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "ShowLogXML", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Retry")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Polling")]
        public int Honeyframe_Cashmaster_Exchange_Polling_Retry
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "Retry", 5);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "Retry", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Interval")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Polling")]
        public int Honeyframe_Cashmaster_Exchange_Polling_Interval
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "Interval", 500);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "Interval", value);
            }
        }
        
        [System.ComponentModel.DisplayName("unkwn_UDP_Interval")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Polling")]
        public int Honeyframe_Cashmaster_Exchange_Polling_unkwn_UDP_Interval
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "unkwn_UDP_Interval", 1000);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "unkwn_UDP_Interval", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Server_Protect")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Polling")]
        public int Honeyframe_Cashmaster_Exchange_Polling_Server_Protect
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "Server_Protect", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "Server_Protect", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Read")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Timeouts")]
        public int Honeyframe_Cashmaster_Exchange_Timeouts_Read
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Timeouts, "Read", 8192);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Timeouts, "Read", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Interval")]
        [System.ComponentModel.Category("Honeyframe\\Cashmaster\\Exchange\\Timeouts")]
        public int Honeyframe_Cashmaster_Exchange_Timeouts_Interval
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Timeouts, "Interval", 500);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Timeouts, "Interval", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ServerIP")]
        [System.ComponentModel.Category("Honeyframe\\NetLogger")]
        public string Honeyframe_NetLogger_ServerIP
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_NetLogger, "ServerIP", "");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_NetLogger, "ServerIP", value);
            }
        }
        
        [System.ComponentModel.DisplayName("ServerPort")]
        [System.ComponentModel.Category("Honeyframe\\NetLogger")]
        public int Honeyframe_NetLogger_ServerPort
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_NetLogger, "ServerPort", 6850);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_NetLogger, "ServerPort", value);
            }
        }
        
        [System.ComponentModel.DisplayName("Location")]
        [System.ComponentModel.Category("Honeyframe\\NoteCounter")]
        public string Honeyframe_NoteCounter_Location
        {
            get
            {
                return this._configProvider.GetValue<string>(Config_ExchangeServer._s_Honeyframe_NoteCounter, "Location", "C:\\\\CashmasterExchange");
            }
            set
            {
                this._configProvider.SetValue<string>(Config_ExchangeServer._s_Honeyframe_NoteCounter, "Location", value);
            }
        }
        
        [System.ComponentModel.DisplayName("SimulateNoteCounter")]
        [System.ComponentModel.Category("Honeyframe\\NoteCounter")]
        public int Honeyframe_NoteCounter_SimulateNoteCounter
        {
            get
            {
                return this._configProvider.GetValue<int>(Config_ExchangeServer._s_Honeyframe_NoteCounter, "SimulateNoteCounter", 0);
            }
            set
            {
                this._configProvider.SetValue<int>(Config_ExchangeServer._s_Honeyframe_NoteCounter, "SimulateNoteCounter", value);
            }
        }
        
        public override void Initialize(bool load)
        {
            this.Initialize_Honeyframe();
            this.Initialize_Honeyframe_Cashmaster();
            this.Initialize_Honeyframe_Cashmaster_BGSLogger();
            this.Initialize_Honeyframe_Cashmaster_BGSLogger_BGSComExchange();
            this.Initialize_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost();
            this.Initialize_Honeyframe_Cashmaster_BGSLogger_BGSExchangeMonitor();
            this.Initialize_Honeyframe_Cashmaster_BGSLogger_BGSVTP();
            this.Initialize_Honeyframe_Cashmaster_BGSLogger_ExServiceThread();
            this.Initialize_Honeyframe_Cashmaster_BMCDHCP();
            this.Initialize_Honeyframe_Cashmaster_BMCDHCP_STATIC_IP();
            this.Initialize_Honeyframe_Cashmaster_Exchange();
            this.Initialize_Honeyframe_Cashmaster_Exchange_Aft();
            this.Initialize_Honeyframe_Cashmaster_Exchange_Debug();
            this.Initialize_Honeyframe_Cashmaster_Exchange_EPI();
            this.Initialize_Honeyframe_Cashmaster_Exchange_Events();
            this.Initialize_Honeyframe_Cashmaster_Exchange_Logging();
            this.Initialize_Honeyframe_Cashmaster_Exchange_MC();
            this.Initialize_Honeyframe_Cashmaster_Exchange_MC_Switch();
            this.Initialize_Honeyframe_Cashmaster_Exchange_MC_TIME();
            this.Initialize_Honeyframe_Cashmaster_Exchange_MSMQ();
            this.Initialize_Honeyframe_Cashmaster_Exchange_Polling();
            this.Initialize_Honeyframe_Cashmaster_Exchange_Timeouts();
            this.Initialize_Honeyframe_NetLogger();
            this.Initialize_Honeyframe_NoteCounter();
            this._configProvider.IsMetadataInitialized = true;
            if ((load == true))
            {
                this.Load();
            }
        }
        
        public override void Load()
        {
            this._configProvider.Load();
        }
        
        public override void Save()
        {
            this._configProvider.Save();
        }
        
        private void Initialize_Honeyframe()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe, "InstallationPath", "C:\\Program Files\\Bally Technologies\\Exchange Server\\");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe, "InstallationType", "ExchangeServer");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe, "SQLCommandTimeout", "60");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe, "CertificateSerialNumber", "0E8DB4B5BD770F972F2974C381CF0CDD");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe, "DisableLogging", false);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe, "DefaultLogDir", "C:\\Logs");
        }
        
        private void Initialize_Honeyframe_Cashmaster()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "ExchangeKey", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LFMWebService", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "EnterpriseKey", "");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "IsTripleDES", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "UpdateAvalible", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteDatapackNotUsed", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoSingleCoinModelsDisplayed", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteManualMetersNotUsed", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoSerialNumberDisplayed", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoAltSerialNumberDisplayed", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "BufferDatapak", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteTokensNotUsed", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteSingleCoinNotUsed", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "AddCashToExistingBreakdown", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteMeterRefillsNotUsed", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteHandpayNotUsed", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteTreasuryMemberNoNotUsed", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "VTPNotesUsed", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "TreasuryDateTimeEnabled", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "HandHeldUsed", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "ResetDatapakFloat", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashBankedReport", false);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxMeterCash", "10000");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "XMLExport", true);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CurrentView", "List");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Mon", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Tue", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Wed", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Thu", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Fri", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Sat", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Open_Sun", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashCounterType", "14");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashCounterComPort", "1");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_1_Value", "1");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_2_Value", "2");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_3_Value", "5");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_4_Value", "10");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_5_Value", "20");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_6_Value", "50");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_7_Value", "50");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_8_Value", "100");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CoinSlot_9_Value", "200");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Presentation", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "FullCollectionsAcceptAll", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "DeclarationRefills", false);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxVariationBetweenRDCCashMeters", "3");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxPercentageAgainstAverage", "5");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "MaxMeterTolerance", "1000");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "IgnoreRDCNotes", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CashCounterWithNoteCounter", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SitePartialMetersNotUsed", true);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "Connection", "1");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SiteRDCRefillsNotUsed", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LogDoor", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LogEvent", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "ComExchange", true);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "DBServer", "");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "offlinereads", true);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "TimeSyncDelay", "5");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "AutoRead", true);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "AutoFrequency", "Daily");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LastAutoRead", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LastUser", "Bally");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CollectionDisplayByZone", true);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SpotCheckDisplayByZone", false);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SQLConnect", "");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "IsRSAEnabled", false);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "RSAPublicKeyPath", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "RSAPrivateKeyPath", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "RSAPrivateKeyPassword", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "LimitTimeSync", "15,16");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SAS_UpdateTicketDetails", true);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "HourlyReadHour", "12");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_1_Value", "1");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_2_Value", "5");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_3_Value", "10");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_4_Value", "20");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_5_Value", "50");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_6_Value", "100");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_7_Value", "0");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_8_Value", "0");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_9_Value", "0");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "NoteSlot_10_Value", "0");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "BGSWebService", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "EnhancedEnrollmentStatus", "ONLINE");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "SQLConnectEx", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "TicketingSQLConnect", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "PCConnect", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster, "CMPWebserviceURL", "");
        }
        
        private void Initialize_Honeyframe_Cashmaster_BGSLogger()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger, "DefaultFile", "c:\\\\logs\\\\otherlogging.txt");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger, "maxlogs", "100");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger, "maxfilesize", "2000");
        }
        
        private void Initialize_Honeyframe_Cashmaster_BGSLogger_BGSComExchange()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSComExchange, "DefaultFile", "c:\\\\Logs\\\\BGSExchangeMonitor.txt");
        }
        
        private void Initialize_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost()
        {
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Mtrchk", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Mtrlog", 1);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Location", "C:\\\\CashmasterExchange");
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "Log", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "NumOfCommLogs", 10);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "MaxLogFileSize", 1024);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "EthReadLog", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "EthWriteLog", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "CCMtrLogTimeOut", 3600000);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeHost, "CommSessionCrit_log", 0);
        }
        
        private void Initialize_Honeyframe_Cashmaster_BGSLogger_BGSExchangeMonitor()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSExchangeMonitor, "DefaultFile", "c:\\\\Logs\\\\BGSExchangeMonitor.txt");
        }
        
        private void Initialize_Honeyframe_Cashmaster_BGSLogger_BGSVTP()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_BGSVTP, "DefaultFile", "c:\\\\Logs\\\\VTP.txt");
        }
        
        private void Initialize_Honeyframe_Cashmaster_BGSLogger_ExServiceThread()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BGSLogger_ExServiceThread, "DefaultFile", "c:\\\\Logs\\\\BGSExchangeMonitor.txt");
        }
        
        private void Initialize_Honeyframe_Cashmaster_BMCDHCP()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "ServerIP", "10.0.0.10");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "NetMask", "255.255.0.0");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "GatewayIP", "10.0.0.1");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "DNSIP", "10.0.0.1");
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP, "LeaseTime", 6850);
        }
        
        private void Initialize_Honeyframe_Cashmaster_BMCDHCP_STATIC_IP()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_BMCDHCP_STATIC_IP, "Default", "");
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "multicastip", "239.192.1.1");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "interface", "");
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "TktExpDays", 10);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ServerIPPort", 6810);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "BindIPAddress", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ExchangeDir", "c:\\CashmasterExchange");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Use_Total_Financials", "10.0.0.1");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "SERVICE_IP_PORT", "60000");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ignore_last_counter", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Debug_Logging", true);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "max_mins_between_meters", "1");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Exchange_Multi_Max_Processors", "50");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Exchange_Multi_ReadSector_Timeout", "60");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Max_Ticket_Timeout", "2");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "meter_read_timeout", "20");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Version11Code", true);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "Async_readsector_timeout", "60");
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "EnableDhcp", 0);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "default_server_ip", "");
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "MaxOffLineTkt", 36);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "SocketLog", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "EnSoftGMU", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "ClientLog", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "BlockingCallTimeOut", 10000);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "OffLineTktLine1", "**** OFFLINE **** OFFLINE ****");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "OffLineTktLine2", "**** OFFLINE **** OFFLINE ****");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange, "UserCompany", "");
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange_Aft()
        {
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "EFTTrans", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "CashDep", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "NonCashDep", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "RedeemOffer", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "PtsWhdrw", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "CashWhdrw", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "PartTrans", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "AutoDepNCC", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "AutoDepCC", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "AFTTimeOut", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt1WhdrwAmt", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt2WhdrwAmt", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt3WhdrwAmt", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt4WhdrwAmt", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Aft, "Opt5WhdrwAmt", 0);
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange_Debug()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Debug, "RegTest", "1");
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange_EPI()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "Card_ID_Store", "1");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "debug_logging", true);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "Connection", "");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "InactivityTimeout", "10");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_EPI, "MeterUpdate", "15");
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange_Events()
        {
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "AFTEnable", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "AFTMsgTimeOut", 25000);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "CardLesPlyTO", 10);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "CashlessPlayer", 10);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DepositOk", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DispCode", 9);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "dwWaitTime", 10);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "EnDisCCMtr", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "EnterAmnt", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Event", 50);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "GmMtrTimeOut", 2000);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "GmPlayedPoll", 1000);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "GMUTimeOut", 10000);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "HPClearEn", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "HPClearPos", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "InitTimeOut", 500);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsHPPollEn", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MeterAckTimeout", 10000);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MeterDataTimeout", 10000);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MtrReqTimeInt", 30000);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "PinReqd", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "RebootOnFail", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Releaselock", 3);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Reset", 1000);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "SASMeterReadInt", 200);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Sector200FailCnt", 5);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "SplPlayer", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsACKReqForCCMtr", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "EncryptEnable", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "RSAEnable", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DBCmdTimeout", 10);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsGameInfoNeed", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "RcvPort", 11112);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "SendPort", 1031);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsCrossTktEn", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsUpdateTktQue", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "UseSlotDate", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "UseBCDDateFormat", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Is1AReqForBalReq", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Is1AReqForECashWd", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Is1AReqForECashDep", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "IsUpdateEvtToSTM", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "CommsFailRtryCnt", 2);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "DisMachineWhenRemove", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "dwSectorWaitTime", 2000);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "UpdateError4D", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "Iview3AssetNum", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "TotInstGrp", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "InsPerDelay", 10);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Events, "MsgTimeOut", 25000);
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange_Logging()
        {
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Logging, "Log", 0);
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange_MC()
        {
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange_MC_Switch()
        {
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "Create", 1);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "Interval", 500);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "unkwn_UDP_Interval", 0);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_Switch, "Server_Protect", 1000);
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange_MC_TIME()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MC_TIME, "Interval", "23");
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange_MSMQ()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "Path", ".\\private$\\Exchangequeue");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "ExceptionTimeDelay", "5");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "CheckDenomChangeForRamReset", false);
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "QueueWaitTimeOut", "20");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "TicketPriorityQueuePath", ".\\Private$\\ticketprtqueue");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "TicketPriorityQueueLabel", "TicketPrint");
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "SDTMessageQueuePath", ".\\Private$\\sdtqueue");
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "SDTSingleSocketMessageQueue", false);
            this.Initialize<bool>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_MSMQ, "ShowLogXML", false);
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange_Polling()
        {
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "Retry", 5);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "Interval", 500);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "unkwn_UDP_Interval", 1000);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Polling, "Server_Protect", 0);
        }
        
        private void Initialize_Honeyframe_Cashmaster_Exchange_Timeouts()
        {
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Timeouts, "Read", 8192);
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_Cashmaster_Exchange_Timeouts, "Interval", 500);
        }
        
        private void Initialize_Honeyframe_NetLogger()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_NetLogger, "ServerIP", "");
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_NetLogger, "ServerPort", 6850);
        }
        
        private void Initialize_Honeyframe_NoteCounter()
        {
            this.Initialize<string>(Config_ExchangeServer._s_Honeyframe_NoteCounter, "Location", "C:\\\\CashmasterExchange");
            this.Initialize<int>(Config_ExchangeServer._s_Honeyframe_NoteCounter, "SimulateNoteCounter", 0);
        }
    }
}
