<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imglstSmallIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imglstSmallIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADc
        BgAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEJIAARwCBQEgAu8B+QH/AuUB9wH/AuUB9wH/AuUB9wH/AuUB9wH/AuUB9wH/
        AuUB9wH/AuUB9wH/AuUB9wH/AuUB9wH/AuUB9wH/AuUB9wH/AuUB9wH/Au0B+QH/ATQCDwE8wAAE/wJr
        AcwB/wI0AcMB/wI0AcMB/wI0AcMB/wI0AcMB/wI0AcMB/wI0AcMB/wI0AcMB/wI0AcMB/wI0AcMB/wI0
        AcMB/wI0AcMB/wI0AcMB/wJjAcsB/wLuAfkB/8AABP8COAHGAf8CNgHGAf8CNgHGAf8CNgHGAf8CNgHG
        Af8CNgHGAf8CNgHGAf8CNgHGAf8CNgHGAf8CNgHGAf8CNgHGAf8CNgHGAf8CNgHGAf8CNwHGAf8C5gH4
        Af9cAAT/YAAE/wI6AcoB/wI6AcoB/wI6AcoB/wI6AcoB/wI6AcoB/wI6AcoB/wI6AcoB/wI6AcoB/wI6
        AcoB/wI6AcoB/wI6AcoB/wI6AcoB/wI6AcoB/wI6AcoB/wLnAfkB/1wABP8wAAj/FAAI/wwABP8CPwHP
        Af8CPwHPAf8CPwHPAf8CPgHLAf8CPAHFAf8CPQHFAf8CPwHOAf8CPwHPAf8CPQHGAf8CPAHEAf8CPQHK
        Af8CPwHPAf8CPwHPAf8CPwHPAf8C5wH5Af9cAAT/NAAI/wwACP8QAAT/AkMB1AH/AkMB1AH/AkMB1AH/
        AnEB3QH/AqwB5wH/AqIB5AH/Ak0BzAH/AkEByQH/Ap8B4gH/Aq8B6AH/AnwB3wH/AkMB1AH/AkMB1AH/
        AkMB1AH/AugB+gH/UAAc/ywACP8EAAj/FAAE/wJIAdkB/wJIAdkB/wJIAdkB/wJPAdsB/wKbAeoB/wLX
        AfYB/wK2AesB/wKwAekB/wLaAfcB/wKpAe0B/wJRAdwB/wJIAdkB/wJIAdkB/wJIAdkB/wLoAfoB/1QA
        BP8IAAj/NAAM/xgABP8CTAHfAf8CTAHfAf8CTAHfAf8CTAHfAf8CTAHfAf8BhQGEAeYB/wLeAfkB/wLo
        AfsB/wKOAecB/wJMAd8B/wJMAd8B/wJMAd8B/wJMAd8B/wJMAd8B/wLpAfsB/1QABP8IAAj/NAAM/xgA
        BP8CUQHlAf8CUQHlAf8CUQHlAf8CUAHkAf8CWAHcAf8BlQGUAeUB/wLiAfkB/wLrAfwB/wGfAZ4B5wH/
        AloB2wH/AlAB4wH/AlEB5QH/AlEB5QH/AlEB5QH/AukB/AH/VAAE/wgACP8wAAj/BAAI/xQABP8CVQHq
        Af8CVQHqAf8CVQHqAf8CYwHmAf8CsgHwAf8C6AH8Af8CugH4Af8CswH3Af8C6gH9Af8CwAHyAf8BZwFm
        AeUB/wJVAeoB/wJVAeoB/wJVAeoB/wLqAfwB/1QABP8IAAj/LAAI/wwACP8QAAT/AloB8AH/AloB8AH/
        AloB8AH/AoEB9AH/ArQB+QH/AqwB+AH/AmQB8QH/AloB8AH/AqkB+AH/ArcB+QH/AokB9QH/AloB8AH/
        AloB8AH/AloB8AH/AuoB/QH/VAAE/wgACP8oAAj/FAAI/wwABP8CXgH0Af8CXgH0Af8CXgH0Af8CXgH0
        Af8CXgH0Af8CXgH0Af8CXgH0Af8CXgH0Af8CXgH0Af8CXgH0Af8CXgH0Af8CXgH0Af8CXgH0Af8CXgH0
        Af8C6wH+Af9UABT/WAAE/wJhAfkB/wJhAfkB/wJhAfkB/wJhAfkB/wJhAfkB/wJhAfkB/wJhAfkB/wJh
        AfkB/wJhAfkB/wJhAfkB/wJhAfkB/wJhAfkB/wJhAfkB/wJhAfkB/wLrAf4B/8AABP8CZwH8Af8CZAH8
        Af8CZAH8Af8CZAH8Af8CZAH8Af8CZAH8Af8CZAH8Af8CZAH8Af8CZAH8Af8CZAH8Af8CZAH8Af8CZAH8
        Af8CZAH8Af8CZgH8Af8C7AL/wAAE/wKXAfcB/wJnAv8CZwL/AmcC/wJnAv8CZwL/AmcC/wJnAv8CZwL/
        AmcC/wJnAv8CZwL/AmcC/wKQAfkB/wLzAf4B/8QAOP8BHAIFASBAAAFCAU0BPgcAAT4DAAEoAwABQAMA
        ARADAAEBAQABAQUAAYAXAAP/AQAE/wQABP8EAAT/BAAB/gP/BAAB/gH/AfMB5wQAAf4B/wH5Ac8EAAHw
        AR8B/AGfBAAB+wE/Af4BPwQAAfsBPwH+AT8EAAH7AT8B/AGfBAAB+wE/AfkBzwQAAfsBPwHzAecEAAH4
        AT8C/wQABP8EAAT/BAAE/wGAAwAL
</value>
  </data>
</root>